(*********************************************

  Import-Export
  Version   := RSLogix 5000 v19.01
  Owner     := , 
  Exported  := Wed Jan 05 21:17:26 2022

  Note:  File encoded in UTF-8.  Only edit file in a program 
         which supports UTF-8 (like Notepad, not Wordpad).

**********************************************)
IE_VER := 2.10;

CONTROLLER Safety (ProcessorType := "1756-L63S",
                   Major := 19,
                   TimeSlice := 30,
                   ShareUnusedTimeSlice := 1,
                   CommPath := "AB_ETHIP-1\192.168.1.11\Backplane\0",
                   RedundancyEnabled := 0,
                   KeepTestEditsOnSwitchOver := 0,
                   DataTablePadPercentage := 50,
                   SecurityCode := 0,
                   SFCExecutionControl := "CurrentActive",
                   SFCRestartPosition := "MostRecent",
                   SFCLastScan := "DontScan",
                   SerialNumber := 16#0078_f37e,
                   MatchProjectToController := No,
                   CanUseRPIFromProducer := No,
                   SafetyLocked := Yes,
                   SafetyTagMap := " Map_ShDie=SftyMap_ShDie, Map_Mach=SftyMap_Mach, Map_Citect=SftyMap_Citect",
                   ConfigureSafetyIOAlways := No,
                   InhibitAutomaticFirmwareUpdate := 0)
	DATATYPE UDT_CardSts (FamilyType := NoFamily)
		DINT EntrySts (Description := "Entry Status");
		SINT ZZZZZZZZZZUDT_CardSt1 (Hidden := 1);
		BIT StandBy ZZZZZZZZZZUDT_CardSt1 : 0 (Description := "Stand By");
		BIT Faulted ZZZZZZZZZZUDT_CardSt1 : 1 (Description := "Faulted");
		BIT Validating ZZZZZZZZZZUDT_CardSt1 : 2 (Description := "Validating");
		BIT Connecting ZZZZZZZZZZUDT_CardSt1 : 3 (Description := "Connecting");
		BIT Running ZZZZZZZZZZUDT_CardSt1 : 4 (Description := "Running$NConnection OK");
		BIT ShuttingDown ZZZZZZZZZZUDT_CardSt1 : 5 (Description := "Shutting Down");
		BIT Inhibited ZZZZZZZZZZUDT_CardSt1 : 6 (Description := "Inhibited");
		BIT Waiting ZZZZZZZZZZUDT_CardSt1 : 7 (Description := "Waiting");
	END_DATATYPE

	DATATYPE UDT_ShearStatus (FamilyType := NoFamily)
		SINT ZZZZZZZZZZUDT_ShearS0 (Hidden := 1);
		BIT Heartbeat ZZZZZZZZZZUDT_ShearS0 : 0 (Description := "Safety Status Heartbeat");
		BIT CoastStop ZZZZZZZZZZUDT_ShearS0 : 1 (Description := "Safety Status  Coast Stop  (0=Coast Stop) ( 1=OK)");
		BIT No_EStops ZZZZZZZZZZUDT_ShearS0 : 2 (Description := "Safety Status  (0 = EStop)  (1=OK)");
		BIT No_Faults ZZZZZZZZZZUDT_ShearS0 : 3 (Description := "Safety Status  (1=No Faults)");
		BIT No_Motion ZZZZZZZZZZUDT_ShearS0 : 4 (Description := "Safety Status  (1=No Motion)");
		BIT GuardsOK ZZZZZZZZZZUDT_ShearS0 : 5 (Description := "Safety Status Guards OK ( 1= OK)");
		BIT All_Drives_Off ZZZZZZZZZZUDT_ShearS0 : 6 (Description := "Safety Status All Drives Off  (1=Off)");
		BIT ResetInput ZZZZZZZZZZUDT_ShearS0 : 7 (Description := "Safety Status  Reset Input  (1=Reset)");
		SINT ZZZZZZZZZZUDT_ShearS9 (Hidden := 1);
		BIT FaultReset ZZZZZZZZZZUDT_ShearS9 : 0 (Description := "Safety Status (1=Fault Reset)");
		BIT CircuitReset ZZZZZZZZZZUDT_ShearS9 : 1 (Description := "Safety Status (1=Circuit Reset)");
		TIMER CircuitResetTimer (Description := "Safety Status Circuit Reset Timer");
		TIMER StopTimer (Description := "Safety Status  Stop Timer Delay to Coast Drives");
		BOOL BOOL[32] (Description := "Spare BOOLS");
		DINT DINT[5] (Description := "Spare DINT");
	END_DATATYPE

	DATATYPE UDT_SysStatus (FamilyType := NoFamily)
		SINT ZZZZZZZZZZUDT_SysSta0 (Hidden := 1);
		BIT Heartbeat ZZZZZZZZZZUDT_SysSta0 : 0 (Description := "Safety Status$NHeartbeat");
		BIT CoastStop_CTC ZZZZZZZZZZUDT_SysSta0 : 1 (Description := "Coil To Coil$NSafety Status $NCoast Stop $N(0=Coast Stop)$N( 1=OK)");
		BIT CoastStop_CTL ZZZZZZZZZZUDT_SysSta0 : 2 (Description := "Cut To Length$NSafety Status $NCoast Stop $N(0=Coast Stop)$N( 1=OK)");
		BIT CoastStop_Total ZZZZZZZZZZUDT_SysSta0 : 3 (Description := "Total Mode$NSafety Status $NCoast Stop $N(0=Coast Stop)$N( 1=OK)");
		BIT No_CTC_EStops ZZZZZZZZZZUDT_SysSta0 : 4 (Description := "CTC Safety Status $N(0 = EStop) $N(1=OK)");
		BIT No_CTL_EStops ZZZZZZZZZZUDT_SysSta0 : 5 (Description := "CTL Safety Status $N(0 = EStop) $N(1=OK)");
		BIT No_Total_Estops ZZZZZZZZZZUDT_SysSta0 : 6 (Description := "Total Safety Status $N(0 = EStop) $N(1=OK)");
		BIT No_CTC_Faults ZZZZZZZZZZUDT_SysSta0 : 7 (Description := "Coil To Coil$NSafety Status $N(1=No Faults)");
		SINT ZZZZZZZZZZUDT_SysSta9 (Hidden := 1);
		BIT No_CTL_Faults ZZZZZZZZZZUDT_SysSta9 : 0 (Description := "Cut To Length$NSafety Status $N(1=No Faults)");
		BIT No_Total_Faults ZZZZZZZZZZUDT_SysSta9 : 1 (Description := "Total Mode$NSafety Status $N(1=No Faults)");
		BIT No_Motion ZZZZZZZZZZUDT_SysSta9 : 2 (Description := "Safety Status $N(1=No Motion)");
		BIT GuardsOK ZZZZZZZZZZUDT_SysSta9 : 3 (Description := "Safety Status$NGuards OK$N( 1= OK)");
		BIT All_Drives_Off ZZZZZZZZZZUDT_SysSta9 : 4 (Description := "Safety Status$NAll Drives Off $N(1=Off)");
		BIT ResetInput_CTC ZZZZZZZZZZUDT_SysSta9 : 5 (Description := "Safety Status $NCTC Reset Input $N(1=Reset)");
		BIT ResetInput_CTL ZZZZZZZZZZUDT_SysSta9 : 6 (Description := "Safety Status  CTL Reset Input  (1=Reset)");
		BIT ResetInput_Total ZZZZZZZZZZUDT_SysSta9 : 7 (Description := "Safety Status Total Reset Input  (1=Reset)");
		SINT ZZZZZZZZZZUDT_SysSta18 (Hidden := 1);
		BIT FaultReset_CTC ZZZZZZZZZZUDT_SysSta18 : 0 (Description := "Safety Status CTC (1=Fault Reset)");
		BIT FaultReset_CTL ZZZZZZZZZZUDT_SysSta18 : 1 (Description := "Safety Status CTL (1=Fault Reset)");
		BIT FaultReset_Total ZZZZZZZZZZUDT_SysSta18 : 2 (Description := "Safety Status Total (1=Fault Reset)");
		BIT CircuitReset_CTC ZZZZZZZZZZUDT_SysSta18 : 3 (Description := "Safety Status$NCTC$N(1=Circuit Reset)");
		BIT CircuitReset_CTL ZZZZZZZZZZUDT_SysSta18 : 4 (Description := "Safety Status CTL (1=Circuit Reset)");
		BIT CircuitReset_Total ZZZZZZZZZZUDT_SysSta18 : 5 (Description := "Safety Status Total (1=Circuit Reset)");
		TIMER CircuitResetTimer_CTC (Description := "Safety Status Circuit Reset Timer");
		TIMER CircuitResetTimer_CTL (Description := "Safety Status CTL Circuit Reset Timer");
		TIMER CircuitResetTimer_Total (Description := "Safety Status Total Circuit Reset Timer");
		TIMER CTCStopTimer (Description := "Coil To Coil$NSafety Status $NStop Timer Delay to Coast Drives");
		TIMER CTLStopTimer (Description := "Cut To Length$NSafety Status  Stop Timer Delay to Coast Drives");
		TIMER TotalStopTimer (Description := "Total Mode$NSafety Status  Stop Timer Delay to Coast Drives");
		BOOL BOOL[32] (Description := "Spare BOOLS");
		DINT DINT[5] (Description := "Spare DINT");
	END_DATATYPE

	MODULE Local (Parent := "Local",
	              ParentModPortId := 1,
	              CatalogNumber := "1756-L63S",
	              Vendor := 1,
	              ProductType := 14,
	              ProductCode := 86,
	              Major := 19,
	              Minor := 11,
	              PortLabel := "RxBACKPLANE",
	              ChassisSize := 17,
	              Slot := 0,
	              Mode := 2#0000_0000_0000_0001,
	              CompatibleModule := 0,
	              KeyMask := 2#0000_0000_0001_1111,
	              SafetyNetwork := 16#0000_38d1_0383_ccd7)
	END_MODULE

	MODULE Safety:Partner (Parent := "Local",
	                       ParentModPortId := 1,
	                       CatalogNumber := "1756-LSP",
	                       Vendor := 1,
	                       ProductType := 14,
	                       ProductCode := 69,
	                       Major := 19,
	                       Minor := 11,
	                       PortLabel := "RxBACKPLANE",
	                       Slot := 1,
	                       Mode := 2#0000_0000_0000_0000,
	                       CompatibleModule := 0,
	                       KeyMask := 2#0000_0000_0001_1111,
	                       SafetyNetwork := 16#0000_0000_0000_0000)
	END_MODULE

	MODULE S2 (Parent := "Local",
	           ParentModPortId := 1,
	           CatalogNumber := "1756-EN2T",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 166,
	           Major := 5,
	           Minor := 8,
	           PortLabel := "RxBACKPLANE",
	           Slot := 2,
	           NodeAddress := "192.168.1.10",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131178</ConfigID></public>___]]]
			ConfigData := [20,0,393217,33554433,256,0];
			CONNECTION Input2 (Rate := 500000,
			                   EventID := 0)
			END_CONNECTION

	END_MODULE

	MODULE SrDie_S1 (Description := "Shear Die Slot 01 ",
	                 Parent := "S2",
	                 ParentModPortId := 2,
	                 CatalogNumber := "1756-EN2T",
	                 Vendor := 1,
	                 ProductType := 12,
	                 ProductCode := 166,
	                 Major := 5,
	                 Minor := 8,
	                 PortLabel := "ENet",
	                 ChassisSize := 10,
	                 Slot := 1,
	                 NodeAddress := "192.168.1.18",
	                 CommMethod := 536870914,
	                 Mode := 2#0000_0000_0000_0000,
	                 CompatibleModule := 1,
	                 KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>4325481</ConfigID></public>___]]]
	END_MODULE

	MODULE ShearDie (Description := "Shear Die Processor$N(Exit Section)",
	                 Parent := "SrDie_S1",
	                 ParentModPortId := 1,
	                 CatalogNumber := "1756-L75",
	                 Vendor := 1,
	                 ProductType := 14,
	                 ProductCode := 96,
	                 Major := 19,
	                 Minor := 13,
	                 PortLabel := "RxBACKPLANE",
	                 Slot := 0,
	                 Mode := 2#0000_0000_0000_0000,
	                 CompatibleModule := 0,
	                 KeyMask := 2#0000_0000_0000_0000)
	END_MODULE

	MODULE MCC2 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 3,
	             Slot := 0,
	             NodeAddress := "192.168.1.41",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "MCC2",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0411_ce63)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1861580314,66887367,14527,16843752,16843009,257,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,-1,64];
					InputForceData := [1,0,0,0,-1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [-1];
					OutputForceData := [-1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC2",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 2,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0411_ce63)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1677162766,66903195,14527,16843752,257,0,257];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,15,64];
					InputForceData := [1,0,0,0,15,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [15];
					OutputForceData := [15,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE CHPLC (Parent := "S2",
	              ParentModPortId := 2,
	              CatalogNumber := "1734-AENTR/A",
	              Vendor := 1,
	              ProductType := 12,
	              ProductCode := 196,
	              Major := 3,
	              Minor := 10,
	              PortLabel := "ENet",
	              ChassisSize := 12,
	              Slot := 0,
	              NodeAddress := "192.168.1.42",
	              CommMethod := 536870914,
	              Mode := 2#0000_0000_0000_0000,
	              CompatibleModule := 1,
	              KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "CHPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-1165305184,74879500,14551,33686018,1000,16842752,0,257,33619968,0,513,50397184,0,769,67174400
		,0,1025,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,-1,-125];
					InputForceData := [1,0,0,0,-1,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "CHPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 2,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,1717256651,74951468,14551,131586,1000,16842752,0,257,33619968,0,513,50397184,0,769,0,0,0,0,0,0,0
		];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,63,-125];
					InputForceData := [1,0,0,0,63,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "CHPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 3,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,1905940090,66154624,14549,0,1000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,0,-125];
					InputForceData := [1,0,0,0,0,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "CHPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 4,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-744509487,67613869,14549,33686504,33686018,514,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,-1,64];
					InputForceData := [1,0,0,0,-1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [-1];
					OutputForceData := [-1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "CHPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 5,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-459842118,67588307,14549,33686504,33686018,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,63,64];
					InputForceData := [1,0,0,0,63,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [63];
					OutputForceData := [63,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "CHPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 6,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,2015074446,70107575,14464,1000,0,16842752,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,0,64];
					InputForceData := [1,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [0];
					OutputForceData := [0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE DPD (Parent := "S2",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 17,
	            Slot := 0,
	            NodeAddress := "192.168.1.77",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "DPD",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 14,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,61962801,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "DPD",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 15,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,736826215,66463262,14748,514,1000,16842752,0,257,33619968,0,513,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,15,-125];
					InputForceData := [1,0,0,0,15,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE SDPLC (Parent := "S2",
	              ParentModPortId := 2,
	              CatalogNumber := "1734-AENTR/A",
	              Vendor := 1,
	              ProductType := 12,
	              ProductCode := 196,
	              Major := 3,
	              Minor := 10,
	              PortLabel := "ENet",
	              ChassisSize := 15,
	              Slot := 0,
	              NodeAddress := "192.168.1.79",
	              CommMethod := 536870914,
	              Mode := 2#0000_0000_0000_0000,
	              CompatibleModule := 1,
	              KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "SDPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-307848609,60420586,14549,514,1000,16842752,0,513,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "SDPLC",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 2,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1677162766,67476593,14865,16843752,257,0,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,15,64];
					InputForceData := [1,0,0,0,15,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [15];
					OutputForceData := [15,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE MCC4 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 6,
	             Slot := 0,
	             NodeAddress := "192.168.1.83",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "MCC4",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-50609334,60749765,14636,514,1000,131072,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,1,-125];
					InputForceData := [1,0,0,0,1,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC4",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 3,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1861580314,60803937,14636,16843752,16843009,257,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,-1,64];
					InputForceData := [1,0,0,0,-1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [-1];
					OutputForceData := [-1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC4",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 4,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,60830125,14636,66536,0,16777216,257];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE MCC5 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 7,
	             Slot := 0,
	             NodeAddress := "192.168.1.96",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "MCC5",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-1803538568,70130734,14636,514,1000,131072,0,2,131072,0,2,131072,0,2,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,0,-125];
					InputForceData := [1,0,0,0,0,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC5",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 3,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1861580314,70181312,14636,16843752,16843009,257,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,-1,64];
					InputForceData := [1,0,0,0,-1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [-1];
					OutputForceData := [-1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC5",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 4,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1861580314,70224156,14636,16843752,16843009,257,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,15,64];
					InputForceData := [1,0,0,0,15,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [15];
					OutputForceData := [15,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC5",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 5,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1702073276,70266656,14636,16843752,0,16777216,257];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,0,64];
					InputForceData := [1,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [0];
					OutputForceData := [0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS16 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 5,
	             Slot := 0,
	             NodeAddress := "192.168.1.97",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS16",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,184001416,73372383,14548,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,65536,250,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS15 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 7,
	             Slot := 0,
	             NodeAddress := "192.168.1.100",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS15",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66439574,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS14 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 15,
	             Slot := 0,
	             NodeAddress := "192.168.1.102",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS14",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,736826215,66480747,14748,514,1000,16842752,0,257,33619968,0,513,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,15,-125];
					InputForceData := [1,0,0,0,15,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS13 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 5,
	             Slot := 0,
	             NodeAddress := "192.168.1.104",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS13",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66499654,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS11 (Parent := "S2",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 10,
	             Slot := 0,
	             NodeAddress := "192.168.1.106",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS11",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66509717,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS9 (Parent := "S2",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 6,
	            Slot := 0,
	            NodeAddress := "192.168.1.108",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS9",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66519655,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE VS2 (Parent := "S2",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 11,
	            Slot := 0,
	            NodeAddress := "192.168.1.110",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "VS2",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 10,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,62045654,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE F1 (Parent := "S2",
	           ParentModPortId := 2,
	           CatalogNumber := "1734-AENTR/A",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 196,
	           Major := 3,
	           Minor := 10,
	           PortLabel := "ENet",
	           ChassisSize := 21,
	           Slot := 0,
	           NodeAddress := "192.168.1.112",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "F1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 19,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1702073276,62091893,14549,16843752,0,16777216,257];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,3,64];
					InputForceData := [1,0,0,0,3,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [3];
					OutputForceData := [3,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "F1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 20,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-1305618411,50154011,14465,514,1000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,0,-125];
					InputForceData := [1,0,0,0,0,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE G1 (Parent := "S2",
	           ParentModPortId := 2,
	           CatalogNumber := "1734-AENTR/A",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 196,
	           Major := 3,
	           Minor := 10,
	           PortLabel := "ENet",
	           ChassisSize := 13,
	           Slot := 0,
	           NodeAddress := "192.168.1.114",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "G1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 11,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,62213451,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "G1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 12,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,1623829970,62244735,14549,2,1000,16842752,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,-125];
					InputForceData := [1,0,0,0,1,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS8 (Parent := "S2",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 12,
	            Slot := 0,
	            NodeAddress := "192.168.1.116",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS8",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66568907,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE E1 (Parent := "S2",
	           ParentModPortId := 2,
	           CatalogNumber := "1734-AENTR/A",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 196,
	           Major := 3,
	           Minor := 10,
	           PortLabel := "ENet",
	           ChassisSize := 11,
	           Slot := 0,
	           NodeAddress := "192.168.1.118",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "E1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 10,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,61895278,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE H1 (Parent := "S2",
	           ParentModPortId := 2,
	           CatalogNumber := "1734-AENTR/A",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 196,
	           Major := 3,
	           Minor := 10,
	           PortLabel := "ENet",
	           ChassisSize := 20,
	           Slot := 0,
	           NodeAddress := "192.168.1.120",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "H1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 5,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,62304334,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "H1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 6,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_38d1_0383_ccd7)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66597237,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE S3 (Parent := "Local",
	           ParentModPortId := 1,
	           CatalogNumber := "1756-EN2T",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 166,
	           Major := 5,
	           Minor := 8,
	           PortLabel := "RxBACKPLANE",
	           Slot := 3,
	           NodeAddress := "192.168.1.11",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131178</ConfigID></public>___]]]
			ConfigData := [20,0,393217,33554433,256,0];
			CONNECTION Input2 (Rate := 500000,
			                   EventID := 0)
			END_CONNECTION

	END_MODULE

	MODULE MCC3 (Parent := "S3",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 6,
	             Slot := 0,
	             NodeAddress := "192.168.1.38",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "MCC3",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0431_4084)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-2066527842,54442703,14636,514,1000,131072,0,2,131072,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,4,-125];
					InputForceData := [1,0,0,0,4,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC3",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 3,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0431_4084)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1861580314,54218609,14636,16843752,16843009,257,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,-4,64];
					InputForceData := [1,0,0,0,-4,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [-4];
					OutputForceData := [-4,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC3",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 4,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0431_4084)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,-1052673977,51886500,14636,16843752,65793,0,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,31,64];
					InputForceData := [1,0,0,0,31,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [31];
					OutputForceData := [31,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE MCC1 (Parent := "S3",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 11,
	             Slot := 0,
	             NodeAddress := "192.168.1.39",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "MCC1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0435_1bc2)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-1441898799,58634640,14636,514,1000,131072,0,2,0,0,0,131072,0,2,131072,0,2,0,0,0,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,0,-125];
					InputForceData := [1,0,0,0,0,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "MCC1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 6,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0435_1bc2)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1773401755,58725656,14636,16843752,16842752,257,0];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,0,64];
					InputForceData := [1,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [0];
					OutputForceData := [0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS3 (Parent := "S3",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 11,
	            Slot := 0,
	            NodeAddress := "192.168.1.40",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS3",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_043a_13f0)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66643395,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE C1 (Parent := "S3",
	           ParentModPortId := 2,
	           CatalogNumber := "1734-AENTR/A",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 196,
	           Major := 3,
	           Minor := 10,
	           PortLabel := "ENet",
	           ChassisSize := 13,
	           Slot := 0,
	           NodeAddress := "192.168.1.43",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "C1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 12,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0449_0997)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,61699345,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 10000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 40.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS2 (Parent := "S3",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 14,
	            Slot := 0,
	            NodeAddress := "192.168.1.47",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS2",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_0438_faf3)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66660864,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS4N (Parent := "S3",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 11,
	             Slot := 0,
	             NodeAddress := "192.168.1.51",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS4N",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_043b_7c7f)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66677255,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "OS4N",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 5,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044c_aa81)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,60766342,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS4S (Parent := "S3",
	             ParentModPortId := 2,
	             CatalogNumber := "1734-AENTR/A",
	             Vendor := 1,
	             ProductType := 12,
	             ProductCode := 196,
	             Major := 3,
	             Minor := 10,
	             PortLabel := "ENet",
	             ChassisSize := 11,
	             Slot := 0,
	             NodeAddress := "192.168.1.57",
	             CommMethod := 536870914,
	             Mode := 2#0000_0000_0000_0000,
	             CompatibleModule := 1,
	             KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS4S",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_043c_3a6b)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66687990,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "OS4S",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 5,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044c_aa81)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,60787079,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS5 (Parent := "S3",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 7,
	            Slot := 0,
	            NodeAddress := "192.168.1.62",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS5",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044a_3dec)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66697412,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS6 (Parent := "S3",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 5,
	            Slot := 0,
	            NodeAddress := "192.168.1.63",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS6",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044b_4b05)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,531936293,66706974,14748,2,1000,16842752,0,257,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE A1 (Parent := "S3",
	           ParentModPortId := 2,
	           CatalogNumber := "1734-AENTR/A",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 196,
	           Major := 3,
	           Minor := 10,
	           PortLabel := "ENet",
	           ChassisSize := 22,
	           Slot := 0,
	           NodeAddress := "192.168.1.68",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "A1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 20,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044c_aa81)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1677162766,61218170,14549,16843752,257,0,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "A1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 21,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044c_aa81)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-307848609,61240610,14549,514,1000,16842752,0,513,0,0,0,0,0,0,0,0,0,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE D1 (Parent := "S3",
	           ParentModPortId := 2,
	           CatalogNumber := "1734-AENTR/A",
	           Vendor := 1,
	           ProductType := 12,
	           ProductCode := 196,
	           Major := 3,
	           Minor := 10,
	           PortLabel := "ENet",
	           ChassisSize := 13,
	           Slot := 0,
	           NodeAddress := "192.168.1.69",
	           CommMethod := 536870914,
	           Mode := 2#0000_0000_0000_0000,
	           CompatibleModule := 1,
	           KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "D1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-OB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 16,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 12,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044e_063b)
			ExtendedProp := [[[___<public><ConfigID>204</ConfigID></public>___]]]
			ConfigData := [30,864,1526903684,61827254,14549,66536,0,16777216,257];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,1,64];
					InputForceData := [1,0,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

			CONNECTION Output (Rate := 50000,
			                   EventID := 0,
			                   TimeoutMultiplier := 2,
			                   NetworkDelayMultiplier := 200,
			                   ReactionTimeLimit := 150.064)
					OutputData (Class := Safety) := [1];
					OutputForceData := [1,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE OS1 (Parent := "S3",
	            ParentModPortId := 2,
	            CatalogNumber := "1734-AENTR/A",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 196,
	            Major := 3,
	            Minor := 10,
	            PortLabel := "ENet",
	            ChassisSize := 13,
	            Slot := 0,
	            NodeAddress := "192.168.1.70",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>131073</ConfigID></public>___]]]
	END_MODULE

	MODULE $NoName (Parent := "OS1",
	            ParentModPortId := 1,
	            CatalogNumber := "1734-IB8S/A",
	            Vendor := 1,
	            ProductType := 35,
	            ProductCode := 15,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "RxBACKPLANE",
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyNetwork := 16#0000_3880_044f_07d4)
			ExtendedProp := [[[___<public><ConfigID>108</ConfigID></public>___]]]
			ConfigData := [86,864,-1469338377,66731756,14748,2,1000,16842752,0,257,131072,0,2,131072,0,2,131072,0,2,0,0,0,0];
			CONNECTION Input (Rate := 50000,
			                  EventID := 0,
			                  TimeoutMultiplier := 2,
			                  NetworkDelayMultiplier := 200,
			                  ReactionTimeLimit := 200.064)
					InputData (Class := Safety) := [1,3,-125];
					InputForceData := [1,0,0,0,3,-125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE Machine (Parent := "Local",
	                ParentModPortId := 1,
	                CatalogNumber := "1756-L75",
	                Vendor := 1,
	                ProductType := 14,
	                ProductCode := 96,
	                Major := 19,
	                Minor := 13,
	                PortLabel := "RxBACKPLANE",
	                Slot := 8,
	                Mode := 2#0000_0000_0000_0000,
	                CompatibleModule := 0,
	                KeyMask := 2#0000_0000_0000_0000)
	END_MODULE

	MODULE S16 (Parent := "Local",
	            ParentModPortId := 1,
	            CatalogNumber := "1756-EN2T",
	            Vendor := 1,
	            ProductType := 12,
	            ProductCode := 166,
	            Major := 5,
	            Minor := 8,
	            PortLabel := "RxBACKPLANE",
	            Slot := 16,
	            NodeAddress := "192.168.1.200",
	            CommMethod := 536870914,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>4325481</ConfigID></public>___]]]
	END_MODULE

	TAG
		A1_CoilCarSolPwrEn : BOOL (Description := "A1$NUNW COIL CAR$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		A1_IO : UDT_CardSts[32] (Description := "A1$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		A1_IOSts_Flt : BOOL (Description := "A1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		A1_S20_ModFlt OF Flt_Modules[0].0 (Description := "A1$N Point I/O Slot20$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		A1_S21_ModFlt OF Flt_Modules[0].1 (Description := "A1$N Point I/O Slot21$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		A1_SolPwrEn : BOOL (Description := "A1$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		A1_UnwLC_OK : BOOL (Description := "Unwind $NLight Curtain$NA/B$N( 1= Not Blocked)$N( 0= Blocked)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		A1_UnwLC_RstCmd : BOOL (Description := "Unwind Light Curtain$N Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		C1_IO : UDT_CardSts[32] (Description := "C1$NPoint I/O",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		C1_IOSts_Flt : BOOL (Description := "C1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		C1_S12_ModFlt OF Flt_Modules[0].2 (Description := "C1$N Point I/O Slot12$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		C1_SolPwrEn : BOOL (Description := "C1$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		CC OF Diag_Tmp.0 (Description := "Chris Como$'s$NTest Bit$NAlways On Bit",
		            RADIX := Decimal);
		CC_Toggle : DINT (Description := "TEST",
		            Class := Safety,
		            RADIX := Decimal) := 4;
		ChgMe : BOOL (Class := Safety,
		            RADIX := Decimal) := 0;
		ChgMe_x203PBL620 : BOOL (Description := "Need this from Machine OS1 Panel",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		CHPLC_IO : UDT_CardSts[32] (Description := "CHPLC$NPoint I/O",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		CHPLC_IOSts_Flt : BOOL (Description := "CHPLC$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		CHPLC_S1_ModFlt OF Flt_Modules[0].3 (Description := "CHPLC$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		CHPLC_S2_ModFlt OF Flt_Modules[0].4 (Description := "CHPLC$N Point I/O Slot02$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		CHPLC_S3_ModFlt OF Flt_Modules[0].5 (Description := "CHPLC$N Point I/O Slot03$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		CHPLC_S4_ModFlt OF Flt_Modules[0].6 (Description := "CHPLC$N Point I/O Slot04$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		CHPLC_S5_ModFlt OF Flt_Modules[0].7 (Description := "CHPLC$N Point I/O Slot05$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		CHPLC_S6_ModFlt OF Flt_Modules[0].8 (Description := "CHPLC$N Point I/O Slot06$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		Citect_HB_Flt : BOOL (Description := "Citect$NHeartbeat Fault$N( 1= Fault)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Citect_HB_TOF : TIMER (Description := "Citect $NHeartbeat Timer Off",
		            Class := Safety) := [-1607860208,2000,0];
		Citect_HB_TON : TIMER (Description := "Citect $NHeartbeat Timer On",
		            Class := Safety) := [-1070988396,2000,850];
		CommCards_OK : DINT (Description := "Comm Cards$NOK",
		            COMMENT.0 := "MCC$NComm Cards OK$N( 1= OK)",
		            COMMENT.1 := "Op Stations$N(Entry Section)$NComm Cards OK$N( 1= OK)",
		            COMMENT.2 := "Op Stations$N(Exit Section)$NComm Cards OK$N( 1= OK)",
		            COMMENT.3 := "General I/O$NComm Cards OK$N( 1= OK)",
		            COMMENT.4 := "General I/O$NComm Cards OK$N( 1= OK)",
		            COMMENT.31 := "ALL $NComm Cards$NOK$N( 1= OK)",
		            Class := Standard,
		            RADIX := Decimal) := 30;
		D1_IO : UDT_CardSts[32] (Description := "D1$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		D1_IOSts_Flt : BOOL (Description := "D1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		D1_S12_ModFlt OF Flt_Modules[0].9 (Description := "D1$N Point I/O Slot12$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		D1_SolPwrEn : BOOL (Description := "D1$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		DAM OF Diag_Tmp.4 (Description := "Doug M$NAlways Off$NTest Bit",
		            RADIX := Decimal);
		Daniel_Ponstein_AFI : BOOL (Class := Safety,
		            RADIX := Decimal) := 0;
		Darin_M_Safety_Test_Bit : BOOL (Class := Safety,
		            RADIX := Decimal) := 1;
		Darin_M_Test_Bit : DINT (Class := Safety,
		            RADIX := Decimal) := 0;
		DavidTest : BOOL (Class := Safety,
		            RADIX := Decimal) := 0;
		Diag_Tmp : DINT (Description := "Temp Bit $NTest Bit",
		            COMMENT.0 := "Temporary$NTest Bit 0:$NLogic 1",
		            COMMENT.1 := "Temporary$NTest Bit 1:$NLogic 1",
		            COMMENT.2 := "Temporary$NTest Bit 2:$NLogic 1",
		            COMMENT.3 := "Temporary$NTest Bit 3:$NLogic 1",
		            COMMENT.4 := "Temporary$NTest Bit 4:$NLogic 1",
		            COMMENT.5 := "Temporary$NTest Bit 5:$NLogic 1",
		            COMMENT.6 := "Temporary$NTest Bit 6:$NLogic 1",
		            COMMENT.7 := "Temporary$NTest Bit 6:$NLogic 1",
		            COMMENT.8 := "Temporary$NTest Bit:$NLogic 8",
		            COMMENT.9 := "Temporary$NTest Bit:$NLogic 9",
		            COMMENT.10 := "Temporary$NTest Bit:$NLogic 10",
		            COMMENT.11 := "Temporary$NTest Bit:$NLogic 11",
		            COMMENT.12 := "Temporary$NTest Bit:$NLogic 12",
		            COMMENT.13 := "Temporary$NTest Bit:$NLogic 13",
		            COMMENT.14 := "Temporary$NTest Bit:$NLogic 14",
		            COMMENT.15 := "Temporary$NTest Bit:$NLogic 15",
		            COMMENT.16 := "Temporary$NTest Bit:$NLogic 16",
		            COMMENT.17 := "Temporary$NTest Bit:$NLogic 17",
		            COMMENT.18 := "Temporary$NTest Bit:$NLogic 18",
		            COMMENT.19 := "Temporary$NTest Bit:$NLogic 19",
		            COMMENT.20 := "Temporary$NTest Bit:$NLogic 20",
		            COMMENT.21 := "Temporary$NTest Bit:$NLogic 21",
		            COMMENT.22 := "Temporary$NTest Bit:$NLogic 22",
		            COMMENT.23 := "Temporary$NTest Bit:$NLogic 23",
		            COMMENT.24 := "Temporary$NTest Bit:$NLogic 24",
		            COMMENT.25 := "Temporary$NTest Bit:$NLogic 25",
		            COMMENT.26 := "Temporary$NTest Bit:$NLogic 26",
		            COMMENT.27 := "Temporary$NTest Bit:$NLogic 27",
		            COMMENT.28 := "Temporary$NTest Bit:$NLogic 28",
		            COMMENT.29 := "Temporary$NTest Bit:$NLogic 29",
		            COMMENT.30 := "Temporary$NTest Bit:$NLogic 30",
		            COMMENT.31 := "Temporary$NTest Bit:$NLogic 31",
		            Class := Safety,
		            RADIX := Decimal) := 4079;
		DPD_EstopRstCmd : BOOL (Description := "DPD$NEstop $NReset Cmd",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		DPD_FltRstCmd : BOOL (Description := "DPD$NFault$NReset Cmd",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		DPD_IO : UDT_CardSts[32] (Description := "DPD$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		DPD_IOSts_Flt : BOOL (Description := "DPD$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		DPD_No_EStops : BOOL (Description := "DPD$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		DPD_S14_ModFlt OF Flt_Modules[0].10 (Description := "DPD$N Point I/O Slot14$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		DPD_S15_ModFlt OF Flt_Modules[0].11 (Description := "DPD$N Point I/O Slot15$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		DPD_SolPwrEn : BOOL (Description := "DPD$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Drives_Off : DINT (Description := "Line $NDrives$NOff",
		            COMMENT.0 := "Line$NAll DC Drives Off$N( 1= Drvs Off)",
		            COMMENT.1 := "Line$NAC Drives Off$N( 1= Drvs Off)",
		            COMMENT.2 := "Line$NAC Drives Off$N( 1= Drvs Off)",
		            COMMENT.3 := "Line$NAC Drives Off$N( 1= Drvs Off)",
		            COMMENT.4 := "Shear Die Accelerator$N Drives Off$N( 1= Drvs Off)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		E1_IO : UDT_CardSts[32] (Description := "E1$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		E1_IOSts_Flt : BOOL (Description := "E1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		E1_S10_ModFlt OF Flt_Modules[0].12 (Description := "E1$N Point I/O Slot10$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		E1_SolPwrEn : BOOL (Description := "E1$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		EnBridle_DrvsOff : BOOL (Description := "Entry Bridle$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		EnBridle_SafeOffEn : BOOL (Description := "Entry Bridle$NSafe-Off Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		EnBridle_SafeOffFltRst : BOOL (Description := "Entry Bridle$NSafe-Off$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		ESTOP_x201PB040 : DCI_STOP (Description := "OS1$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,2169149,2,0,2,250,0,0,0];
		ESTOP_x201PB040_Flt OF Flt_Estops.0 (Description := "OS1$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x211PB040 : DCI_STOP (Description := "OS2$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x211PB040_Flt OF Flt_Estops.1 (Description := "OS2$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x221PB040 : DCI_STOP (Description := "OS3$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,532721,2,0,2,250,0,0,0];
		ESTOP_x221PB040_Flt OF Flt_Estops.2 (Description := "OS3$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x231PB040 : DCI_STOP (Description := "OS4N$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,3668331,2,0,2,250,0,0,0];
		ESTOP_x231PB040_Flt OF Flt_Estops.3 (Description := "OS4N$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x241PB040 : DCI_STOP (Description := "OS4S$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,1158552,2,0,2,250,0,0,0];
		ESTOP_x241PB040_Flt OF Flt_Estops.4 (Description := "OS4S$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x251PB040 : DCI_STOP (Description := "OS5$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x251PB040_Flt OF Flt_Estops.5 (Description := "OS5$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x261PB040 : DCI_STOP (Description := "OS6$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,3126265,2,0,2,250,0,0,0];
		ESTOP_x261PB040_Flt OF Flt_Estops.6 (Description := "OS6$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x271PB040 : DCI_STOP (Description := "OS8$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,2053089,2,0,2,250,0,0,0];
		ESTOP_x271PB040_Flt OF Flt_Estops.7 (Description := "OS8$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x281PB040 : DCI_STOP (Description := "OS9$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x281PB040_Flt OF Flt_Estops.8 (Description := "OS9$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x291PB040 : DCI_STOP (Description := "OS11$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x291PB040_Flt OF Flt_Estops.9 (Description := "OS11$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x301PB040 : DCI_STOP (Description := "OS13$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x301PB040_Flt OF Flt_Estops.10 (Description := "OS13$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x311PB040 : DCI_STOP (Description := "OS14$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,3845020,2,0,2,250,0,0,0];
		ESTOP_x311PB040_Flt OF Flt_Estops.11 (Description := "OS14$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x311PB130 : DCI_STOP (Description := "OS14$NShear Estop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,3023744,2,0,2,250,0,0,0];
		ESTOP_x311PB130_Flt OF Flt_Estops.17 (Description := "OS14$NShear EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x321PB040 : DCI_STOP (Description := "OS15$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x321PB040_Flt OF Flt_Estops.12 (Description := "OS15$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x331PB040 : DCI_STOP (Description := "OS16$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x331PB040_Flt OF Flt_Estops.13 (Description := "OS16$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x480PB470 : DCI_STOP (Description := "DPD$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,930488,2,0,2,250,0,0,0];
		ESTOP_x480PB470_Flt OF Flt_Estops.14 (Description := "DPD$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x480PB550 : DCI_STOP (Description := "DPD$N(In Pit)$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x480PB550_Flt OF Flt_Estops.15 (Description := "DPD$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x519LS470 : DCI_STOP (Description := "G1$NTripwire$NLine EStop",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,0,2,0,2,250,0,0,0];
		ESTOP_x519LS470_Flt OF Flt_Estops.18 (Description := "G1$NLine EStop$NTripwire Limit Switch$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		ESTOP_x533PB470 : DCI_STOP (Description := "H1$NLine EStop$NPushbutton",
		            Class := Safety) := [79,0,0,250,196611,0,0,196865,1537,79,2,4,3546085,2,0,2,250,0,0,0];
		ESTOP_x533PB470_Flt OF Flt_Estops.16 (Description := "H1$NLine EStop$NPushbutton Fault$N( 1= Fault)",
		            RADIX := Decimal);
		ES_IndJog_PB : BOOL (Description := "Exit Section$NIndividual Jog$NSelect$N( 1= Req Individual)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		ES_Line_JogPB : BOOL (Description := "Exit Section$NLine Jog PB$N( 1= Ind Jog )",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		ES_Line_RunPB : BOOL (Description := "Exit Section$NLine Run PB$N( 1= Run)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		ES_Line_StopPB : BOOL (Description := "Exit Section$NLine Stop PB$N( 1= OK)$N(0=Stop)",
		            Class := Standard,
		            RADIX := Decimal) := 1;
		ES_Line_ThreadPB : BOOL (Description := "Exit Section$NLine Thread PB$N( 1= Thread)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		ES_TndJog_PB : BOOL (Description := "Exit Section$NTandem$NJog PB$N(1= Tandem Jog Sel)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		ExBridle_DrvsOff : BOOL (Description := "Exit Bridle$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		ExBridle_SafeOffEn : BOOL (Description := "Exit Bridle$NSafe-Off Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		ExBridle_SafeOffFltRst : BOOL (Description := "Exit Bridle$NSafe-Off$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		ExConHydPump_AutoStart : BOOL (Description := "(From Mach)$NExit Conveyor$NHydraulic Pump$NAuto Start Command",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		F1_CoilCarSolPwrEn : BOOL (Description := "F1$NUNW COIL CAR$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		F1_IO : UDT_CardSts[32] (Description := "F1$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		F1_IOSts_Flt : BOOL (Description := "F1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		F1_S19_ModFlt OF Flt_Modules[0].13 (Description := "F1$N Point I/O Slot19$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		F1_S20_ModFlt OF Flt_Modules[0].14 (Description := "F1$N Point I/O Slot20$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		F1_SolPwrEn : BOOL (Description := "F1$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Flattener_FVR_En : BOOL (Description := "Flattener$NFVR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Flattener_FVR_FltRst : BOOL (Description := "Flattener$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Flattener_FVR_FwdCmd : BOOL (Description := "Flattener$NForward Command$N( 1= Run Fwd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Flattener_FVR_RevCmd : BOOL (Description := "Flattener$NReverse Command$N( 1= Run Rev)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		FltsToCitect : DINT[64] (Description := "Faults to Citect",
		            COMMENT[0].0 := "Comm Loss$NMachine PLC",
		            COMMENT[0].1 := "Comm Loss$NShear Die$NPLC",
		            COMMENT[0].3 := "Comm Loss$NSafety Slot$N2",
		            COMMENT[0].4 := "Comm Loss$NSafety Slot$N3",
		            COMMENT[0].5 := "Comm Loss$NSafety Slot$N16",
		            COMMENT[1] := "(Faults to Citect)$NRemote I/O $NComm Faults",
		            COMMENT[2] := "(Faults to Citect)$NEstop PB$NFaults",
		            COMMENT[3] := "(Faults to Citect)$NSafe-Off Relay$NFaults",
		            COMMENT[4] := "(Faults to Citect)$NFVR/FVNR Starter$NFaults",
		            COMMENT[5] := "(Faults to Citect)$NGeneral I/O$NSafety Module$NFaults",
		            COMMENT[6] := "(Faults to Citect)$NOperator Station I/O$NSafety Module$NFaults",
		            COMMENT[7] := "(Faults to Citect)$NMCC I/O$NSafety Module$NFaults",
		            Class := Standard,
		            RADIX := Decimal) := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		Flt_Estops : DINT (Description := "Estop $NFault Word",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Flt_Modules : DINT[5] (Description := "Point$NIO Module$NFault Word",
		            Class := Safety,
		            RADIX := Decimal) := [0,0,0,0,0];
		Flt_SafeOff : DINT[3] (Description := "Safe Off$NFault Word",
		            Class := Safety,
		            RADIX := Decimal) := [0,0,0];
		Flt_Starter : DINT (Description := "Starter$NFault Word",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		FromCitect : DINT[64] (Description := "(From Citect)",
		            COMMENT[0].0 := "(From Citect)$NHeartbeat$NReflected Back",
		            COMMENT[0].1 := "(From Citect)$NExit Conveyor$NHyd Pump$NStart$N",
		            COMMENT[0].2 := "(From Citect)$NExit Conveyor$NHyd Pump$NStop$N",
		            COMMENT[0].3 := "(From Citect)$NSheeter$NHyd Pump$NStart$N",
		            COMMENT[0].4 := "(From Citect)$NSheeter$NHyd Pump$NStop$N",
		            COMMENT[0].5 := "(From Citect)$NCut Length$NLoad PB",
		            COMMENT[0].6 := "(From Citect)$NCut Length$NIncrease PB$N$N",
		            COMMENT[0].7 := "(From Citect)$NCut Length$NDecrease PB$N$N",
		            COMMENT[0].8 := "(From Citect)$NSheet Count$NLoad PB$N$N",
		            COMMENT[0].9 := "(From Citect)$NPos Tolerance$NLoad PB$N$N",
		            COMMENT[0].10 := "(From Citect)$NNeg Tolerance$NLoad PB$N$N",
		            COMMENT[0].11 := "(From Citect)$NWarning Count$NLoad PB$N$N",
		            COMMENT[0].12 := "(From Citect)$NScrap Length$NLoad PB$N$N",
		            COMMENT[0].13 := "(From Citect)$NScrap$NReset PB$N$N",
		            COMMENT[0].14 := "(From Citect)$NSkid Count$NLoad PB$N$N",
		            COMMENT[0].15 := "(From Citect)$NShear Crank$NStart PB",
		            COMMENT[0].16 := "(From Citect)$NShear Crank$NStop PB",
		            COMMENT[0].17 := "(From Citect)$NProduct Conveyors$NStart Command PB$N( 1= Start)",
		            COMMENT[0].18 := "(From Citect)$NProduct Conveyors$NStop Command PB$N( 1= Stop)",
		            COMMENT[0].19 := "(From Citect)",
		            COMMENT[0].20 := "(From Citect)$NShear Pinch Roll$NShort Loop Select$N( 1= Short Loop )",
		            COMMENT[0].21 := "(From Citect)$NShear Pinch Roll$NLong Loop Select$N( 1= Short Loop )",
		            COMMENT[0].22 := "(From Citect)$NStacker Counter$NReset PB",
		            COMMENT[0].23 := "(From Citect)$NStacker Counter$NIncrement PB",
		            COMMENT[0].24 := "(From Citect)$NStacker Counter$NDecrement PB",
		            COMMENT[0].25 := "(From Citect)$NGood Piece Counter$NReset PB",
		            COMMENT[0].26 := "(From Citect)$NGood Piece Counter$NIncrement PB",
		            COMMENT[0].27 := "(From Citect)$NGood Piece Counter$NDecrement PB",
		            COMMENT[0].28 := "(From Citect)$NLot Good Piece Counter$NReset PB",
		            COMMENT[0].29 := "(From Citect)$NLot Good Piece Counter$NIncrement PB",
		            COMMENT[0].30 := "(From Citect)$NLot Good Piece Counter$NDecrement PB",
		            COMMENT[0].31 := "(From Citect)$NScrap Piece Counter$NReset PB",
		            COMMENT[1].0 := "(From Citect)$NScrap Piece Counter$NIncrement PB",
		            COMMENT[1].1 := "(From Citect)$NScrap Piece Counter$NDecrement PB",
		            COMMENT[1].2 := "(From Citect)$NHome Position Set$NCommand$N( 1= Set Home Pos)",
		            COMMENT[1].3 := "(From Citect)$NShear Lube Pump Start Command",
		            COMMENT[1].4 := "(From Citect)$NShear Lube Pump $NStop Command",
		            COMMENT[1].5 := "(From Citect)$NSheeter Lube Pump Start Command",
		            COMMENT[1].6 := "(From Citect)$NSheeter Lube Pump Stop Command",
		            COMMENT[1].7 := "(From Citect)$NShear Metering $NBack Up Roll$NLight Gage Select",
		            COMMENT[1].8 := "(From Citect)$NShear Metering $NBack Up Roll$NHeavy Gage Select",
		            COMMENT[1].9 := "(From Citect)$N$N$N$N",
		            COMMENT[1].10 := "(From Citect)$N$N$N$N",
		            COMMENT[1].11 := "(From Citect)$N$N$N$N",
		            COMMENT[1].12 := "(From Citect)$N$N$N$N",
		            COMMENT[1].13 := "(From Citect)$N$N$N$N",
		            COMMENT[1].14 := "(From Citect)$N$N$N$N",
		            COMMENT[1].15 := "(From Citect)$N$N$N$N",
		            COMMENT[1].16 := "(From Citect)$N$N$N$N",
		            COMMENT[1].17 := "(From Citect)$N$N$N$N",
		            COMMENT[1].18 := "(From Citect)$N$N$N$N",
		            COMMENT[1].19 := "(From Citect)$N$N$N$N",
		            COMMENT[1].20 := "(From Citect)$N$N$N$N",
		            COMMENT[1].21 := "(From Citect)$N$N$N$N",
		            COMMENT[1].22 := "(From Citect)$N$N$N$N",
		            COMMENT[1].23 := "(From Citect)$N$N$N$N",
		            COMMENT[1].24 := "(From Citect)$N$N$N$N",
		            COMMENT[1].25 := "(From Citect)$N$N$N$N",
		            COMMENT[1].26 := "(From Citect)$N$N$N$N",
		            COMMENT[1].27 := "(From Citect)$N$N$N$N",
		            COMMENT[1].28 := "(From Citect)$N$N$N$N",
		            COMMENT[1].29 := "(From Citect)$N$N$N$N",
		            COMMENT[1].30 := "(From Citect)$N$N$N$N",
		            COMMENT[1].31 := "(From Citect)$N$N$N$N",
		            COMMENT[2].0 := "(From Citect)$N$N$N$N",
		            COMMENT[2].1 := "(From Citect)$N$N$N$N",
		            COMMENT[2].2 := "(From Citect)$N$N$N$N",
		            COMMENT[2].3 := "(From Citect)$N$N$N$N",
		            COMMENT[2].4 := "(From Citect)$N$N$N$N",
		            COMMENT[2].5 := "(From Citect)$N$N$N$N",
		            COMMENT[2].6 := "(From Citect)$N$N$N$N",
		            COMMENT[2].7 := "(From Citect)$N$N$N$N",
		            COMMENT[2].8 := "(From Citect)$N$N$N$N",
		            COMMENT[2].9 := "(From Citect)$N$N$N$N",
		            COMMENT[2].10 := "(From Citect)$N$N$N$N",
		            COMMENT[2].11 := "(From Citect)$N$N$N$N",
		            COMMENT[2].12 := "(From Citect)$N$N$N$N",
		            COMMENT[2].13 := "(From Citect)$N$N$N$N",
		            COMMENT[2].14 := "(From Citect)$N$N$N$N",
		            COMMENT[2].15 := "(From Citect)$N$N$N$N",
		            COMMENT[2].16 := "(From Citect)$N$N$N$N",
		            COMMENT[2].17 := "(From Citect)$N$N$N$N",
		            COMMENT[2].18 := "(From Citect)$N$N$N$N",
		            COMMENT[2].19 := "(From Citect)$N$N$N$N",
		            COMMENT[2].20 := "(From Citect)$N$N$N$N",
		            COMMENT[2].21 := "(From Citect)$N$N$N$N",
		            COMMENT[2].22 := "(From Citect)$N$N$N$N",
		            COMMENT[2].23 := "(From Citect)$N$N$N$N",
		            COMMENT[2].24 := "(From Citect)$N$N$N$N",
		            COMMENT[2].25 := "(From Citect)$N$N$N$N",
		            COMMENT[2].26 := "(From Citect)$N$N$N$N",
		            COMMENT[2].27 := "(From Citect)$N$N$N$N",
		            COMMENT[2].28 := "(From Citect)$N$N$N$N",
		            COMMENT[2].29 := "(From Citect)$N$N$N$N",
		            COMMENT[2].30 := "(From Citect)$N$N$N$N",
		            COMMENT[2].31 := "(From Citect)$N$N$N$N",
		            COMMENT[3] := "(From Citect)$NSet Scrap$NLength Inch$N$N",
		            COMMENT[4] := "(From Citect)$NWarning Count$N$N$N",
		            COMMENT[5] := "(From Citect)$NNext Cut$NLength Inch$N$N",
		            COMMENT[6] := "(From Citect)$NNeg Tolerance$NSetpoint$N$N",
		            COMMENT[7] := "(From Citect)$NCut Length$NInch$N$N",
		            COMMENT[8] := "(From Citect)$NSkid Count$NSetpoint$NPieces/Skid$N",
		            COMMENT[9] := "(From Citect)$NSheet Count$NSetpoint$NPieces Before$NWarning",
		            Class := Standard,
		            RADIX := Decimal) := [1,0,0,0,0,0,0,0,0,0,22000,22000,12000,12000,12000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0];
		FromMach : DINT[35] (Description := "(FromMach)",
		            Class := Standard,
		            RADIX := Decimal) := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		FromMachine : DINT[35] (Description := "(FromMach)",
		            COMMENT[0].0 := "(FromMach)$NHB$NHeart Beat$N0.25 Secs$N",
		            COMMENT[0].1 := "(FromMach)$NUWCC_Rst_PB$NUnwind$NCoil Car$NSafety Reset PB",
		            COMMENT[0].2 := "(FromMach)$N Line$NTOTAL Mode$N( 1= Total Mode)$N(0 = Coil to Coil)",
		            COMMENT[0].3 := "(FromMach)$N $N $N $N",
		            COMMENT[0].4 := "(FromMach)$N$N$N$N",
		            COMMENT[0].5 := "(FromMach)$N$N$N$N",
		            COMMENT[0].6 := "(FromMach)$NLine$NEmergency Stop$NReset$NPBL",
		            COMMENT[0].7 := "(FromMach)$N$N$N$N",
		            COMMENT[0].8 := "(FromMach)$N$N$N$N",
		            COMMENT[0].9 := "(FromMach)$N$N$N$N",
		            COMMENT[0].10 := "(FromMach)$NHydraulic$NPumps$NAuto Start$NActive",
		            COMMENT[0].11 := "(FromMach)$NExit Conveyor$NHydraulic Pump$NAuto Start$NCommand",
		            COMMENT[0].12 := "(FromMach)$NSheeter$NHydraulic Pump$NAuto Start$NCommand",
		            COMMENT[0].13 := "(FromMach)$NLube Pumps$NAuto Start$NActive$N",
		            COMMENT[0].14 := "(FromMach)$NSheeter PR$NLube Pump$NAuto Start$NCommand",
		            COMMENT[0].15 := "(FromMach)$NShear PR$NLube Pump$NAuto Start$NCommand",
		            COMMENT[0].16 := "(FromMach)$N$N$N$N",
		            COMMENT[0].17 := "(FromMach)$N$N$N$N",
		            COMMENT[0].18 := "(FromMach)$N$N$N$N",
		            COMMENT[0].19 := "(FromMach)$N$N$N$N",
		            COMMENT[0].20 := "(FromMach)$N$N$N$N",
		            COMMENT[0].21 := "(FromMach)$N$N$N$N",
		            COMMENT[0].22 := "(FromMach)$N$N$N$N",
		            COMMENT[0].23 := "(FromMach)$N$N$N$N",
		            COMMENT[0].24 := "(FromMach)$N$N$N$N",
		            COMMENT[0].25 := "(FromMach)$N$N$N$N",
		            COMMENT[0].26 := "(FromMach)$N$N$N$N",
		            COMMENT[0].27 := "(FromMach)$N$N$N$N",
		            COMMENT[0].28 := "(FromMach)$N$N$N$N",
		            COMMENT[0].29 := "(FromMach)$N$N$N$N",
		            COMMENT[0].30 := "(FromMach)$N$N$N$N",
		            COMMENT[0].31 := "(FromMach)$N$N$N$N",
		            COMMENT[1].0 := "(FromMach)$N$N$N$N",
		            COMMENT[1].1 := "(FromMach)$N$N$N$N",
		            COMMENT[1].2 := "(FromMach)$N$N$N$N",
		            COMMENT[1].3 := "(FromMach)$N$N$N$N",
		            COMMENT[1].4 := "(FromMach)$N$N$N$N",
		            COMMENT[1].5 := "(FromMach)$N$N$N$N",
		            COMMENT[1].6 := "(FromMach)$N$N$N$N",
		            COMMENT[1].7 := "(FromMach)$N$N$N$N",
		            COMMENT[1].8 := "(FromMach)$N$N$N$N",
		            COMMENT[1].9 := "(FromMach)$N$N$N$N",
		            COMMENT[1].10 := "(FromMach)$N$N$N$N",
		            COMMENT[1].11 := "(FromMach)$N$N$N$N",
		            COMMENT[1].12 := "(FromMach)$N$N$N$N",
		            COMMENT[1].13 := "(FromMach)$N$N$N$N",
		            COMMENT[1].14 := "(FromMach)$N$N$N$N",
		            COMMENT[1].15 := "(FromMach)$N$N$N$N",
		            COMMENT[1].16 := "(FromMach)$N$N$N$N",
		            COMMENT[1].17 := "(FromMach)$N$N$N$N",
		            COMMENT[1].18 := "(FromMach)$N$N$N$N",
		            COMMENT[1].19 := "(FromMach)$N$N$N$N",
		            COMMENT[1].20 := "(FromMach)$N$N$N$N",
		            COMMENT[1].21 := "(FromMach)$N$N$N$N",
		            COMMENT[1].22 := "(FromMach)$N$N$N$N",
		            COMMENT[1].23 := "(FromMach)$N$N$N$N",
		            COMMENT[1].24 := "(FromMach)$N$N$N$N",
		            COMMENT[1].25 := "(FromMach)$N$N$N$N",
		            COMMENT[1].26 := "(FromMach)$N$N$N$N",
		            COMMENT[1].27 := "(FromMach)$N$N$N$N",
		            COMMENT[1].28 := "(FromMach)$N$N$N$N",
		            COMMENT[1].29 := "(FromMach)$N$N$N$N",
		            COMMENT[1].30 := "(FromMach)$N$N$N$N",
		            COMMENT[1].31 := "(FromMach)$N$N$N$N",
		            COMMENT[2] := "(FromMach)$N$N$N$N",
		            COMMENT[3] := "(FromMach)$N$N$N$N",
		            COMMENT[4] := "(FromMach)$N$N$N$N",
		            COMMENT[5].0 := "(FromMach)$NUnwind$NHolddown Roll$NJog Forward$NCommand",
		            COMMENT[5].1 := "(FromMach)$NUnwind$NHolddown Roll$NJog Reverse$NCommand",
		            COMMENT[5].2 := "(FromMach)$NFlattener$NJog Forward$NCommand$N",
		            COMMENT[5].3 := "(FromMach)$NFlattener$NJog Reverse$NCommand$N",
		            COMMENT[5].4 := "(FromMach)$NTrimmer$NPinch Roll$NJog Forward$NCommand",
		            COMMENT[5].5 := "(FromMach)$NTrimmer$NPinch Roll$NJog Reverse$NCommand",
		            COMMENT[5].6 := "(FromMach)$NTrimmer$NScrap Conveyor$NJog$NCommand",
		            COMMENT[5].7 := "(FromMach)$NRewind$NPinch Roll$NJog Forward$NCommand",
		            COMMENT[5].8 := "(FromMach)$NRewind$NPinch Roll$NJog Reverse$NCommand",
		            COMMENT[5].9 := "(FromMach)$N$N$N$N",
		            COMMENT[5].10 := "(FromMach)$N$N$N$N",
		            COMMENT[5].11 := "(FromMach)$N$N$N$N",
		            COMMENT[5].12 := "(FromMach)$N$N$N$N",
		            COMMENT[5].13 := "(FromMach)$N$N$N$N",
		            COMMENT[5].14 := "(FromMach)$N$N$N$N",
		            COMMENT[5].15 := "(FromMach)$N$N$N$N",
		            COMMENT[5].16 := "(FromMach)$N$N$N$N",
		            COMMENT[5].17 := "(FromMach)$N$N$N$N",
		            COMMENT[5].18 := "(FromMach)$N$N$N$N",
		            COMMENT[5].19 := "(FromMach)$N$N$N$N",
		            COMMENT[5].20 := "(FromMach)$N$N$N$N",
		            COMMENT[5].21 := "(FromMach)$N$N$N$N",
		            COMMENT[5].22 := "(FromMach)$N$N$N$N",
		            COMMENT[5].23 := "(FromMach)$N$N$N$N",
		            COMMENT[5].24 := "(FromMach)$N$N$N$N",
		            COMMENT[5].25 := "(FromMach)$N$N$N$N",
		            COMMENT[5].26 := "(FromMach)$N$N$N$N",
		            COMMENT[5].27 := "(FromMach)$N$N$N$N",
		            COMMENT[5].28 := "(FromMach)$N$N$N$N",
		            COMMENT[5].29 := "(FromMach)$N$N$N$N",
		            COMMENT[5].30 := "(FromMach)$N$N$N$N",
		            COMMENT[5].31 := "(FromMach)$N$N$N$N",
		            Class := Standard,
		            RADIX := Decimal,
		            Producer := "Machine",
		            RemoteTag := "FromMachine",
		            RemoteFile := 0,
		            RPI := 20) := [164,3,0,16,0,64,0,0,0,0,50000,100000,1000000,5000000,0,3278258,32,0,0,44810,0,44810,0,0,0,0,0,0,0,0,0,0,0,0,0],
			TagForceData := [-92,0,0,0,3,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,-61,0,0,-96,-122,1,0,64,66,15,0,64,75,76,0,0,0,0,0,-78
		,5,50,0,32,0,0,0,0,0,0,0,0,0,0,0,10,-81,0,0,0,0,0,0,10,-81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		FromSafety : DINT[35] (Description := "(From Safety)$N",
		            COMMENT[0] := "(From Safety)",
		            COMMENT[0].0 := "(From Safety)$NHeartbeat Pulse",
		            COMMENT[0].1 := "(From Safety)$NLine Safety Status$NCoast Stop$N( 0 = Coast Stop)$N( 1= OK)",
		            COMMENT[0].2 := "(From Safety)$NLine Safety Status$NEStop$N( 0 = EStop)$N( 1= OK)",
		            COMMENT[0].3 := "(From Safety)$NLine Safety Status$NNo Faults$N( 0 = Faults)$N( 1= OK)",
		            COMMENT[0].4 := "(From Safety)",
		            COMMENT[0].5 := "(From Safety)$NLine Safety Status$NAll Drives Off$N( 1= All Off)",
		            COMMENT[0].6 := "(From Safety)$NLine Safety Status$NGuards OK$N( 1= OK)",
		            COMMENT[0].7 := "(From Safety)",
		            COMMENT[0].8 := "(From Safety)",
		            COMMENT[0].9 := "(From Safety)",
		            COMMENT[1].1 := "(From Safety)$NShear Safety Status$NCoast Stop$N( 0 = Coast Stop)$N( 1= OK)",
		            COMMENT[1].2 := "(From Safety)$NShear Safety Status$NEStop$N( 0 = EStop)$N( 1= OK)",
		            COMMENT[1].3 := "(From Safety)$NShear Safety Status$NNo Faults$N( 0 = Faults)$N( 1= OK)",
		            COMMENT[1].4 := "(From Safety)",
		            COMMENT[1].5 := "(From Safety)$NShear Safety Status$NAll Drives Off$N( 1= All Off)",
		            COMMENT[1].6 := "(From Safety)",
		            COMMENT[1].7 := "(From Safety)",
		            COMMENT[2] := "(From Safety)",
		            COMMENT[2].0 := "(From Safety)$NUnwind$NOp Side$NDrive Enable Relay",
		            COMMENT[2].1 := "(From Safety)$NUnwind$NDrive Side$NDrive Enable Relay",
		            COMMENT[2].2 := "(From Safety)$N#1 Entry Bridle$NRoll 2$NDrive Enable Relay",
		            COMMENT[2].3 := "(From Safety)$N#2 Entry Bridle$NRoll 3$NDrive Enable Relay",
		            COMMENT[2].4 := "(From Safety)$N#1 Exit Bridle$NRoll 6$NDrive Enable Relay",
		            COMMENT[2].5 := "(From Safety)$N#2 Exit Bridle$NRoll 7$NDrive Enable Relay",
		            COMMENT[2].6 := "(From Safety)$NRewind$NDrive Enable Relay",
		            COMMENT[2].7 := "(From Safety)$NShear Die$NDrive Enable Relay",
		            COMMENT[2].8 := "(From Safety)$NUnwind$N Pinch Roll $NSafety Enable",
		            COMMENT[2].9 := "(From Safety)$NPaper Winder$NSafety Enable",
		            COMMENT[2].10 := "(From Safety)$NTrimmer $N Knives$NWidth Adjust$NSafety Enable",
		            COMMENT[2].11 := "(From Safety)$NTrimmer $N Knives$NSafety Enable",
		            COMMENT[2].12 := "(From Safety)$NScrap$N Choppers$NSafety Enable",
		            COMMENT[2].13 := "(From Safety)$NScrap$N Choppers$NWidth Adjust$NSafety Enable",
		            COMMENT[2].14 := "(From Safety)$NWashtank$N Pinch Roll 1$NSafety Enable",
		            COMMENT[2].15 := "(From Safety)$NWashtank$N Pinch Roll 2$NSafety Enable",
		            COMMENT[2].16 := "(From Safety)$NWashtank$N Pinch Roll 3$NSafety Enable",
		            COMMENT[2].17 := "(From Safety)$NWashtank$N Pinch Roll 4$NSafety Enable",
		            COMMENT[2].18 := "(From Safety)$NSide Guide $N Width Adjust$NSafety Enable",
		            COMMENT[2].19 := "(From Safety)$NSheeter $NPinch Roll $NSafety Enable",
		            COMMENT[2].20 := "(From Safety)$NShear $NPinch Roll $NSafety Enable",
		            COMMENT[2].21 := "(From Safety)$NShear $NMetering $NBackup Roll $N Safety Enable",
		            COMMENT[2].22 := "(From Safety)$NShear$NConveyor$NSafety Enable",
		            COMMENT[2].23 := "(From Safety)$NProduct$NConveyor 1$NSafety Enable",
		            COMMENT[2].24 := "(From Safety)$NProduct$NConveyor 2$NSafety Enable",
		            COMMENT[2].25 := "(From Safety)$NProduct$NConveyor 3$NSafety Enable",
		            COMMENT[2].26 := "(From Safety)$NScrap$NIncline Conveyor$NSafety Enable",
		            COMMENT[2].27 := "(From Safety)$NStacker$N Blower $NSafety Enable",
		            COMMENT[2].28 := "(From Safety)$NStacker$NBack Stop$NSafety Enable",
		            COMMENT[2].29 := "(From Safety)",
		            COMMENT[2].30 := "(From Safety)",
		            COMMENT[2].31 := "(From Safety)",
		            COMMENT[4].0 := "(From Safety)$NUnwind$N Holddown Roll$NDrive Motor$N Fwd Fdbk",
		            COMMENT[4].1 := "(From Safety)$NUnwind$N Holddown Roll$NDrive Motor$N Rev Fdbk",
		            COMMENT[4].2 := "(From Safety)$NFlattener$N Drive Motor$N Fwd Fdbk",
		            COMMENT[4].3 := "(From Safety)$NFlattener$N Drive Motor$N Rev Fdbk",
		            COMMENT[4].4 := "(From Safety)$NTrimmer$N Pinch Roll$N Fwd Fdbk",
		            COMMENT[4].5 := "(From Safety)$NTrimmer$N Pinch Roll$N Rev Fdbk",
		            COMMENT[4].6 := "(From Safety)$NTrimmer$N Scrap Conveyor$N RunFdbk",
		            COMMENT[4].7 := "(From Safety)$NRewind$N Pinch Roll$N Fwd Fdbk",
		            COMMENT[4].8 := "(From Safety)$NRewind$N Pinch Roll$N Rev Fdbk",
		            COMMENT[5].0 := "(From Safety)$NShear Die Crank$NRunning Fdbk$N( 1= Running)",
		            COMMENT[5].1 := "(From Safety)$NScrap$NHorizontal$NConveyor$NFwd Fdbk",
		            COMMENT[5].2 := "(From Safety)$NScrap$NHorizontal$NConveyor$NRev Fdbk",
		            COMMENT[5].3 := "(From Safety)$NStacker$NChain$NFwd Fdbk",
		            COMMENT[5].4 := "(From Safety)$NStacker$NChain$NRev Fdbk",
		            COMMENT[5].5 := "(From Safety)$NStacker$NSide Guide Lift$NFwd Fdbk/Up",
		            COMMENT[5].6 := "(From Safety)$NStacker$NSide Guide Lift$NRev Fdbk/Down",
		            Class := Standard,
		            RADIX := Decimal,
		            ProduceCount := 3,
		            ProgrammaticallySendEventTrigger := No,
		            UnicastPermitted := Yes,
		            MinimumRPI := 0.200,
		            MaximumRPI := 536870.900,
		            DefaultRPI := 0) := [16142,14,536870911,0,64,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			TagForceData := [15,63,0,0,14,0,0,0,-1,-1,-1,31,0,0,0,0,64,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		FromShearDie : DINT[35] (Description := "(From Shear Die)",
		            COMMENT[0].0 := "(From Shear Die)$NHeartbeat Pulse",
		            COMMENT[0].1 := "(From Shear DIe)$NExit Conveyor$NHyd Pump$NRun Fdbk",
		            COMMENT[0].2 := "(From Shear DIe)$NSheeter$NHyd$NPump$NRun Fdbk",
		            COMMENT[0].3 := "(From Shear DIe)$NShear$NPinch Roll$NLube$NRun Fdbk",
		            COMMENT[0].4 := "(From Shear DIe)$NSheeter$NPinch Roll$NLube$NRun Fdbk",
		            COMMENT[0].5 := "(From Shear Die)$NShear$NEmergency Stop$NReset$NPBL",
		            COMMENT[0].6 := "(From Shear Die)$NLine$NEmergency Stop$NReset$NPBL",
		            COMMENT[0].7 := "(From Shear Die)$NExit Section$NLine Stop PB$N( 1= OK)$N(0=Stop)",
		            COMMENT[0].8 := "(From Shear Die)$NExit Section$NLine Run PB$N( 1= Run)",
		            COMMENT[0].9 := "(From Shear Die)$NExit Section$NLine Thread PB$N( 1= Thread)",
		            COMMENT[0].10 := "(From Shear Die)$NExit Section$NLine Jog PB$N( 1= Ind Jog)",
		            COMMENT[0].11 := "(From Shear Die)$NExit Section$NTandem$NJog PB$N(1= Tandem Jog Sel)",
		            COMMENT[0].12 := "(From Shear Die)$NExit Section$NIndividual$NJog PB$N(1= Indiv Jog Sel)",
		            COMMENT[0].13 := "(From Shear Die)$NSheeter$NPinch Roll$NJog$NForward$NSS",
		            COMMENT[0].14 := "(From Shear Die)$NSheeter$NPinch Roll$NJog$NReverse$NSS",
		            COMMENT[0].15 := "(From Shear Die)$NSheeter$NPinch Roll$NJog$NForward$NSS",
		            COMMENT[0].16 := "(From Shear Die)$NSheeter$NPinch Roll$NJog$NReverse$NSS",
		            COMMENT[0].17 := "(From Shear Die)$NShear$NPinch Roll$NJog$NForward$NSS",
		            COMMENT[0].18 := "(From Shear Die)$NShear$NPinch Roll$NJog$NReverse$NSS",
		            COMMENT[0].19 := "(From Shear Die)$NShear$NConveyor$NJog$NForward$NSS",
		            COMMENT[0].20 := "(From Shear Die)$NShear$NConveyor$NJog$NReverse$NSS",
		            COMMENT[0].21 := "(From Shear Die)$NProduct$NConveyor$NJog$NForward$NPB",
		            COMMENT[0].22 := "(From Shear Die)$NProduct$NConveyor$NJog$NReverse$NPB",
		            COMMENT[0].23 := "(From Shear Die)$NScrap$NConveyor$NJog$NForward$NSS",
		            COMMENT[0].24 := "(From Shear Die)$NScrap$NConveyor$NJog$NReverse$NSS",
		            COMMENT[1].0 := "(From Shear Die)$NScrap Mode$NSelected$N( 1= Requested)",
		            COMMENT[5].0 := "(From Shear Die)$NShear Die Crank$NRun Command$N( 1= Run)",
		            COMMENT[5].1 := "(From Shear Die)$NScrap Horizontal$NConveyor$NFwd Cmd$N( 1= Run Fwd)",
		            COMMENT[5].2 := "(From Shear Die)$NScrap Horizontal$NConveyor$NRev Cmd$N( 1= Run Rev)",
		            COMMENT[5].3 := "(From Shear Die)$NStacker Chain$NFwd Cmd",
		            COMMENT[5].4 := "(From Shear Die)$NStacker Chain$NRev Cmd",
		            COMMENT[5].5 := "(From Shear Die)$NStacker Side Guide Lift Fwd Cmd/Up",
		            COMMENT[5].6 := "(From Shear Die)$NStacker $NSide Guide Lift $NRev Cmd/Dwn",
		            Class := Standard,
		            RADIX := Decimal,
		            Producer := "ShearDie",
		            RemoteTag := "FromShearDie",
		            RemoteFile := 0,
		            RPI := 20,
		            Unicast := Yes) := [159,8,1056767,0,0,1,0,0,0,0,144000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			TagForceData := [-97,0,0,0,8,0,0,0,-1,31,16,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-128,50,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		FUTURE OF Diag_Tmp.1 (Description := "FUTURE$N",
		            RADIX := Decimal);
		FVNR_y761MTR081RC : CONFIGURABLE_ROUT (Description := "Trimmer$NScrap Conveyor$NFVNR Run Command",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,3151324,2,250,8,16];
		FVNR_y778MTR080RC : CONFIGURABLE_ROUT (Description := "Shear Die Crank$NMotor$NFVNR $NRun Command",
		            Class := Safety) := [127,500,7,0,0,67305985,127,7,3121424,2,500,8,16];
		FVR_y702MTR191FC : CONFIGURABLE_ROUT (Description := "Rewind$NPinch Roll$NFVR Fwd Command",
		            Class := Safety) := [101,1000,1,0,0,16908801,101,1,2629928,2,1000,8,16];
		FVR_y702MTR191RC : CONFIGURABLE_ROUT (Description := "Rewind$NPinch Roll$NFVR Rev Command",
		            Class := Safety) := [101,1000,1,0,0,16908801,101,1,1638416,2,1000,8,16];
		FVR_y702MTR191_Flt OF Flt_Starter.4 (Description := "Rewind$NPinch Roll$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y708MTR080FC : CONFIGURABLE_ROUT (Description := "Flattener$NDrive Motor$NFVR Fwd Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,1997325,2,250,8,16];
		FVR_y708MTR080RC : CONFIGURABLE_ROUT (Description := "Flattener$NDrive Motor$NFVR Rev Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,2602904,2,250,8,16];
		FVR_y708MTR080_Flt OF Flt_Starter.1 (Description := "Flattener $NDrive Motor$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y708MTR250FC : CONFIGURABLE_ROUT (Description := "Unwind$NHold Down Roll$NFVR Fwd Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,3775067,2,250,8,16];
		FVR_y708MTR250RC : CONFIGURABLE_ROUT (Description := "Unwind$NHold Down Roll$NFVR Rev Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,2841565,2,250,8,16];
		FVR_y708MTR250_Flt OF Flt_Starter.0 (Description := "Unwind $NHold Down Roll$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y753MTR190FC : CONFIGURABLE_ROUT (Description := "Trimmer$NPinch Roll$NFVR Fwd Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,1997325,2,250,8,16];
		FVR_y753MTR190RC : CONFIGURABLE_ROUT (Description := "Trimmer$NPinch Roll$NFVR Rev Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,2039625,2,250,8,16];
		FVR_y753MTR190_Flt OF Flt_Starter.2 (Description := "Trimmer$NPinch Roll$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y761MTR081_Flt OF Flt_Starter.3 (Description := "Trimmer$NScrap Conveyor$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y778MTR080_Flt OF Flt_Starter.5 (Description := "Shear$NDie Crank$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y802MTR080FC : CONFIGURABLE_ROUT (Description := "Stacker $NSide Guide Lift$NFVR Fwd Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,2500178,2,250,8,16];
		FVR_y802MTR080RC : CONFIGURABLE_ROUT (Description := "Stacker $NSide Guide Lift$NFVR Rev Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,1580576,2,250,8,16];
		FVR_y802MTR080_Flt OF Flt_Starter.6 (Description := "Stacker$NSide Guide Lift$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y802MTR230FC : CONFIGURABLE_ROUT (Description := "Scrap$NHorizontal Conveyor$NFVR Fwd Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,15174,2,250,8,16];
		FVR_y802MTR230RC : CONFIGURABLE_ROUT (Description := "Scrap$NHorizontal Conveyor$NFVR Rev Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,1496250,2,250,8,16];
		FVR_y802MTR230_Flt OF Flt_Starter.8 (Description := "Scrap$NHorizontal Conveyor$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		FVR_y802MTR231FC : CONFIGURABLE_ROUT (Description := "Stacker $NChain Conveyor$NFVR Fwd Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,1571726,2,250,8,16];
		FVR_y802MTR231RC : CONFIGURABLE_ROUT (Description := "Stacker $NChain Conveyor$NFVR Rev Command",
		            Class := Safety) := [101,250,1,0,0,16908801,101,1,1576526,2,250,8,16];
		FVR_y802MTR231_Flt OF Flt_Starter.7 (Description := "Stacker$NChain Conveyor$NStarter Fault$N( 1= Fault)",
		            RADIX := Decimal);
		G1_EstopRstCmd : BOOL (Description := "G1$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		G1_FltRstCmd : BOOL (Description := "G1$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		G1_IO : UDT_CardSts[32] (Description := "G1$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		G1_IOSts_Flt : BOOL (Description := "G1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		G1_No_EStops : BOOL (Description := "G1$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		G1_S11_ModFlt OF Flt_Modules[0].15 (Description := "G1$N Point I/O Slot11$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		G1_S12_ModFlt OF Flt_Modules[0].16 (Description := "G1$N Point I/O Slot12$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		G1_SolPwrEn : BOOL (Description := "G1$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		H1_EstopRstCmd : BOOL (Description := "H1$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		H1_FltRstCmd : BOOL (Description := "H1$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		H1_IO : UDT_CardSts[32] (Description := "H1$NPoint I/O$N",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		H1_IOSts_Flt : BOOL (Description := "H1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		H1_No_EStops : BOOL (Description := "H1$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		H1_S5_ModFlt OF Flt_Modules[0].17 (Description := "H1$N Point I/O Slot05$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		H1_S6_ModFlt OF Flt_Modules[0].18 (Description := "H1$N Point I/O Slot06$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		H1_SolPwrEn : BOOL (Description := "H1$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		HB_Citect : BOOL (Description := "Heartbeat$NCitect Reflect",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		HydPumps_AutoStart : BOOL (Description := "(From Mach)$NHydraulic Pumps $NAuto Start$NActive",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		IOCards_OK : DINT (Description := "Point$NI/O Cards$NOK",
		            COMMENT.0 := "MCC$NI/O Cards OK$N( 1= OK)",
		            COMMENT.1 := "Op Stations$N(Entry Section)$NI/O Cards OK$N( 1= OK)",
		            COMMENT.2 := "Op Stations$N(Exit Section)$NI/O Cards OK$N( 1= OK)",
		            COMMENT.3 := "General I/O$NI/O Cards OK$N( 1= OK)",
		            COMMENT.4 := "General I/O$NI/O Cards OK$N( 1= OK)",
		            COMMENT.31 := "ALL $NI/O Cards$NOK$N( 1= OK)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		jay : BOOL (Class := Safety,
		            RADIX := Decimal) := 1;
		LineSts : UDT_SysStatus (Class := Safety) := [-1,3,0,[1684216,0,0],[1386233,0,0],[2710624,0,0],[1683816,5000,0],[3760571,5000,0],[1683816,5000,0],[2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				],[0,0,0,0,0]];
		Line_CTC_CoastStop : BOOL (Description := "Line$NCoast Stop$N( 1= Coast Stop) (Condition Exists)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Line_CTL_CoastStop : BOOL (Description := "Line$NCoast Stop$N( 1= Coast Stop) (Condition Exists)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Line_NoP2P_CommFlts : BOOL (Description := "Line$NNo Peer to Peer$NComm Faults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Line_No_Estop : DINT (Description := "Line$NEstop $NSummation$N( 1= No Estop PB$'s)$N(Pressed)",
		            Class := Safety,
		            RADIX := Decimal) := -2147483645;
		Line_TotalMode : BOOL (Description := " Line$NTOTAL Mode$N( 1= Total Mode)$N(0 = Coil to Coil)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Line_Total_CoastStop : BOOL (Description := "Line$NCoast Stop$N( 1= Coast Stop) (Condition Exists)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Local_ModFlts : DINT (Description := "Local Card$NFault Status",
		            COMMENT.1 := "Slot 01",
		            COMMENT.2 := "Slot 02$N1756-EN2T$NCard Fault$N( 1= Fault)",
		            COMMENT.3 := "Slot 03$N1756-EN2T$NCard Fault$N( 1= Fault)",
		            COMMENT.9 := "Slot 09",
		            COMMENT.16 := "Slot 16$N1756-EN2T$NCard Fault$N( 1= Fault)",
		            Class := Standard,
		            RADIX := Decimal) := 514;
		Local_Networks_OK : BOOL (Description := "Local Network$NCARDS OK$N( 1= OK)",
		            Class := Standard,
		            RADIX := Decimal) := 1;
		Local_Slot : UDT_CardSts[17] (Description := "Safety Processor",
		            COMMENT[2] := "1756-EN2T$N-",
		            COMMENT[3] := "1756-EN2T$N-",
		            COMMENT[8] := "1756-L75$N-",
		            COMMENT[16] := "1756-EN2T$N-",
		            Class := Standard,
		            ExternalAccess := Read Only) := [[0,0],[24576,0],[16897,16],[16897,16],[16897,16],[16897,16],[16897,16],[16897,16],[0,0],[24576,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[16897,16]];
		LubePumps_AutoStart : BOOL (Description := "(From Mach)$NLube Pumps $NAuto Start$NActive",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		Machine_HB_Flt : BOOL (Description := "Machine$NHeartbeat Fault$N( 1= Fault)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Machine_HB_TOF : TIMER (Description := "Machine$NHeartbeat Timer Off",
		            Class := Safety) := [2753328,1000,0];
		Machine_HB_TON : TIMER (Description := "Machine$NHeartbeat Timer On",
		            Class := Safety) := [-1070988346,1000,100];
		Map_Citect : DINT[5] (Description := "Mapped From Shear Citect System",
		            COMMENT[0].0 := "Citect$NHeartbeat Fault$N( 1= Fault)",
		            Class := Standard,
		            RADIX := Decimal) := [1,0,0,0,0];
		Map_Mach : DINT[5] (Description := "From Machine Processor",
		            COMMENT[0].0 := "(From Machine)$NHeartbeat Pulse",
		            COMMENT[0].1 := "Unwind$NHold Down Roll$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].2 := "Unwind$NHold Down Roll$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].3 := "Flattener$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].4 := "Flattener$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].5 := "Trimmer $NPinch Roll$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].6 := "Trimmer $NPinch Roll$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].7 := "Trimmer$NScrap Conveyor$NRun Command$N( 1= Run )",
		            COMMENT[0].8 := "Rewind$NPinch Roll$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].9 := "Rewind$NPinch Roll$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].10 := "Unwind$NCoil Car$NSafety Reset PB",
		            COMMENT[0].11 := "Line$NEmergency Stop$NReset$NPBL",
		            COMMENT[0].12 := "Line$NTOTAL Mode$N( 1= Total Mode)$N(0 = Coil to Coil)",
		            Class := Standard,
		            RADIX := Decimal) := [4225,0,0,0,0];
		Map_ShDie : DINT[5] (Description := "Mapped From Shear Die Processor",
		            COMMENT[0].0 := "(From Shear Die)$NHeartbeat Pulse",
		            COMMENT[0].1 := "Shear Die Crank$NRun Command$N( 1= Run)",
		            COMMENT[0].2 := "Scrap Horizontal$NConveyor$NFwd Cmd$N( 1= Run Fwd)",
		            COMMENT[0].3 := "Scrap Horizontal$NConveyor$NRev Cmd$N( 1= Run Rev)",
		            COMMENT[0].4 := "Stacker Chain$NFwd Cmd",
		            COMMENT[0].5 := "Stacker Chain$NRev Cmd",
		            COMMENT[0].6 := "Stacker $NSide Guide Lift $NFwd Cmd/Up",
		            COMMENT[0].7 := "Stacker $NSide Guide Lift $NRev Cmd/Dwn",
		            COMMENT[0].8 := "Shear$NEmergency Stop$NReset$NPBL",
		            COMMENT[0].9 := "Line$NEmergency Stop$NReset$NPBL",
		            Class := Standard,
		            RADIX := Decimal) := [3,0,0,0,0];
		MCC1_IO : UDT_CardSts[32] (Description := "MCC1$NPoint I/O",
		            COMMENT[13] := "1734-IE2V/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		MCC1_IOSts_Flt : BOOL (Description := "MCC1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		MCC1_S1_ModFlt OF Flt_Modules[2].0 (Description := "MCC1$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC1_S6_ModFlt OF Flt_Modules[2].1 (Description := "MCC1$N Point I/O Slot06$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC2_IO : UDT_CardSts[32] (Description := "MCC2$NPoint I/O",
		            COMMENT[13] := "1734-IE2V/C",
		            Class := Standard) := [[28928,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		MCC2_IOSts_Flt : BOOL (Description := "MCC2$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		MCC2_S1_ModFlt OF Flt_Modules[2].2 (Description := "MCC2$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC2_S2_ModFlt OF Flt_Modules[2].3 (Description := "MCC2$N Point I/O Slot02$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC3_IO : UDT_CardSts[32] (Description := "MCC3$NPoint I/O",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		MCC3_IOSts_Flt : BOOL (Description := "MCC3$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		MCC3_S1_ModFlt OF Flt_Modules[2].4 (Description := "MCC3$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC3_S3_ModFlt OF Flt_Modules[2].5 (Description := "MCC3$N Point I/O Slot03$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC3_S4_ModFlt OF Flt_Modules[2].6 (Description := "MCC3$N Point I/O Slot04$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC4_IO : UDT_CardSts[32] (Description := "MCC4 $NPoint I/O$N",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		MCC4_IOSts_Flt : BOOL (Description := "MCC-4$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		MCC4_S1_ModFlt OF Flt_Modules[2].7 (Description := "MCC4$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC4_S3_ModFlt OF Flt_Modules[2].8 (Description := "MCC4$N Point I/O Slot03$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC4_S4_ModFlt OF Flt_Modules[2].9 (Description := "MCC4$N Point I/O Slot04$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC5_IO : UDT_CardSts[32] (Description := "MCC5$NPoint I/O$N",
		            Class := Standard) := [[28928,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		MCC5_IOSts_Flt : BOOL (Description := "MCC-5$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		MCC5_S1_ModFlt OF Flt_Modules[2].10 (Description := "MCC5$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC5_S3_ModFlt OF Flt_Modules[2].11 (Description := "MCC5$N Point I/O Slot03$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC5_S4_ModFlt OF Flt_Modules[2].12 (Description := "MCC5$N Point I/O Slot04$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		MCC5_S5_ModFlt OF Flt_Modules[2].13 (Description := "MCC5$N Point I/O Slot05$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS11_EstopRstCmd : BOOL (Description := "OS11$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS11_FltRstCmd : BOOL (Description := "OS11$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS11_IO : UDT_CardSts[32] (Description := "OS11$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS11_IOSts_Flt : BOOL (Description := "OS11$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS11_No_EStops : BOOL (Description := "OS11$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS11_S1_ModFlt OF Flt_Modules[1].11 (Description := "OS11$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS13_EstopRstCmd : BOOL (Description := "OS13$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS13_FltRstCmd : BOOL (Description := "OS13$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS13_IO : UDT_CardSts[32] (Description := "OS13$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS13_IOSts_Flt : BOOL (Description := "OS13$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS13_No_EStops : BOOL (Description := "OS13$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS13_S1_ModFlt OF Flt_Modules[1].12 (Description := "OS13$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS14_EstopRstCmd : BOOL (Description := "OS14$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS14_FltRstCmd : BOOL (Description := "OS14$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS14_IO : UDT_CardSts[32] (Description := "OS14$NPoint I/O$N",
		            COMMENT[13] := "1734-IE2V/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS14_IOSts_Flt : BOOL (Description := "OS14$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS14_No_EStops : BOOL (Description := "OS14$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS14_S1_ModFlt OF Flt_Modules[1].13 (Description := "OS14$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS14_Shear_EstopRstCmd : BOOL (Description := "OS14_Shear$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS14_Shear_FltRstCmd : BOOL (Description := "OS14_Shear$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS14_Shear_No_EStops : BOOL (Description := "OS14_Shear$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS15_EstopRstCmd : BOOL (Description := "OS15$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS15_FltRstCmd : BOOL (Description := "OS15$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS15_IO : UDT_CardSts[32] (Description := "OS15$NPoint I/O$N",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS15_IOSts_Flt : BOOL (Description := "OS15$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS15_No_EStops : BOOL (Description := "OS15$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS15_S1_ModFlt OF Flt_Modules[1].14 (Description := "OS15$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS16_EstopRstCmd : BOOL (Description := "OS16$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS16_FltRstCmd : BOOL (Description := "OS16$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS16_IO : UDT_CardSts[32] (Description := "OS16$NPoint I/O$N",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS16_IOSts_Flt : BOOL (Description := "OS16$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS16_No_EStops : BOOL (Description := "OS16$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS16_S1_ModFlt OF Flt_Modules[1].15 (Description := "OS16$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS1_EstopRstCmd : BOOL (Description := "OS1$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS1_FltRstCmd : BOOL (Description := "OS1$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS1_IO : UDT_CardSts[32] (Description := "OS1$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS1_IOSts_Flt : BOOL (Description := "OS1$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS1_No_EStops : BOOL (Description := "OS1$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS1_S1_ModFlt OF Flt_Modules[1].0 (Description := "OS1$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS2_EstopRstCmd : BOOL (Description := "OS2$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS2_FltRstCmd : BOOL (Description := "OS2$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS2_IO : UDT_CardSts[32] (Description := "OS2$NPoint I/O",
		            Class := Standard,
		            ExternalAccess := Read Only) := [[16897,16],[16897,16],[0,0],[16899,16],[16897,16],[16897,16],[16897,16],[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0
				],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS2_IOSts_Flt : BOOL (Description := "OS2$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS2_No_EStops : BOOL (Description := "OS2$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS2_S1_ModFlt OF Flt_Modules[1].1 (Description := "OS2$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS3_EstopRstCmd : BOOL (Description := "OS3$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS3_FltRstCmd : BOOL (Description := "OS3$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS3_IO : UDT_CardSts[32] (Description := "OS3$NPoint I/O",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS3_IOSts_Flt : BOOL (Description := "OS3$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS3_No_EStops : BOOL (Description := "OS3$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS3_S1_ModFlt OF Flt_Modules[1].2 (Description := "OS3$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS4N_IO : UDT_CardSts[32] (Description := "OS4N$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS4N_IOSts_Flt : BOOL (Description := "OS4N$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS4N_S1_ModFlt OF Flt_Modules[1].3 (Description := "OS4N$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS4N_S5_ModFlt OF Flt_Modules[1].4 (Description := "OS4N$N Point I/O Slot05$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS4N_SolPwrEn : BOOL (Description := "OS4N$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS4S_IO : UDT_CardSts[32] (Description := "OS4S$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS4S_IOSts_Flt : BOOL (Description := "OS4S$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS4S_S1_ModFlt OF Flt_Modules[1].5 (Description := "OS4S$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS4S_S5_ModFlt OF Flt_Modules[1].6 (Description := "OS4S$N Point I/O Slot05$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS4S_SolPwrEn : BOOL (Description := "OS4S$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS4_EstopRstCmd : BOOL (Description := "OS4$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS4_FltRstCmd : BOOL (Description := "OS4$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS4_No_EStops : BOOL (Description := "OS4$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS5_EstopRstCmd : BOOL (Description := "OS5$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS5_FltRstCmd : BOOL (Description := "OS5$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS5_IO : UDT_CardSts[32] (Description := "OS5$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS5_IOSts_Flt : BOOL (Description := "OS5$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS5_No_EStops : BOOL (Description := "OS5$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS5_S1_ModFlt OF Flt_Modules[1].7 (Description := "OS5$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS6_EstopRstCmd : BOOL (Description := "OS6$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS6_FltRstCmd : BOOL (Description := "OS6$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS6_IO : UDT_CardSts[32] (Description := "OS6$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS6_IOSts_Flt : BOOL (Description := "OS6$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS6_No_EStops : BOOL (Description := "OS6$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS6_S1_ModFlt OF Flt_Modules[1].8 (Description := "OS6$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS8_EstopRstCmd : BOOL (Description := "OS8$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS8_FltRstCmd : BOOL (Description := "OS8$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS8_IO : UDT_CardSts[32] (Description := "OS8$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS8_IOSts_Flt : BOOL (Description := "OS8$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS8_No_EStops : BOOL (Description := "OS8$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS8_S1_ModFlt OF Flt_Modules[1].9 (Description := "OS8$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		OS9_EstopRstCmd : BOOL (Description := "OS9$NEstop Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS9_FltRstCmd : BOOL (Description := "OS9$NFault Reset $NCommand$N( 1= Reset Cmd)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		OS9_IO : UDT_CardSts[32] (Description := "OS9$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		OS9_IOSts_Flt : BOOL (Description := "OS9$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		OS9_No_EStops : BOOL (Description := "OS9$NNo Estops$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		OS9_S1_ModFlt OF Flt_Modules[1].10 (Description := "OS9$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		Peer_Networks_OK : BOOL (Description := "Peer Network$NCARDS OK$N( 1= OK)",
		            Class := Standard,
		            RADIX := Decimal) := 1;
		PrCon_DrvsOff : BOOL (Description := "Product Conveyors$N(1-3)$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		PrCon_SafeTrqEn : BOOL (Description := "Product$NConveyors$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		PW_DrvsOff : BOOL (Description := "Paper Winder$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		PW_SafeTrqEn : BOOL (Description := "Paper Winder$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Rem_ModFlts : DINT (Description := "Remote IO$NComm Faults",
		            COMMENT.0 := "A1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.1 := "C1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.2 := "CHPLC$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.3 := "D1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.4 := "DPD$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.5 := "E1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.6 := "F1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.7 := "G1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.8 := "MCC1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.9 := "MCC3$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.10 := "OS11$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.11 := "OS13$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.12 := "OS1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.13 := "OS2$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.14 := "OS3$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.15 := "OS4N$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.16 := "OS4S$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.17 := "OS5$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.18 := "OS6$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.19 := "OS8$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.20 := "OS9$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.21 := "VS2$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.22 := "MCC2$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.23 := "SDPLC$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.24 := "MCC4 $NPoint IO $NComm Fault $N( 1= Fault)",
		            COMMENT.25 := "MCC5$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.26 := "OS16$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.27 := "OS14$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.28 := "H1$NPoint IO$NComm Fault$N( 1= Fault)",
		            COMMENT.29 := "OS15$NPoint IO$NComm Fault$N( 1= Fault)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		RewPR_FVR_En : BOOL (Description := "Rewind$NPinch Roll$NFVR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		RewPR_FVR_FltRst : BOOL (Description := "Rewind$NPinch Roll$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		RewPR_FVR_FwdCmd : BOOL (Description := "Rewind$NPinch Roll$NForward Command$N( 1= Run Fwd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		RewPR_FVR_RevCmd : BOOL (Description := "Rewind$NPinch Roll$NReverse Command$N( 1= Run Rev)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Rew_DrvsOff : BOOL (Description := "Rewind $NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		REW_SafeOffEn : BOOL (Description := "Rewind$NSafe-Off Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		REW_SafeOffFltRst : BOOL (Description := "Rewind$NSafe-Off$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Rodney_Always : BOOL (Class := Safety,
		            RADIX := Decimal) := 0;
		Rodney_True : BOOL (Class := Safety,
		            RADIX := Decimal) := 1;
		SafeOff_y172CR460 : CONFIGURABLE_ROUT (Description := "Shear Die$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,3596723,2,250,8,16];
		SafeOff_y172CR460_Flt OF Flt_SafeOff[0].0 (Description := "Shear Die$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y172CR510 : CONFIGURABLE_ROUT (Description := "Shear Die$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,3596723,2,250,8,16];
		SafeOff_y172CR510_Flt OF Flt_SafeOff[0].1 (Description := "Shear Die$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR460 : CONFIGURABLE_ROUT (Description := "Unwind$NOp Side$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR460_Flt OF Flt_SafeOff[0].2 (Description := "Unwind$NOp Side$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR510 : CONFIGURABLE_ROUT (Description := "Unwind$NOp Side$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR510_Flt OF Flt_SafeOff[0].3 (Description := "Unwind$NOp Side$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR550 : CONFIGURABLE_ROUT (Description := "Unwind$NDrive Side$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR550_Flt OF Flt_SafeOff[0].4 (Description := "Unwind$NDrive Side$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR590 : CONFIGURABLE_ROUT (Description := "Unwind$NDrive Side$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR590_Flt OF Flt_SafeOff[0].5 (Description := "Unwind$NDrive Side$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR630 : CONFIGURABLE_ROUT (Description := "#1 Entry Bridle$NRoll 2$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR630_Flt OF Flt_SafeOff[0].6 (Description := "#1 Entry Bridle$NRoll 2$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR670 : CONFIGURABLE_ROUT (Description := "#1 Entry Bridle$NRoll 2$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR670_Flt OF Flt_SafeOff[0].7 (Description := "#1 Entry Bridle$NRoll 2$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR710 : CONFIGURABLE_ROUT (Description := "#2 Entry Bridle$NRoll 3$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR710_Flt OF Flt_SafeOff[0].8 (Description := "#2 Entry Bridle$NRoll 3$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y613CR750 : CONFIGURABLE_ROUT (Description := "#2 Entry Bridle$NRoll 3$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y613CR750_Flt OF Flt_SafeOff[0].9 (Description := "#2 Entry Bridle$NRoll 3$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y614CR040 : CONFIGURABLE_ROUT (Description := "#1 Exit Bridle$NRoll 6$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y614CR040_Flt OF Flt_SafeOff[0].10 (Description := "#1 Exit Bridle$NRoll 6$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y614CR090 : CONFIGURABLE_ROUT (Description := "#1 Exit Bridle$NRoll 6$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y614CR090_Flt OF Flt_SafeOff[0].11 (Description := "#1 Exit Bridle$NRoll 6$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y614CR130 : CONFIGURABLE_ROUT (Description := "#2 Exit Bridle$NRoll 7$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y614CR130_Flt OF Flt_SafeOff[0].12 (Description := "#2 Exit Bridle$NRoll 7$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y614CR170 : CONFIGURABLE_ROUT (Description := "#2 Exit Bridle$NRoll 7$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y614CR170_Flt OF Flt_SafeOff[0].13 (Description := "#2 Exit Bridle$NRoll 7$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y614CR210 : CONFIGURABLE_ROUT (Description := "Rewind$NMain Contactor Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y614CR210_Flt OF Flt_SafeOff[0].14 (Description := "Rewind$NMain Contactor Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		SafeOff_y614CR250 : CONFIGURABLE_ROUT (Description := "Rewind$NDrive Enable Relay",
		            Class := Safety) := [127,250,7,0,0,67305985,127,7,2100152,2,250,8,16];
		SafeOff_y614CR250_Flt OF Flt_SafeOff[0].15 (Description := "Rewind$NDrive Enable Relay$NFault$N( 1= Fault)",
		            RADIX := Decimal);
		Safety_HB_TOF : TIMER (Description := "Safety Heartbeat$NPulse Time Off",
		            Class := Safety) := [-1070988396,250,50];
		Safety_HB_TON : TIMER (Description := "Safety Heartbeat$NPulse Time On",
		            Class := Safety) := [2753278,250,0];
		ScHorCon_FVR_En : BOOL (Description := "Scrap $NHorizontal Conveyor$NFVR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		ScHorCon_FVR_FltRst : BOOL (Description := "Scrap $NHorizontal Conveyor$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		ScHorCon_FVR_FwdCmd : BOOL (Description := "Scrap $NHorizontal Conveyor$NForward Command$N( 1= Run Fwd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		ScHorCon_FVR_RevCmd : BOOL (Description := "Scrap $NHorizontal Conveyor$NReverse Command$N( 1= Run Rev)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		ScInCon_DrvsOff : BOOL (Description := "Scrap Incline Conveyor$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		ScInCon_SafeTrqEn : BOOL (Description := "Scrap$NIncline Conveyor$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		ScrapModeOn : BOOL (Description := "Scrap Mode$NSelected$N( 1= Requested)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		SC_DrvsOff : BOOL (Description := "Scrap Chop $NConveyor$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SC_SafeTrqEn : BOOL (Description := "Scrap Chopper$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SDPLC_IO : UDT_CardSts[32] (Description := "SDPLC$NPoint I/O$N",
		            Class := Standard,
		            ExternalAccess := Read Only) := [[16897,16],[16897,16],[0,0],[16899,16],[16897,16],[16897,16],[16897,16],[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0
				],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		SDPLC_IOSts_Flt : BOOL (Description := "SDPLC$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		SDPLC_S1_ModFlt OF Flt_Modules[0].19 (Description := "SDPLC$N Point I/O Slot01$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		SDPLC_S2_ModFlt OF Flt_Modules[0].20 (Description := "SDPLC$N Point I/O Slot02$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		SDPLC_SolPwrEn : BOOL (Description := "SDPLC$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SftyMap_Citect : DINT[5] (Description := "SAFETY MAPPED$NFrom Citect System",
		            COMMENT[0].0 := "(SAFETY MAPPED)$NCitect System$NComm Fault$N( 1= Fault)",
		            Class := Safety,
		            RADIX := Decimal) := [1,0,0,0,0];
		SftyMap_Mach : DINT[5] (Description := "SAFETY MAPPED$NFrom Machine Processor",
		            COMMENT[0].0 := "(SAFETY MAPPED)$N(From Machine)$NHeartbeat Pulse",
		            COMMENT[0].1 := "(SAFETY MAPPED)$NUnwind$NHold Down Roll$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].2 := "(SAFETY MAPPED)$NUnwind$NHold Down Roll$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].3 := "(SAFETY MAPPED)$NFlattener$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].4 := "(SAFETY MAPPED)$NFlattener$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].5 := "(SAFETY MAPPED)$NTrimmer $NPinch Roll$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].6 := "(SAFETY MAPPED)$NTrimmer $NPinch Roll$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].7 := "(SAFETY MAPPED)$NTrimmer$NScrap Conveyor$NRun Command$N( 1= Run )",
		            COMMENT[0].8 := "(SAFETY MAPPED)$NPinch Roll$NForward Command$N( 1= Run Fwd )",
		            COMMENT[0].9 := "(SAFETY MAPPED)$NRewind$NPinch Roll$NReverse Command$N( 1= Run Rev)",
		            COMMENT[0].10 := "(SAFETY MAPPED)$NUnwind$NCoil Car$NSafety Reset PB",
		            COMMENT[0].11 := "SAFETY MAPPED$NLine$NEmergency Stop$NReset$NPBL",
		            COMMENT[0].12 := "(SAFTY MAPPED)$NLine$NTOTAL Mode$N( 1= Total Mode)$N(0 = Coil to Coil)",
		            Class := Safety,
		            RADIX := Decimal) := [4225,0,0,0,0];
		SftyMap_ShDie : DINT[5] (Description := "SAFETY MAPPED$NFrom Shear Die Processor",
		            COMMENT[0].0 := "(SAFETY MAPPED)$N(From Shear Die)$NHeartbeat Pulse",
		            COMMENT[0].1 := "(SAFETY MAPPED)$NShear Die Crank$NRun Command$N( 1= Run)",
		            COMMENT[0].2 := "(SAFETY MAPPED)$NScrap Horizontal$NConveyor$NRev Cmd$N( 1= Run Rev)",
		            COMMENT[0].3 := "(SAFETY MAPPED)$NScrap Horizontal$NConveyor$NRev Cmd$N( 1= Run Rev)",
		            COMMENT[0].4 := "(SAFETY MAPPED)$NStacker Chain$NFwd Cmd",
		            COMMENT[0].5 := "(SAFETY MAPPED)$NStacker Chain$NRev Cmd",
		            COMMENT[0].6 := "(SAFETY MAPPED)$NStacker $NSide Guide Lift $NFwd Cmd/Up",
		            COMMENT[0].7 := "(SAFETY MAPPED)$NStacker $NSide Guide Lift $NRev Cmd/Dwn",
		            COMMENT[0].8 := "SAFETY MAPPED$NShear$NEmergency Stop$NReset$NPBL",
		            COMMENT[0].9 := "SAFETY MAPPED$NLine$NEmergency Stop$NReset$NPBL",
		            Class := Safety,
		            RADIX := Decimal) := [3,0,0,0,0];
		Sfty_InstrFlts : DINT (Description := "Line$NInstruction Fault$NWord",
		            COMMENT.0 := "Estop$NSafety $NInstructions OK$N( 1= No Faults)",
		            COMMENT.1 := "Safe-Off$NSafety $NInstructions OK$N( 1= No Faults)",
		            COMMENT.2 := "FVR/FVNR$NStarters$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 21511;
		Sfty_InstrFlts0_CTC : BOOL (Description := "Coil To Coil$NEstop$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts0_CTL : BOOL (Description := "Cut To Length$NEstop$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts0_Total : BOOL (Description := "Total Mode$NEstop$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts1_CTC : BOOL (Description := "Coil To Coil$NSafe-Off$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts1_CTL : BOOL (Description := "Cut To Length$NSafe-Off$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts1_Total : BOOL (Description := "Total Mode$NSafe-Off$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts2_CTC : BOOL (Description := "Coil To Coil$NFVR/FVNR$NStarters$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts2_CTL : BOOL (Description := "Cut To Length$NFVR/FVNR$NStarters$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_InstrFlts2_Total : BOOL (Description := "Total Mode$NFVR/FVNR$NStarters$NSafety $NInstructions OK$N( 1= No Faults)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts : DINT (Description := "Line$NSafety Module Fault$NWord",
		            COMMENT.0 := "General I/O$NSafety Module$NFaults$N( 1= OK)",
		            COMMENT.1 := "Operator Station$NSafety Module$NFaults$N( 1= OK)",
		            COMMENT.2 := "MCC$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 8199;
		Sfty_ModFlts0_CTC : BOOL (Description := "Coil To Coil$NGeneral I/O$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts0_CTL : BOOL (Description := "Cut To Length$NGeneral I/O$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts0_Total : BOOL (Description := "Total Mode$NGeneral I/O$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts1_CTC : BOOL (Description := "Coil To Coil$NOperator Station$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts1_CTL : BOOL (Description := "Cut To Length$NOperator Station$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts1_Total : BOOL (Description := "Total Mode$NOperator Station$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts2_CTC : BOOL (Description := "Coil To Coil$NMCC$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts2_CTL : BOOL (Description := "Cut To Lenght$NMCC$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sfty_ModFlts2_Total : BOOL (Description := "Total Mode$NMCC$NSafety Module$NFaults$N( 1= OK)",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SGWA_DrvsOff : BOOL (Description := "Side Guide $NWidth Adjust$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SGWA_SafeTrqEn : BOOL (Description := "Side Guide$NWidth Adjust$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		ShearSts : UDT_ShearStatus (Class := Safety) := [14,0,[3597123,0,0],[3596673,0,0],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0],[0,0,0,0,0]];
		Shear_CoastStop : BOOL (Description := "Shear$NCoast Stop$N( 1= Coast Stop) (Condition Exists)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Shear_HB_Flt : BOOL (Description := "Shear$NHeartbeat Fault$N( 1= Fault)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Shear_HB_TOF : TIMER (Description := "Shear Heartbeat$NPulse Time Off",
		            Class := Safety) := [2753428,1200,0];
		Shear_HB_TON : TIMER (Description := "Shear Heartbeat$NPulse Time On",
		            Class := Safety) := [-1070988346,1200,0];
		SkBkSt_DrvsOff : BOOL (Description := "Stacker Backstop$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SkBkSt_SafeTrqEn : BOOL (Description := "Stacker $NBack Stop$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SkBlwr_DrvsOff : BOOL (Description := "Stacker Blower$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SkBlwr_SafeTrqEn : BOOL (Description := "Stacker Blower$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SkChain_FVR_En : BOOL (Description := "Stacker $NChain$NFVR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SkChain_FVR_FltRst : BOOL (Description := "Stacker $NChain$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SkChain_FVR_FwdCmd : BOOL (Description := "Stacker $NChain$NForward Command$N( 1= Run Fwd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SkChain_FVR_RevCmd : BOOL (Description := "Stacker $NChain$NReverse Command$N( 1= Run Rev)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SkSGLift_FVR_En : BOOL (Description := "Stacker $NSide Guide Lift$NFVR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SkSGLift_FVR_FltRst : BOOL (Description := "Stacker $NSide Guide Lift$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SkSGLift_FVR_FwdCmd : BOOL (Description := "Stacker $NSide Guide Lift$NForward Command$N( 1= Run Fwd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SkSGLift_FVR_RevCmd : BOOL (Description := "Stacker $NSide Guide Lift$NReverse Command$N( 1= Run Rev)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SrCon_DrvsOff : BOOL (Description := "Shear $NConveyor$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SrCon_SafeTrqEn : BOOL (Description := "Shear$NConveyor$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SrDieCrnk_FVNR_En : BOOL (Description := "Shear Die Crank$NFVNR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SrDieCrnk_FVNR_FltRst : BOOL (Description := "Shear Die Crank$NFVNR $NEnable ( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SrDieCrnk_FVNR_RunCmd : BOOL (Description := "Shear Die Crank$NRun Command$N( 1= Run )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SrDie_DrvsOff : BOOL (Description := "Shear Die$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SrDie_SafeOffEn : BOOL (Description := "Shear Die$NSafe-Off Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		SrDie_SafeOffFltRst : BOOL (Description := "Shear Die$NSafe-Off$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		SrPRLubePump_AutoStart : BOOL (Description := "(From Mach)$NShear Pinch Roll$NLube Pump$NAuto Start Command",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		Sr_DrvsOff : BOOL (Description := "Shear Pinch Roll/$NMetering Back Up$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		Sr_SafeTrqEn : BOOL (Description := "Shear$NPinch Roll/$NBack Up Roll$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		StHydPump_AutoStart : BOOL (Description := "(From Mach)$NSheeter$NHydraulic Pump$NAuto Start Command",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		StPRLubePump_AutoStart : BOOL (Description := "(From Mach)$NSheeter Pinch Roll$NLube Pump$NAuto Start Command",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		StPR_DrvsOff : BOOL (Description := "Sheeter $NPinch Roll$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		StPR_SafeTrqEn : BOOL (Description := "Sheeter$NPinch Roll$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		Sy_ClrFlt : BOOL (Description := "System $NClear Fault",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		Test_RN : BOOL (Class := Safety,
		            RADIX := Decimal) := 1;
		TK_DrvsOff : BOOL (Description := "Trimmer Knives/$NWidth Adjust$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		TK_SafeTrqEn : BOOL (Description := "Trimmer Knife$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		ToCitect : DINT[64] (Description := "(To Citect)",
		            COMMENT[0].0 := "(To Citect)$NHeartbeat",
		            COMMENT[0].1 := "(To Citect)$NOS1$NLine EStop$NPushbutton",
		            COMMENT[0].2 := "(To Citect)$NOS2$NLine EStop$NPushbutton",
		            COMMENT[0].3 := "(To Citect)$NOS3$NLine EStop$NPushbutton",
		            COMMENT[0].4 := "(To Citect)$NOS4N$NLine EStop$NPushbutton",
		            COMMENT[0].5 := "(To Citect)$NOS4S$NLine EStop$NPushbutton",
		            COMMENT[0].6 := "(To Citect)$NOS5$NLine EStop$NPushbutton",
		            COMMENT[0].7 := "(To Citect)$NOS6$NLine EStop$NPushbutton",
		            COMMENT[0].8 := "(To Citect)$NOS8$NLine EStop$NPushbutton",
		            COMMENT[0].9 := "(To Citect)$NOS9$NLine EStop$NPushbutton",
		            COMMENT[0].10 := "(To Citect)$NOS11$NLine EStop$NPushbutton",
		            COMMENT[0].11 := "(To Citect)$NOS13$NLine EStop$NPushbutton",
		            COMMENT[0].12 := "(To Citect)$NOS14$NLine EStop$NPushbutton",
		            COMMENT[0].13 := "(To Citect)$NOS14$NShear Estop$NPushbutton",
		            COMMENT[0].14 := "(To Citect)$NOS15$NLine EStop$NPushbutton",
		            COMMENT[0].15 := "(To Citect)$NOS16$NLine EStop$NPushbutton",
		            COMMENT[0].16 := "(To Citect)$NDPD$NLine EStop$NPushbutton",
		            COMMENT[0].17 := "(To Citect)$NDPD$N(In Pit)$NLine EStop$NPushbutton",
		            COMMENT[0].18 := "(To Citect)$NG1$NTripwire$NLine EStop",
		            COMMENT[0].19 := "(To Citect)$NH1$NLine EStop$NPushbutton",
		            COMMENT[0].20 := "(To Citect)",
		            COMMENT[0].21 := "(To Citect)",
		            COMMENT[0].22 := "(To Citect)",
		            COMMENT[0].23 := "(To Citect)",
		            COMMENT[0].24 := "(To Citect)",
		            COMMENT[0].25 := "(To Citect)",
		            COMMENT[0].26 := "(To Citect)",
		            COMMENT[0].27 := "(To Citect)",
		            COMMENT[0].28 := "(To Citect)",
		            COMMENT[0].29 := "(To Citect)",
		            COMMENT[0].30 := "(To Citect)",
		            COMMENT[0].31 := "(To Citect)",
		            COMMENT[1] := "(To Citect)",
		            COMMENT[1].1 := "(From Safety)$NLine Safety Status$NCoast Stop$N( 0 = Coast Stop)$N( 1= OK)",
		            COMMENT[1].2 := "(From Safety) $NLine Safety Status EStop $N( 0 = EStop) $N( 1= OK)",
		            COMMENT[1].3 := "(From Safety)$NLine Safety Status$NNo Faults$N( 0 = Faults)$N( 1= OK)",
		            COMMENT[1].5 := "(From Safety)$NLine Safety Status$NAll Drives Off$N( 1= All Off)",
		            COMMENT[1].6 := "(From Safety)$NLine Safety Status$NSafety Pwr On$N( 1= All On)",
		            COMMENT[2].1 := "(From Safety)$NShear Safety Status$NCoast Stop$N( 0 = Coast Stop)$N( 1= OK)",
		            COMMENT[2].2 := "(From Safety)$NShear Safety Status$NEStop$N( 0 = EStop)$N( 1= OK)",
		            COMMENT[2].3 := "(From Safety)$NShear Safety Status$NNo Faults$N( 0 = Faults)$N( 1= OK)",
		            COMMENT[2].5 := "(From Safety)$NShear Safety Status$NAll Drives Off$N( 1= All Off)",
		            COMMENT[2].6 := "(From Safety)$NShear Safety Status$NSafety Pwr On$N( 1= All On)",
		            Class := Standard,
		            RADIX := Decimal) := [1048574,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		ToCitect4 : DINT[64] (Description := "(To Citect4)",
		            COMMENT[0].0 := "A1:O.Data[20].0$Ny406CR050$NLine Solenoid Safe Off",
		            COMMENT[0].1 := "A1:O.Data[20].1$Ny406CR090$NCoil Car Solenoid Safe Off",
		            COMMENT[0].2 := "A1:O.Data[20].2$Ny406CR120$NSpare",
		            COMMENT[0].3 := "A1:O.Data[20].3$Ny406CR170$NSpare",
		            COMMENT[0].4 := "A1:O.Data[20].4$NA1_S20_4$N(SPARE)",
		            COMMENT[0].5 := "A1:O.Data[20].5$NA1_S20_5$N(SPARE)",
		            COMMENT[0].6 := "A1:O.Data[20].6$NA1_S20_6$N(SPARE)",
		            COMMENT[0].7 := "A1:O.Data[20].7$NA1_S20_7$N(SPARE)",
		            COMMENT[0].8 := "A1:I.Data[21].0$Nx406LCA047$NNorth/South Light Curtain Output A",
		            COMMENT[0].9 := "A1:I.Data[21].1$Nx406LCB052$NNorth/South Light Curtain Output B",
		            COMMENT[0].10 := "A1:I.Data[21].2$NA1_S21_2$N(SPARE)",
		            COMMENT[0].11 := "A1:I.Data[21].3$NA1_S21_3$N(SPARE)",
		            COMMENT[0].12 := "A1:I.Data[21].4$NA1_S21_4$N(SPARE)",
		            COMMENT[0].13 := "A1:I.Data[21].5$NA1_S21_5$N(SPARE)",
		            COMMENT[0].14 := "A1:I.Data[21].6$NA1_S21_6$N(SPARE)",
		            COMMENT[0].15 := "A1:I.Data[21].7$NA1_S21_7$N(SPARE)",
		            COMMENT[0].16 := "C1:O.Data[12].0$Ny435CR050$NSolenoid Safe Off",
		            COMMENT[0].17 := "C1:O.Data[12].1$NC1_S12_1$N(SPARE)",
		            COMMENT[0].18 := "C1:O.Data[12].2$NC1_S12_2$N(SPARE)",
		            COMMENT[0].19 := "C1:O.Data[12].3$NC1_S12_3$N(SPARE)",
		            COMMENT[0].20 := "C1:O.Data[12].4$NC1_S12_4$N(SPARE)",
		            COMMENT[0].21 := "C1:O.Data[12].5$NC1_S12_5$N(SPARE)",
		            COMMENT[0].22 := "C1:O.Data[12].6$NC1_S12_6$N(SPARE)",
		            COMMENT[0].23 := "C1:O.Data[12].7$NC1_S12_7$N(SPARE)",
		            COMMENT[0].24 := "CHPLC:I.Data[1].0$Nx613CR460$NUnwind Operator Side Main Contactor Safety Relay",
		            COMMENT[0].25 := "CHPLC:I.Data[1].1$Nx613CR510$NUnwind Operator Side Drive Enable Safety Relay",
		            COMMENT[0].26 := "CHPLC:I.Data[1].2$Nx613CR550$NUnwind Drive Side Main Contactor Safety Relay",
		            COMMENT[0].27 := "CHPLC:I.Data[1].3$Nx613CR590$NUnwind Drive Side Drive Enable Safety Relay",
		            COMMENT[0].28 := "CHPLC:I.Data[1].4$Nx613CR630$N#1 Entry Bridle Roll 2 Main Contactor Safety Relay",
		            COMMENT[0].29 := "CHPLC:I.Data[1].5$Nx613CR670$N#1 Entry Bridle Roll 2 Drive Enable Safety Relay",
		            COMMENT[0].30 := "CHPLC:I.Data[1].6$Nx613CR710$N#2 Entry Bridle Roll 3 Main Contactor Safety Relay",
		            COMMENT[0].31 := "CHPLC:I.Data[1].7$Nx613CR750$N#2 Entry Bridle Roll 3 Drive Enable Safety Relay",
		            COMMENT[1].0 := "CHPLC:I.Data[2].0$Nx614CR040$N#1 Exit Bridle Roll 6 Main Contactor Safety Relay",
		            COMMENT[1].1 := "CHPLC:I.Data[2].1$Nx614CR090$N#1 Exit Bridle Roll 6 Drive Enable Safety Relay",
		            COMMENT[1].2 := "CHPLC:I.Data[2].2$Nx614CR130$N#2 Exit Bridle Roll 7 Main Contactor Safety Relay",
		            COMMENT[1].3 := "CHPLC:I.Data[2].3$Nx614CR170$N#2 Exit Bridle Roll 7 Drive Enable Safety Relay",
		            COMMENT[1].4 := "CHPLC:I.Data[2].4$Nx614CR210$NRewind Main Contactor Safety Relay",
		            COMMENT[1].5 := "CHPLC:I.Data[2].5$Nx614CR250$NRewind Drive Enable Safety Relay",
		            COMMENT[1].6 := "CHPLC:I.Data[2].6$NCHPLC_S2_6$N(SPARE)",
		            COMMENT[1].7 := "CHPLC:I.Data[2].7$NCHPLC_S2_7$N(SPARE)",
		            COMMENT[1].8 := "CHPLC:I.Data[3].0$NCHPLC_S3_0$N(SPARE)",
		            COMMENT[1].9 := "CHPLC:I.Data[3].1$NCHPLC_S3_1$N(SPARE)",
		            COMMENT[1].10 := "CHPLC:I.Data[3].2$NCHPLC_S3_2$N(SPARE)",
		            COMMENT[1].11 := "CHPLC:I.Data[3].3$NCHPLC_S3_3$N(SPARE)",
		            COMMENT[1].12 := "CHPLC:I.Data[3].4$NCHPLC_S3_4$N(SPARE)",
		            COMMENT[1].13 := "CHPLC:I.Data[3].5$NCHPLC_S3_5$N(SPARE)",
		            COMMENT[1].14 := "CHPLC:I.Data[3].6$NCHPLC_S3_6$N(SPARE)",
		            COMMENT[1].15 := "CHPLC:I.Data[3].7$NCHPLC_S3_7$N(SPARE)",
		            COMMENT[1].16 := "CHPLC:O.Data[4].0$Ny613CR460$NUnwind Operator Side Main Contactor Safety Relay",
		            COMMENT[1].17 := "CHPLC:O.Data[4].1$Ny613CR510$NUnwind Operator Side Drive Enable Safety Relay",
		            COMMENT[1].18 := "CHPLC:O.Data[4].2$Ny613CR550$NUnwind Drive Side Main Contactor Safety Relay",
		            COMMENT[1].19 := "CHPLC:O.Data[4].3$Ny613CR590$NUnwind Drive Side Drive Enable Safety Relay",
		            COMMENT[1].20 := "CHPLC:O.Data[4].4$Ny613CR630$N#1 Entry Bridle Roll 2 Main Contactor Safety Relay",
		            COMMENT[1].21 := "CHPLC:O.Data[4].5$Ny613CR670$N#1 Entry Bridle Roll 2 Drive Enable Safety Relay",
		            COMMENT[1].22 := "CHPLC:O.Data[4].6$Ny613CR710$N#2 Entry Bridle Roll 3 Main Contactor Safety Relay",
		            COMMENT[1].23 := "CHPLC:O.Data[4].7$Ny613CR750$N#2 Entry Bridle Roll 3 Drive Enable Safety Relay",
		            COMMENT[1].24 := "CHPLC:O.Data[5].0$Ny614CR040$N#1 Exit Bridle Roll 6 Main Contactor Safety Relay",
		            COMMENT[1].25 := "CHPLC:O.Data[5].1$Ny614CR090$N#1 Exit Bridle Roll 6 Drive Enable Safety Relay",
		            COMMENT[1].26 := "CHPLC:O.Data[5].2$Ny614CR130$N#2 Exit Bridle Roll 7 Main Contactor Safety Relay",
		            COMMENT[1].27 := "CHPLC:O.Data[5].3$Ny614CR170$N#2 Exit Bridle Roll 7 Drive Enable Safety Relay",
		            COMMENT[1].28 := "CHPLC:O.Data[5].4$Ny614CR210$NRewind Main Contactor Safety Relay",
		            COMMENT[1].29 := "CHPLC:O.Data[5].5$Ny614CR250$NRewind Drive Enable Safety Relay",
		            COMMENT[1].30 := "CHPLC:O.Data[5].6$NCHPLC_S5_6$N(SPARE)",
		            COMMENT[1].31 := "CHPLC:O.Data[5].7$NCHPLC_S5_7$N(SPARE)",
		            COMMENT[2].0 := "CHPLC:O.Data[6].0$NCHPLC_S6_0$N(SPARE)",
		            COMMENT[2].1 := "CHPLC:O.Data[6].1$NCHPLC_S6_1$N(SPARE)",
		            COMMENT[2].2 := "CHPLC:O.Data[6].2$NCHPLC_S6_2$N(SPARE)",
		            COMMENT[2].3 := "CHPLC:O.Data[6].3$NCHPLC_S6_3$N(SPARE)",
		            COMMENT[2].4 := "CHPLC:O.Data[6].4$NCHPLC_S6_4$N(SPARE)",
		            COMMENT[2].5 := "CHPLC:O.Data[6].5$NCHPLC_S6_5$N(SPARE)",
		            COMMENT[2].6 := "CHPLC:O.Data[6].6$NCHPLC_S6_6$N(SPARE)",
		            COMMENT[2].7 := "CHPLC:O.Data[6].7$NCHPLC_S6_7$N(SPARE)",
		            COMMENT[2].8 := "D1:O.Data[12].0$Ny451CR050$NSoleniod Safe Off",
		            COMMENT[2].9 := "D1:O.Data[12].1$ND1_S12_1$N(SPARE)",
		            COMMENT[2].10 := "D1:O.Data[12].2$ND1_S12_2$N(SPARE)",
		            COMMENT[2].11 := "D1:O.Data[12].3$ND1_S12_3$N(SPARE)",
		            COMMENT[2].12 := "D1:O.Data[12].4$ND1_S12_4$N(SPARE)",
		            COMMENT[2].13 := "D1:O.Data[12].5$ND1_S12_5$N(SPARE)",
		            COMMENT[2].14 := "D1:O.Data[12].6$ND1_S12_6$N(SPARE)",
		            COMMENT[2].15 := "D1:O.Data[12].7$ND1_S12_7$N(SPARE)",
		            COMMENT[2].16 := "DPD:O.Data[14].0$Ny480CR050$NSolenoid Safe Off",
		            COMMENT[2].17 := "DPD:O.Data[14].1$NDPD_S14_1$N(SPARE)",
		            COMMENT[2].18 := "DPD:O.Data[14].2$NDPD_S14_2$N(SPARE)",
		            COMMENT[2].19 := "DPD:O.Data[14].3$NDPD_S14_3$N(SPARE)",
		            COMMENT[2].20 := "DPD:O.Data[14].4$NDPD_S14_4$N(SPARE)",
		            COMMENT[2].21 := "DPD:O.Data[14].5$NDPD_S14_5$N(SPARE)",
		            COMMENT[2].22 := "DPD:O.Data[14].6$NDPD_S14_6$N(SPARE)",
		            COMMENT[2].23 := "DPD:O.Data[14].7$NDPD_S14_7$N(SPARE)",
		            COMMENT[2].24 := "DPD:I.Data[15].0$Nx480PB470a$NEmergency Stop Pushbutton",
		            COMMENT[2].25 := "DPD:I.Data[15].1$Nx480PB470b$NEmergency Stop Pushbutton",
		            COMMENT[2].26 := "DPD:I.Data[15].2$Nx480PB550a$NEmergency Stop Pushbutton (In Pit)",
		            COMMENT[2].27 := "DPD:I.Data[15].3$Nx480PB550b$NEmergency Stop Pushbutton (In Pit)",
		            COMMENT[2].28 := "DPD:I.Data[15].4$NDPD_S15_4$N(SPARE)",
		            COMMENT[2].29 := "DPD:I.Data[15].5$NDPD_S15_5$N(SPARE)",
		            COMMENT[2].30 := "DPD:I.Data[15].6$NDPD_S15_6$N(SPARE)",
		            COMMENT[2].31 := "DPD:I.Data[15].7$NDPD_S15_7$N(SPARE)",
		            COMMENT[3].0 := "E1:O.Data[10].0$Ny464CR050$NSoleniod Safe Off",
		            COMMENT[3].1 := "E1:O.Data[10].1$NE1_S10_1$N(SPARE)",
		            COMMENT[3].2 := "E1:O.Data[10].2$NE1_S10_2$N(SPARE)",
		            COMMENT[3].3 := "E1:O.Data[10].3$NE1_S10_3$N(SPARE)",
		            COMMENT[3].4 := "E1:O.Data[10].4$NE1_S10_4$N(SPARE)",
		            COMMENT[3].5 := "E1:O.Data[10].5$NE1_S10_5$N(SPARE)",
		            COMMENT[3].6 := "E1:O.Data[10].6$NE1_S10_6$N(SPARE)",
		            COMMENT[3].7 := "E1:O.Data[10].7$NE1_S10_7$N(SPARE)",
		            COMMENT[3].8 := "F1:O.Data[19].0$Ny507CR050$NLine Solenoid Safe Off",
		            COMMENT[3].9 := "F1:O.Data[19].1$Ny507CR090$NRewind Coil Car Solenoid Safe Off",
		            COMMENT[3].10 := "F1:O.Data[19].2$NF1_S19_2$N(SPARE)",
		            COMMENT[3].11 := "F1:O.Data[19].3$NF1_S19_3$N(SPARE)",
		            COMMENT[3].12 := "F1:O.Data[19].4$NF1_S19_4$N(SPARE)",
		            COMMENT[3].13 := "F1:O.Data[19].5$NF1_S19_5$N(SPARE)",
		            COMMENT[3].14 := "F1:O.Data[19].6$NF1_S19_6$N(SPARE)",
		            COMMENT[3].15 := "F1:O.Data[19].7$NF1_S19_7$N(SPARE)",
		            COMMENT[3].16 := "F1:I.Data[20].0$NF1_S20_0$N(SPARE)",
		            COMMENT[3].17 := "F1:I.Data[20].1$NF1_S20_1$N(SPARE)",
		            COMMENT[3].18 := "F1:I.Data[20].2$NF1_S20_2$N(SPARE)",
		            COMMENT[3].19 := "F1:I.Data[20].3$NF1_S20_3$N(SPARE)",
		            COMMENT[3].20 := "F1:I.Data[20].4$NF1_S20_4$N(SPARE)",
		            COMMENT[3].21 := "F1:I.Data[20].5$NF1_S20_5$N(SPARE)",
		            COMMENT[3].22 := "F1:I.Data[20].6$NF1_S20_6$N(SPARE)",
		            COMMENT[3].23 := "F1:I.Data[20].7$NF1_S20_7$N(SPARE)",
		            COMMENT[3].24 := "G1:O.Data[11].0$Ny519CR050$NLine Solenoid Safe Off",
		            COMMENT[3].25 := "G1:O.Data[11].1$NG1_S11_1$N(SPARE)",
		            COMMENT[3].26 := "G1:O.Data[11].2$NG1_S11_2$N(SPARE)",
		            COMMENT[3].27 := "G1:O.Data[11].3$NG1_S11_3$N(SPARE)",
		            COMMENT[3].28 := "G1:O.Data[11].4$NG1_S11_4$N(SPARE)",
		            COMMENT[3].29 := "G1:O.Data[11].5$NG1_S11_5$N(SPARE)",
		            COMMENT[3].30 := "G1:O.Data[11].6$NG1_S11_6$N(SPARE)",
		            COMMENT[3].31 := "G1:O.Data[11].7$NG1_S11_7$N(SPARE)",
		            COMMENT[4].0 := "G1:I.Data[12].0$Nx519LS470$NTripwire Emergency Stop Limit Switch",
		            COMMENT[4].1 := "G1:I.Data[12].1$NG1_S12_1$N(SPARE)",
		            COMMENT[4].2 := "G1:I.Data[12].2$NG1_S12_2$N(SPARE)",
		            COMMENT[4].3 := "G1:I.Data[12].3$NG1_S12_3$N(SPARE)",
		            COMMENT[4].4 := "G1:I.Data[12].4$NG1_S12_4$N(SPARE)",
		            COMMENT[4].5 := "G1:I.Data[12].5$NG1_S12_5$N(SPARE)",
		            COMMENT[4].6 := "G1:I.Data[12].6$NG1_S12_6$N(SPARE)",
		            COMMENT[4].7 := "G1:I.Data[12].7$NG1_S12_7$N(SPARE)",
		            COMMENT[4].8 := "H1:O.Data[5].0$Ny533CR050$NLine Solenoid Safe Off",
		            COMMENT[4].9 := "H1:O.Data[5].1$NH1_S5_1$N(SPARE)",
		            COMMENT[4].10 := "H1:O.Data[5].2$NH1_S5_2$N(SPARE)",
		            COMMENT[4].11 := "H1:O.Data[5].3$NH1_S5_3$N(SPARE)",
		            COMMENT[4].12 := "H1:O.Data[5].4$NH1_S5_4$N(SPARE)",
		            COMMENT[4].13 := "H1:O.Data[5].5$NH1_S5_5$N(SPARE)",
		            COMMENT[4].14 := "H1:O.Data[5].6$NH1_S5_6$N(SPARE)",
		            COMMENT[4].15 := "H1:O.Data[5].7$NH1_S5_7$N(SPARE)",
		            COMMENT[4].16 := "H1:I.Data[6].0$Nx533PB470a$NSheeter Emergency Stop Pushbutton",
		            COMMENT[4].17 := "H1:I.Data[6].1$Nx533PB470b$NSheeter Emergency Stop Pushbutton",
		            COMMENT[4].18 := "H1:I.Data[6].2$NH1_S6_2$N(SPARE)",
		            COMMENT[4].19 := "H1:I.Data[6].3$NH1_S6_3$N(SPARE)",
		            COMMENT[4].20 := "H1:I.Data[6].4$NH1_S6_4$N(SPARE)",
		            COMMENT[4].21 := "H1:I.Data[6].5$NH1_S6_5$N(SPARE)",
		            COMMENT[4].22 := "H1:I.Data[6].6$NH1_S6_6$N(SPARE)",
		            COMMENT[4].23 := "H1:I.Data[6].7$NH1_S6_7$N(SPARE)",
		            COMMENT[4].24 := "MCC1:I.Data[1].0$Nx702MTR191FF$NRewind  Pinch Roll  Fwd Fdbk",
		            COMMENT[4].25 := "MCC1:I.Data[1].1$Nx702MTR191RF$NRewind  Pinch Roll  Rev Fdbk",
		            COMMENT[4].26 := "MCC1:I.Data[1].2$NMCC1_S1_2$N(SPARE)",
		            COMMENT[4].27 := "MCC1:I.Data[1].3$NMCC1_S1_3$N(SPARE)",
		            COMMENT[4].28 := "MCC1:I.Data[1].4$Nx708MTR080FF$NFlattener  Drive Motor  Fwd Fdbk",
		            COMMENT[4].29 := "MCC1:I.Data[1].5$Nx708MTR080RF$NFlattener  Drive Motor  Rev Fdbk",
		            COMMENT[4].30 := "MCC1:I.Data[1].6$Nx708MTR250FF$NUnwind  Holddown Roll Drive Motor  Fwd Fdbk",
		            COMMENT[4].31 := "MCC1:I.Data[1].7$Nx708MTR250RF$NUnwind  Holddown Roll Drive Motor  Rev Fdbk",
		            COMMENT[5].0 := "MCC1:O.Data[6].0$Ny702MTR191FC$NRewind  Pinch Roll  Fwd Cmd",
		            COMMENT[5].1 := "MCC1:O.Data[6].1$Ny702MTR191RC$NRewind  Pinch Roll  Rev Cmd",
		            COMMENT[5].2 := "MCC1:O.Data[6].2$NMCC1_S6_2$N(SPARE)",
		            COMMENT[5].3 := "MCC1:O.Data[6].3$NMCC1_S6_3$N(SPARE)",
		            COMMENT[5].4 := "MCC1:O.Data[6].4$Ny708MTR080FC$NFlattener  Drive Motor  Fwd Cmd",
		            COMMENT[5].5 := "MCC1:O.Data[6].5$Ny708MTR080RC$NFlattener  Drive Motor  Rev Cmd",
		            COMMENT[5].6 := "MCC1:O.Data[6].6$Ny708MTR250FC$NUnwind  Holddown Roll Drive Motor  Fwd Cmd",
		            COMMENT[5].7 := "MCC1:O.Data[6].7$Ny708MTR250RC$NUnwind  Holddown Roll Drive Motor  Rev Cmd",
		            COMMENT[5].8 := "MCC2:O.Data[1].0$Ny725MTR080SP$NUnwind  Pinch Roll  Safety Power",
		            COMMENT[5].9 := "MCC2:O.Data[1].1$Ny725MTR080SE$NUnwind  Pinch Roll  Safety Enable",
		            COMMENT[5].10 := "MCC2:O.Data[1].2$Ny729MTR080SP$NWashtank  Pinch Roll 4 Safety Power",
		            COMMENT[5].11 := "MCC2:O.Data[1].3$Ny729MTR080SE$NWashtank  Pinch Roll 4 Safety Enable",
		            COMMENT[5].12 := "MCC2:O.Data[1].4$Ny727MTR080SP$NPaper Winder Safety Power",
		            COMMENT[5].13 := "MCC2:O.Data[1].5$Ny727MTR080SE$NPaper Winder Safety Enable",
		            COMMENT[5].14 := "MCC2:O.Data[1].6$Ny731MTR080SP$NWashtank  Pinch Roll 1 Safety Power",
		            COMMENT[5].15 := "MCC2:O.Data[1].7$Ny731MTR080SE$NWashtank  Pinch Roll 1 Safety Enable",
		            COMMENT[5].16 := "MCC2:O.Data[2].0$Ny733MTR080SP$NWashtank  Pinch Roll 2 Safety Power",
		            COMMENT[5].17 := "MCC2:O.Data[2].1$Ny733MTR080SE$NWashtank  Pinch Roll 2 Safety Enable",
		            COMMENT[5].18 := "MCC2:O.Data[2].2$Ny735MTR080SP$NWashtank  Pinch Roll 3 Safety Power",
		            COMMENT[5].19 := "MCC2:O.Data[2].3$Ny735MTR080SE$NWashtank  Pinch Roll 3 Safety Enable",
		            COMMENT[5].20 := "MCC2:O.Data[2].4$NMCC2_S2_4$N(SPARE)",
		            COMMENT[5].21 := "MCC2:O.Data[2].5$NMCC2_S2_5$N(SPARE)",
		            COMMENT[5].22 := "MCC2:O.Data[2].6$NMCC2_S2_6$N(SPARE)",
		            COMMENT[5].23 := "MCC2:O.Data[2].7$NMCC2_S2_7$N(SPARE)",
		            COMMENT[5].24 := "MCC3:I.Data[1].0$Nx753MTR190FF$NTrimmer  Pinch Roll  Fwd Fdbk",
		            COMMENT[5].25 := "MCC3:I.Data[1].1$Nx753MTR190RF$NTrimmer  Pinch Roll  Rev Fdbk",
		            COMMENT[5].26 := "MCC3:I.Data[1].2$Nx761MTR081RF$NTrimmer  Scrap Conveyor  RunFdbk",
		            COMMENT[5].27 := "MCC3:I.Data[1].3$NMCC3_S1_3$N(SPARE)",
		            COMMENT[5].28 := "MCC3:I.Data[1].4$NMCC3_S1_4$N(SPARE)",
		            COMMENT[5].29 := "MCC3:I.Data[1].5$NMCC3_S1_5$N(SPARE)",
		            COMMENT[5].30 := "MCC3:I.Data[1].6$NMCC3_S1_6$N(SPARE)",
		            COMMENT[5].31 := "MCC3:I.Data[1].7$NMCC3_S1_7$N(SPARE)",
		            COMMENT[6].0 := "MCC3:O.Data[3].0$Ny753MTR190FC$NTrimmer  Pinch Roll  Fwd Cmd",
		            COMMENT[6].1 := "MCC3:O.Data[3].1$Ny753MTR190RC$NTrimmer  Pinch Roll  Rev Cmd",
		            COMMENT[6].2 := "MCC3:O.Data[3].2$Ny761MTR081RC$NTrimmer  Scrap Conveyor  RunCmd",
		            COMMENT[6].3 := "MCC3:O.Data[3].3$Ny751MTR080SP$NTrimmer   Knives Safety Power",
		            COMMENT[6].4 := "MCC3:O.Data[3].4$Ny751MTR080SE$NTrimmer   Knives Safety Enable",
		            COMMENT[6].5 := "MCC3:O.Data[3].5$Ny754MTR080SP$NSide Guide   Width Adjust Safety Power",
		            COMMENT[6].6 := "MCC3:O.Data[3].6$Ny754MTR080SE$NSide Guide   Width Adjust Safety Enable",
		            COMMENT[6].7 := "MCC3:O.Data[3].7$Ny755MTR080SP$NTrimmer   Knives Width Adjust Safety Power",
		            COMMENT[6].8 := "MCC3:O.Data[4].0$Ny755MTR080SE$NTrimmer   Knives Width Adjust Safety Enable",
		            COMMENT[6].9 := "MCC3:O.Data[4].1$Nx759MTR080SP$NScrap  Choppers Width Adjust Safety Power",
		            COMMENT[6].10 := "MCC3:O.Data[4].2$Nx759MTR080SE$NScrap  Choppers Width Adjust Safety Enable",
		            COMMENT[6].11 := "MCC3:O.Data[4].3$Ny762MTR080SP$NScrap  Choppers Safety Power",
		            COMMENT[6].12 := "MCC3:O.Data[4].4$Ny762MTR080SE$NScrap  Choppers Safety Enable",
		            COMMENT[6].13 := "MCC3:O.Data[4].5$NMCC3_S4_5$N(SPARE)",
		            COMMENT[6].14 := "MCC3:O.Data[4].6$NMCC3_S4_6$N(SPARE)",
		            COMMENT[6].15 := "MCC3:O.Data[4].7$NMCC3_S4_7$N(SPARE)",
		            COMMENT[6].16 := "MCC4:I.Data[1].0$Nx778MTR080RF$NShear Crank Motor Run  Fdbk",
		            COMMENT[6].17 := "MCC4:I.Data[1].1$NMCC4_S1_1$N(SPARE)",
		            COMMENT[6].18 := "MCC4:I.Data[1].2$NMCC4_S1_2$N(SPARE)",
		            COMMENT[6].19 := "MCC4:I.Data[1].3$NMCC4_S1_3$N(SPARE)",
		            COMMENT[6].20 := "MCC4:I.Data[1].4$NMCC4_S1_4$N(SPARE)",
		            COMMENT[6].21 := "MCC4:I.Data[1].5$NMCC4_S1_5$N(SPARE)",
		            COMMENT[6].22 := "MCC4:I.Data[1].6$NMCC4_S1_6$N(SPARE)",
		            COMMENT[6].23 := "MCC4:I.Data[1].7$NMCC4_S1_7$N(SPARE)",
		            COMMENT[6].24 := "MCC4:O.Data[3].0$Ny779MTR080SP$NShear  Pinch Roll  Safety Power",
		            COMMENT[6].25 := "MCC4:O.Data[3].1$Ny779MTR080SE$NShear  Pinch Roll  Safety Enable",
		            COMMENT[6].26 := "MCC4:O.Data[3].2$Ny782MTR080SP$NSheeter  Pinch Roll  Safety Power",
		            COMMENT[6].27 := "MCC4:O.Data[3].3$Ny782MTR080SE$NSheeter  Pinch Roll  Safety Enable",
		            COMMENT[6].28 := "MCC4:O.Data[3].4$Ny785MTR080SP$NStacker  Blower  Safety Power",
		            COMMENT[6].29 := "MCC4:O.Data[3].5$Ny785MTR080SE$NStacker  Blower  Safety Enable",
		            COMMENT[6].30 := "MCC4:O.Data[3].6$Ny776MTR080SP$NShear  Metering  Backup Roll  Safety Power",
		            COMMENT[6].31 := "MCC4:O.Data[3].7$Ny776MTR080SE$NShear  Metering  Backup Roll   Safety Enable",
		            COMMENT[7].0 := "MCC4:O.Data[4].0$Ny778MTR080RC$NShear  Die Crank Run Cmd",
		            COMMENT[7].1 := "MCC4:O.Data[4].1$NMCC4_S4_1$N(SPARE)",
		            COMMENT[7].2 := "MCC4:O.Data[4].2$NMCC4_S4_2$N(SPARE)",
		            COMMENT[7].3 := "MCC4:O.Data[4].3$NMCC4_S4_3$N(SPARE)",
		            COMMENT[7].4 := "MCC4:O.Data[4].4$NMCC4_S4_4$N(SPARE)",
		            COMMENT[7].5 := "MCC4:O.Data[4].5$NMCC4_S4_5$N(SPARE)",
		            COMMENT[7].6 := "MCC4:O.Data[4].6$NMCC4_S4_6$N(SPARE)",
		            COMMENT[7].7 := "MCC4:O.Data[4].7$NMCC4_S4_7$N(SPARE)",
		            COMMENT[7].8 := "MCC5:I.Data[1].0$Nx802MTR080FF$NStacker Side Guide Lift Fwd Fdbk/Up",
		            COMMENT[7].9 := "MCC5:I.Data[1].1$Nx802MTR080RF$NStacker Side Guide Lift Rev Fdbk/Down",
		            COMMENT[7].10 := "MCC5:I.Data[1].2$Nx802MTR230FF$NScrap Horizontal Conveyor Run  Fwd Fdbk",
		            COMMENT[7].11 := "MCC5:I.Data[1].3$Nx802MTR230RF$NScrap Horizontal Conveyor Run  Rev Fdbk",
		            COMMENT[7].12 := "MCC5:I.Data[1].4$Nx802MTR231FF$NStacker Chain Fwd Fdbk",
		            COMMENT[7].13 := "MCC5:I.Data[1].5$Nx802MTR231RF$NStacker Chain Rev Fdbk",
		            COMMENT[7].14 := "MCC5:I.Data[1].6$NMCC5_S1_6$N(SPARE)",
		            COMMENT[7].15 := "MCC5:I.Data[1].7$NMCC5_S1_7$N(SPARE)",
		            COMMENT[7].16 := "MCC5:O.Data[3].0$Ny800MTR080SP$NScrap Incline Conveyor Safety Power",
		            COMMENT[7].17 := "MCC5:O.Data[3].1$Ny800MTR080SE$NScrap Incline Conveyor Safety Enable",
		            COMMENT[7].18 := "MCC5:O.Data[3].2$Ny804MTR080SP$NStacker Back Stop Safety Power",
		            COMMENT[7].19 := "MCC5:O.Data[3].3$Ny804MTR080SE$NStacker Back Stop Safety Enable",
		            COMMENT[7].20 := "MCC5:O.Data[3].4$Ny806MTR080SP$NProduct Conveyor 3 Safety Power",
		            COMMENT[7].21 := "MCC5:O.Data[3].5$Ny806MTR080SE$NProduct Conveyor 3 Safety Enable",
		            COMMENT[7].22 := "MCC5:O.Data[3].6$Ny808MTR080SP$NProduct Conveyor 1 Safety Power",
		            COMMENT[7].23 := "MCC5:O.Data[3].7$Ny808MTR080SE$NProduct Conveyor 1 Safety Enable",
		            COMMENT[7].24 := "MCC5:O.Data[4].0$Ny810MTR080SP$NProduct Conveyor 2 Safety Power",
		            COMMENT[7].25 := "MCC5:O.Data[4].1$Ny810MTR080SE$NProduct Conveyor 2 Safety Enable",
		            COMMENT[7].26 := "MCC5:O.Data[4].2$Ny812MTR080SP$NShear Conveyor Safety Power",
		            COMMENT[7].27 := "MCC5:O.Data[4].3$Ny812MTR080SE$NShear Conveyor Safety Enable",
		            COMMENT[7].28 := "MCC5:O.Data[4].4$Ny802MTR080FC$NStacker Side Guide Lift Fwd Cmd/Up",
		            COMMENT[7].29 := "MCC5:O.Data[4].5$Ny802MTR080RC$NStacker Side Guide Lift Rev Cmd/Down",
		            COMMENT[7].30 := "MCC5:O.Data[4].6$Ny802MTR230FC$NScrap Horizontal Conveyor  Fwd Cmd",
		            COMMENT[7].31 := "MCC5:O.Data[4].7$Ny802MTR230RC$NScrap Horizontal  Conveyor  Rev Cmd",
		            COMMENT[8].0 := "MCC5:O.Data[5].0$Ny802MTR231FC$NStacker Chain Fwd Cmd",
		            COMMENT[8].1 := "MCC5:O.Data[5].1$Ny802MTR231RC$NStacker Chain Rev Cmd",
		            COMMENT[8].2 := "MCC5:O.Data[5].2$NMCC5_S5_2$N(SPARE)",
		            COMMENT[8].3 := "MCC5:O.Data[5].3$NMCC5_S5_3$N(SPARE)",
		            COMMENT[8].4 := "MCC5:O.Data[5].4$NMCC5_S5_4$N(SPARE)",
		            COMMENT[8].5 := "MCC5:O.Data[5].5$NMCC5_S5_5$N(SPARE)",
		            COMMENT[8].6 := "MCC5:O.Data[5].6$NMCC5_S5_6$N(SPARE)",
		            COMMENT[8].7 := "MCC5:O.Data[5].7$NMCC5_S5_7$N(SPARE)",
		            COMMENT[8].8 := "SDPLC:I.Data[1].0$Nx172CR460$NShear Die Drive Main Contactor Safety Relay Input",
		            COMMENT[8].9 := "SDPLC:I.Data[1].1$Nx172CR510$NShear Die Drive Enable Safety Relay Input",
		            COMMENT[8].10 := "SDPLC:I.Data[1].2$NSDPLC_S1_2$N(SPARE)",
		            COMMENT[8].11 := "SDPLC:I.Data[1].3$NSDPLC_S1_3$N(SPARE)",
		            COMMENT[8].12 := "SDPLC:I.Data[1].4$NSDPLC_S1_4$N(SPARE)",
		            COMMENT[8].13 := "SDPLC:I.Data[1].5$NSDPLC_S1_5$N(SPARE)",
		            COMMENT[8].14 := "SDPLC:I.Data[1].6$NSDPLC_S1_6$N(SPARE)",
		            COMMENT[8].15 := "SDPLC:I.Data[1].7$NSDPLC_S1_7$N(SPARE)",
		            COMMENT[8].16 := "SDPLC:O.Data[2].0$Ny172CR460$NShear Die Drive Main Contactor Safety Relay Output",
		            COMMENT[8].17 := "SDPLC:O.Data[2].1$Ny172CR510$NShear Die Drive Enable Safety Relay Output",
		            COMMENT[8].18 := "SDPLC:O.Data[2].2$Ny172CR550$NLine Soleniod Safe-Off",
		            COMMENT[8].19 := "SDPLC:O.Data[2].3$NSDPLC_S2_2$N(SPARE)",
		            COMMENT[8].20 := "SDPLC:O.Data[2].4$NSDPLC_S2_3$N(SPARE)",
		            COMMENT[8].21 := "SDPLC:O.Data[2].5$NSDPLC_S2_4$N(SPARE)",
		            COMMENT[8].22 := "SDPLC:O.Data[2].6$NSDPLC_S2_5$N(SPARE)",
		            COMMENT[8].23 := "SDPLC:O.Data[2].7$NSDPLC_S2_6$N(SPARE)",
		            Class := Standard,
		            RADIX := Decimal) := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		TrimPR_FVR_En : BOOL (Description := "Trimmer $NPinch Roll$NFVR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		TrimPR_FVR_FltRst : BOOL (Description := "Trimmer $NPinch Roll$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		TrimPR_FVR_FwdCmd : BOOL (Description := "Trimmer $NPinch Roll$NForward Command$N( 1= Run Fwd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		TrimPR_FVR_RevCmd : BOOL (Description := "Trimmer $NPinch Roll$NReverse Command$N( 1= Run Rev)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		TrimScCon_FVNR_En : BOOL (Description := "Trimmer$NScrap Conveyor$NFVNR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		TrimScCon_FVNR_FltRst : BOOL (Description := "Trimmer$NScrap Conveyor$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		TrimScCon_FVNR_RunCmd : BOOL (Description := "Trimmer$NScrap Conveyor$NRun Command$N( 1= Run )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		UnPR_DrvsOff : BOOL (Description := "Unwind Pinch Roll$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		UnPR_SafeTrqEn : BOOL (Description := "Unwind Pinch Roll$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		UnwHoldDwn_FVR_En : BOOL (Description := "Unwind$NHold Down Roll$NFVR Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		UnwHoldDwn_FVR_FltRst : BOOL (Description := "Unwind$NHold Down Roll$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		UnwHoldDwn_FVR_FwdCmd : BOOL (Description := "Unwind$NHold Down Roll$NForward Command$N( 1= Run Fwd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		UnwHoldDwn_FVR_RevCmd : BOOL (Description := "Unwind$NHold Down Roll$NReverse Command$N( 1= Run Rev)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		UNW_DrvsOff : BOOL (Description := "Unwind$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		UNW_SafeOffEn : BOOL (Description := "Unwind$NSafe-Off Enable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		UNW_SafeOffFltRst : BOOL (Description := "Unwind$NSafe-Off$NFault Reset$N( 1= Reset Cmd )",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		UWCC_Rst_PB OF SftyMap_Mach[0].10 (Description := "Unwind$NCoil Car$NSafety Reset PB",
		            RADIX := Decimal);
		VS2_IO : UDT_CardSts[32] (Description := "VS2$NPoint I/O",
		            COMMENT[4] := "1734-IE2C/C",
		            Class := Standard) := [[16897,16],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]];
		VS2_IOSts_Flt : BOOL (Description := "VS2$NPoint IO$NModule Fault$N( 1= Faulted)",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		VS2_S10_ModFlt OF Flt_Modules[0].21 (Description := "VS2$N Point I/O Slot10$N Module Fault$N (1 = Fault)",
		            RADIX := Decimal);
		VS2_SolPwrEn : BOOL (Description := "VS2$NSolenoid Safe-Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		WTPR_DrvsOff : BOOL (Description := "Wash Tank $NPinch Rolls (1-4)$NDrives OFF$N( 1= OFF)",
		            Class := Safety,
		            RADIX := Decimal) := 0;
		WTPR_SafeTrqEn : BOOL (Description := "Wash Tank$NPinch Rolls$N(1-4)$NSafe-Trq Off$NEnable$N( 1= Enable )",
		            Class := Safety,
		            RADIX := Decimal) := 1;
		x172CR460 OF SDPLC:1:I.Pt00Data (Description := "Shear Die$NDrive$NMain Contactor$NSafety Relay$NInput",
		            RADIX := Decimal);
		x172CR510 OF SDPLC:1:I.Pt01Data (Description := "Shear Die$NDrive$NEnable$NSafety Relay$NInput",
		            RADIX := Decimal);
		x201PB040a OF OS1:1:I.Pt00Data (Description := "Line$NEmergency Stop$NPB",
		            RADIX := Decimal);
		x201PB040b OF OS1:1:I.Pt01Data (Description := "Line$NEmergency Stop$NPB",
		            RADIX := Decimal);
		x211PB040a OF OS2:1:I.Pt00Data (Description := "Line$NEmergency$NStop$NPB",
		            RADIX := Decimal);
		x211PB040b OF OS2:1:I.Pt01Data (Description := "Line$NEmergency$NStop$NPB",
		            RADIX := Decimal);
		x221PB040a OF OS3:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x221PB040b OF OS3:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x231PB040a OF OS4N:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x231PB040b OF OS4N:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x241PB040a OF OS4S:1:I.Pt00Data (Description := "Emergency$NStop$NPBMc_A_Run1_A",
		            RADIX := Decimal);
		x241PB040b OF OS4S:1:I.Pt01Data (Description := "Emergency$NStop$NPBMc_A_Run1_A",
		            RADIX := Decimal);
		x251PB040a OF OS5:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x251PB040b OF OS5:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x261PB040a OF OS6:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x261PB040b OF OS6:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x271PB040a OF OS8:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x271PB040b OF OS8:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x281PB040a OF OS9:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x281PB040b OF OS9:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x291PB040a OF OS11:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x291PB040b OF OS11:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x301PB040a OF OS13:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x301PB040b OF OS13:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x301PBL500 : BOOL (Description := "Tandem$NJog$NPBL",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x301SS540a : BOOL (Description := "Sheeter$NPinch Roll$NJog$NForward$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x301SS540b : BOOL (Description := "Sheeter$NPinch Roll$NJog$NReverse$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x311PB040a OF OS14:1:I.Pt00Data (Description := "Emergency$NStop$NPB$NOS14",
		            RADIX := Decimal);
		x311PB040b OF OS14:1:I.Pt01Data (Description := "Emergency$NStop$NPB$NOS14",
		            RADIX := Decimal);
		x311PB130a OF OS14:1:I.Pt02Data (Description := "Shear$NEmergency$NStop$NPB$NOs14",
		            RADIX := Decimal);
		x311PB130b OF OS14:1:I.Pt03Data (Description := "Shear$NEmergency$NStop$NPB$NOs14",
		            RADIX := Decimal);
		x312PB700 : BOOL (Description := "Product$NConveyor$NJog$NForward$NPB",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x312PB740 : BOOL (Description := "Product$NConveyor$NJog$NReverse$NPB",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x312SS460a : BOOL (Description := "Scrap$NConveyor$NJog$NForward$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x312SS460b : BOOL (Description := "Scrap$NConveyor$NJog$NReverse$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x313PBL080 : BOOL (Description := "Tandem$NJog$NPBL",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x313SS460a : BOOL (Description := "Shear$NConveyor$NJog$NForward$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x313SS460b : BOOL (Description := "Shear$NConveyor$NJog$NReverse$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x314SS040a : BOOL (Description := "Shear$NPinch Roll$NJog$NForward$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x314SS040b : BOOL (Description := "Shear$NPinch Roll$NJog$NReverse$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x315SS040a : BOOL (Description := "Sheeter$NPinch Roll$NJog$NForward$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x315SS040b : BOOL (Description := "Sheeter$NPinch Roll$NJog$NReverse$NSS",
		            Class := Standard,
		            RADIX := Decimal) := 0;
		x321PB040a OF OS15:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x321PB040b OF OS15:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x331PB040a OF OS16:1:I.Pt00Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x331PB040b OF OS16:1:I.Pt01Data (Description := "Emergency$NStop$NPB",
		            RADIX := Decimal);
		x406LCA047 OF A1:21:I.Pt00Data (Description := "North/South$NLight Curtain$NOutput A",
		            RADIX := Decimal);
		x406LCB052 OF A1:21:I.Pt01Data (Description := "North/South$NLight Curtain$NOutput B",
		            RADIX := Decimal);
		x480PB470a OF DPD:15:I.Pt00Data (Description := "Emergency$NStop$NPushbutton",
		            RADIX := Decimal);
		x480PB470b OF DPD:15:I.Pt01Data (Description := "Emergency$NStop$NPushbutton",
		            RADIX := Decimal);
		x480PB550a OF DPD:15:I.Pt02Data (Description := "Emergency$NStop$NPushbutton$N(In Pit)",
		            RADIX := Decimal);
		x480PB550b OF DPD:15:I.Pt03Data (Description := "Emergency$NStop$NPushbutton$N(In Pit)",
		            RADIX := Decimal);
		x519LS470 OF G1:12:I.Pt00Data (Description := "Tripwire$NEmergency Stop$NLimit Switch",
		            RADIX := Decimal);
		x533PB470a OF H1:6:I.Pt00Data (Description := "Sheeter$NEmergency$NStop$NPushbutton",
		            RADIX := Decimal);
		x533PB470b OF H1:6:I.Pt01Data (Description := "Sheeter$NEmergency$NStop$NPushbutton",
		            RADIX := Decimal);
		x613CR460 OF CHPLC:1:I.Pt00Data (Description := "Unwind$NOperator Side$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		x613CR510 OF CHPLC:1:I.Pt01Data (Description := "Unwind$NOperator Side$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		x613CR550 OF CHPLC:1:I.Pt02Data (Description := "Unwind$NDrive Side$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		x613CR590 OF CHPLC:1:I.Pt03Data (Description := "Unwind$NDrive Side$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		x613CR630 OF CHPLC:1:I.Pt04Data (Description := "#1 Entry$NBridle Roll 2$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		x613CR670 OF CHPLC:1:I.Pt05Data (Description := "#1 Entry$NBridle Roll 2$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		x613CR710 OF CHPLC:1:I.Pt06Data (Description := "#2 Entry$NBridle Roll 3$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		x613CR750 OF CHPLC:1:I.Pt07Data (Description := "#2 Entry$NBridle Roll 3$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		x614CR040 OF CHPLC:2:I.Pt00Data (Description := "#1 Exit$NBridle Roll 6$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		x614CR090 OF CHPLC:2:I.Pt01Data (Description := "#1 Exit$NBridle Roll 6$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		x614CR130 OF CHPLC:2:I.Pt02Data (Description := "#2 Exit$NBridle Roll 7$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		x614CR170 OF CHPLC:2:I.Pt03Data (Description := "#2 Exit$NBridle Roll 7$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		x614CR210 OF CHPLC:2:I.Pt04Data (Description := "Rewind$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		x614CR250 OF CHPLC:2:I.Pt05Data (Description := "Rewind$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		x702MTR191FF OF MCC1:1:I.Pt00Data (Description := "Rewind$N Pinch Roll$N Fwd Fdbk",
		            RADIX := Decimal);
		x702MTR191RF OF MCC1:1:I.Pt01Data (Description := "Rewind$N Pinch Roll$N Rev Fdbk",
		            RADIX := Decimal);
		x708MTR080FF OF MCC1:1:I.Pt04Data (Description := "Flattener$N Drive Motor$N Fwd Fdbk",
		            RADIX := Decimal);
		x708MTR080RF OF MCC1:1:I.Pt05Data (Description := "Flattener$N Drive Motor$N Rev Fdbk",
		            RADIX := Decimal);
		x708MTR250FF OF MCC1:1:I.Pt06Data (Description := "Unwind$N Holddown Roll$NDrive Motor$N Fwd Fdbk",
		            RADIX := Decimal);
		x708MTR250RF OF MCC1:1:I.Pt07Data (Description := "Unwind$N Holddown Roll$NDrive Motor$N Rev Fdbk",
		            RADIX := Decimal);
		x753MTR190FF OF MCC3:1:I.Pt00Data (Description := "Trimmer$N Pinch Roll$N Fwd Fdbk",
		            RADIX := Decimal);
		x753MTR190RF OF MCC3:1:I.Pt01Data (Description := "Trimmer$N Pinch Roll$N Rev Fdbk",
		            RADIX := Decimal);
		x759MTR080SE OF MCC3:4:O.Pt02Data (Description := "Scrap$N Choppers$NWidth Adjust$NSafety Enable",
		            RADIX := Decimal);
		x759MTR080SP OF MCC3:4:O.Pt01Data (Description := "Scrap$N Choppers$NWidth Adjust$NSafety Power",
		            RADIX := Decimal);
		x761MTR081RF OF MCC3:1:I.Pt02Data (Description := "Trimmer$N Scrap Conveyor$N RunFdbk",
		            RADIX := Decimal);
		x775MTR280RF : BOOL (Description := "(From Shear DIe)$NShear$NPinch Roll$NLube$NRun Fdbk",
		            Class := Standard,
		            RADIX := Decimal) := 1;
		x778MTR080RF OF MCC4:1:I.Pt00Data (Description := "Shear Crank$NMotor Run$N Fdbk",
		            RADIX := Decimal);
		x781MTR080RF : BOOL (Description := "(From Shear DIe)$NSheeter$NPinch Roll$NLube$NRun Fdbk",
		            Class := Standard,
		            RADIX := Decimal) := 1;
		x781MTR190RF : BOOL (Description := "(From Shear DIe)$NSheeter$NHyd$NPump$NRun Fdbk",
		            Class := Standard,
		            RADIX := Decimal) := 1;
		x802MTR080FF OF MCC5:1:I.Pt00Data (Description := "Stacker$NSide Guide Lift$NFwd Fdbk/Up",
		            RADIX := Decimal);
		x802MTR080RF OF MCC5:1:I.Pt01Data (Description := "Stacker$NSide Guide Lift$NRev Fdbk/Down",
		            RADIX := Decimal);
		x802MTR230FF OF MCC5:1:I.Pt02Data (Description := "Scrap Horizontal$NConveyor Run $NFwd Fdbk",
		            RADIX := Decimal);
		x802MTR230RF OF MCC5:1:I.Pt03Data (Description := "Scrap Horizontal$NConveyor Run $NRev Fdbk",
		            RADIX := Decimal);
		x802MTR231FF OF MCC5:1:I.Pt04Data (Description := "Stacker Chain$NFwd Fdbk",
		            RADIX := Decimal);
		x802MTR231RF OF MCC5:1:I.Pt05Data (Description := "Stacker Chain$NRev Fdbk",
		            RADIX := Decimal);
		x813MTR080RF : BOOL (Description := "(From Shear DIe)$NExit Conveyor$NHyd Pump$NRun Fdbk",
		            Class := Standard,
		            RADIX := Decimal) := 1;
		y172CR460 OF SDPLC:2:O.Pt00Data (Description := "Shear Die$NDrive$NMain Contactor$NSafety Relay$NOutput",
		            RADIX := Decimal);
		y172CR510 OF SDPLC:2:O.Pt01Data (Description := "Shear Die$NDrive$NEnable$NSafety Relay$NOutput",
		            RADIX := Decimal);
		y172CR550 OF SDPLC:2:O.Pt02Data (Description := "Line$NSoleniod$NSafe-Off",
		            RADIX := Decimal);
		y233CR040 OF OS4N:5:O.Pt00Data (Description := "OS4N$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y243CR040 OF OS4S:5:O.Pt00Data (Description := "OS4S$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y406CR050 OF A1:20:O.Pt00Data (Description := "Line$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y406CR090 OF A1:20:O.Pt01Data (Description := "Coil Car$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y406CR120 OF A1:20:O.Pt02Data (Description := "Spare",
		            RADIX := Decimal);
		y406CR170 OF A1:20:O.Pt03Data (Description := "Spare",
		            RADIX := Decimal);
		y435CR050 OF C1:12:O.Pt00Data (Description := "Solenoid$NSafe Off",
		            RADIX := Decimal);
		y451CR050 OF D1:12:O.Pt00Data (Description := "Soleniod$NSafe Off",
		            RADIX := Decimal);
		y464CR050 OF E1:10:O.Pt00Data (Description := "Soleniod$NSafe Off",
		            RADIX := Decimal);
		y480CR050 OF DPD:14:O.Pt00Data (Description := "Solenoid$NSafe Off",
		            RADIX := Decimal);
		y495CR050 OF VS2:10:O.Pt00Data (Description := "Soleniod$NSafe Off",
		            RADIX := Decimal);
		y507CR050 OF F1:19:O.Pt00Data (Description := "Line$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y507CR090 OF F1:19:O.Pt01Data (Description := "Rewind$NCoil Car$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y519CR050 OF G1:11:O.Pt00Data (Description := "Line$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y533CR050 OF H1:5:O.Pt00Data (Description := "Line$NSolenoid$NSafe Off",
		            RADIX := Decimal);
		y613CR460 OF CHPLC:4:O.Pt00Data (Description := "Unwind$NOperator Side$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		y613CR510 OF CHPLC:4:O.Pt01Data (Description := "Unwind$NOperator Side$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		y613CR550 OF CHPLC:4:O.Pt02Data (Description := "Unwind$NDrive Side$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		y613CR590 OF CHPLC:4:O.Pt03Data (Description := "Unwind$NDrive Side$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		y613CR630 OF CHPLC:4:O.Pt04Data (Description := "#1 Entry$NBridle Roll 2$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		y613CR670 OF CHPLC:4:O.Pt05Data (Description := "#1 Entry$NBridle Roll 2$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		y613CR710 OF CHPLC:4:O.Pt06Data (Description := "#2 Entry$NBridle Roll 3$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		y613CR750 OF CHPLC:4:O.Pt07Data (Description := "#2 Entry$NBridle Roll 3$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		y614CR040 OF CHPLC:5:O.Pt00Data (Description := "#1 Exit$NBridle Roll 6$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		y614CR090 OF CHPLC:5:O.Pt01Data (Description := "#1 Exit$NBridle Roll 6$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		y614CR130 OF CHPLC:5:O.Pt02Data (Description := "#2 Exit$NBridle Roll 7$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		y614CR170 OF CHPLC:5:O.Pt03Data (Description := "#2 Exit$NBridle Roll 7$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		y614CR210 OF CHPLC:5:O.Pt04Data (Description := "Rewind$NMain Contactor$NSafety Relay",
		            RADIX := Decimal);
		y614CR250 OF CHPLC:5:O.Pt05Data (Description := "Rewind$NDrive Enable$NSafety Relay",
		            RADIX := Decimal);
		y702MTR191FC OF MCC1:6:O.Pt00Data (Description := "Rewind$N Pinch Roll$N Fwd Cmd",
		            RADIX := Decimal);
		y702MTR191RC OF MCC1:6:O.Pt01Data (Description := "Rewind$N Pinch Roll$N Rev Cmd",
		            RADIX := Decimal);
		y708MTR080FC OF MCC1:6:O.Pt04Data (Description := "Flattener$N Drive Motor$N Fwd Cmd",
		            RADIX := Decimal);
		y708MTR080RC OF MCC1:6:O.Pt05Data (Description := "Flattener$N Drive Motor$N Rev Cmd",
		            RADIX := Decimal);
		y708MTR250FC OF MCC1:6:O.Pt06Data (Description := "Unwind$N Holddown Roll$NDrive Motor$N Fwd Cmd",
		            RADIX := Decimal);
		y708MTR250RC OF MCC1:6:O.Pt07Data (Description := "Unwind$N Holddown Roll$NDrive Motor$N Rev Cmd",
		            RADIX := Decimal);
		y725MTR080SE OF MCC2:1:O.Pt01Data (Description := "Unwind$N Pinch Roll $NSafety Enable",
		            RADIX := Decimal);
		y725MTR080SP OF MCC2:1:O.Pt00Data (Description := "Unwind$N Pinch Roll $NSafety Power",
		            RADIX := Decimal);
		y727MTR080SE OF MCC2:1:O.Pt05Data (Description := "Paper Winder$NSafety Enable",
		            RADIX := Decimal);
		y727MTR080SP OF MCC2:1:O.Pt04Data (Description := "Paper Winder$NSafety Power",
		            RADIX := Decimal);
		y729MTR080SE OF MCC2:1:O.Pt03Data (Description := "Washtank$N Pinch Roll 4$NSafety Enable",
		            RADIX := Decimal);
		y729MTR080SP OF MCC2:1:O.Pt02Data (Description := "Washtank$N Pinch Roll 4$NSafety Power",
		            RADIX := Decimal);
		y731MTR080SE OF MCC2:1:O.Pt07Data (Description := "Washtank$N Pinch Roll 1$NSafety Enable",
		            RADIX := Decimal);
		y731MTR080SP OF MCC2:1:O.Pt06Data (Description := "Washtank$N Pinch Roll 1$NSafety Power",
		            RADIX := Decimal);
		y733MTR080SE OF MCC2:2:O.Pt01Data (Description := "Washtank$N Pinch Roll 2$NSafety Enable",
		            RADIX := Decimal);
		y733MTR080SP OF MCC2:2:O.Pt00Data (Description := "Washtank$N Pinch Roll 2$NSafety Power",
		            RADIX := Decimal);
		y735MTR080SE OF MCC2:2:O.Pt03Data (Description := "Washtank$N Pinch Roll 3$NSafety Enable",
		            RADIX := Decimal);
		y735MTR080SP OF MCC2:2:O.Pt02Data (Description := "Washtank$N Pinch Roll 3$NSafety Power",
		            RADIX := Decimal);
		y751MTR080SE OF MCC3:3:O.Pt04Data (Description := "Trimmer $N Knives$NSafety Enable",
		            RADIX := Decimal);
		y751MTR080SP OF MCC3:3:O.Pt03Data (Description := "Trimmer $N Knives$NSafety Power",
		            RADIX := Decimal);
		y753MTR190FC OF MCC3:3:O.Pt00Data (Description := "Trimmer$N Pinch Roll$N Fwd Cmd",
		            RADIX := Decimal);
		y753MTR190RC OF MCC3:3:O.Pt01Data (Description := "Trimmer$N Pinch Roll$N Rev Cmd",
		            RADIX := Decimal);
		y754MTR080SE OF MCC3:3:O.Pt06Data (Description := "Side Guide $N Width Adjust$NSafety Enable",
		            RADIX := Decimal);
		y754MTR080SP OF MCC3:3:O.Pt05Data (Description := "Side Guide $N Width Adjust$NSafety Power",
		            RADIX := Decimal);
		y755MTR080SE OF MCC3:4:O.Pt00Data (Description := "Trimmer $N Knives$NWidth Adjust$NSafety Enable",
		            RADIX := Decimal);
		y755MTR080SP OF MCC3:3:O.Pt07Data (Description := "Trimmer $N Knives$NWidth Adjust$NSafety Power",
		            RADIX := Decimal);
		y761MTR081RC OF MCC3:3:O.Pt02Data (Description := "Trimmer$N Scrap Conveyor$N RunCmd",
		            RADIX := Decimal);
		y762MTR080SE OF MCC3:4:O.Pt04Data (Description := "Scrap$N Choppers$NSafety Enable",
		            RADIX := Decimal);
		y762MTR080SP OF MCC3:4:O.Pt03Data (Description := "Scrap$N Choppers$NSafety Power",
		            RADIX := Decimal);
		y776MTR080SE OF MCC4:3:O.Pt07Data (Description := "Shear $NMetering $NBackup Roll $N Safety Enable",
		            RADIX := Decimal);
		y776MTR080SP OF MCC4:3:O.Pt06Data (Description := "Shear $NMetering $NBackup Roll $NSafety Power",
		            RADIX := Decimal);
		y778MTR080RC OF MCC4:4:O.Pt00Data (Description := "Shear $NDie Crank$NRun Cmd",
		            RADIX := Decimal);
		y779MTR080SE OF MCC4:3:O.Pt01Data (Description := "Shear $NPinch Roll $NSafety Enable",
		            RADIX := Decimal);
		y779MTR080SP OF MCC4:3:O.Pt00Data (Description := "Shear $NPinch Roll $NSafety Power",
		            RADIX := Decimal);
		y782MTR080SE OF MCC4:3:O.Pt03Data (Description := "Sheeter $NPinch Roll $NSafety Enable",
		            RADIX := Decimal);
		y782MTR080SP OF MCC4:3:O.Pt02Data (Description := "Sheeter $NPinch Roll $NSafety Power",
		            RADIX := Decimal);
		y785MTR080SE OF MCC4:3:O.Pt05Data (Description := "Stacker$N Blower $NSafety Enable",
		            RADIX := Decimal);
		y785MTR080SP OF MCC4:3:O.Pt04Data (Description := "Stacker $NBlower $NSafety Power",
		            RADIX := Decimal);
		y800MTR080SE OF MCC5:3:O.Pt01Data (Description := "Scrap$NIncline Conveyor$NSafety Enable",
		            RADIX := Decimal);
		y800MTR080SP OF MCC5:3:O.Pt00Data (Description := "Scrap$NIncline Conveyor$NSafety Power",
		            RADIX := Decimal);
		y802MTR080FC OF MCC5:4:O.Pt04Data (Description := "Stacker$NSide Guide Lift$NFwd Cmd/Up",
		            RADIX := Decimal);
		y802MTR080RC OF MCC5:4:O.Pt05Data (Description := "Stacker$NSide Guide Lift$NRev Cmd/Down",
		            RADIX := Decimal);
		y802MTR230FC OF MCC5:4:O.Pt06Data (Description := "Scrap Horizontal$NConveyor $NFwd Cmd",
		            RADIX := Decimal);
		y802MTR230RC OF MCC5:4:O.Pt07Data (Description := "Scrap Horizontal$N Conveyor $NRev Cmd",
		            RADIX := Decimal);
		y802MTR231FC OF MCC5:5:O.Pt00Data (Description := "Stacker Chain$NFwd Cmd",
		            RADIX := Decimal);
		y802MTR231RC OF MCC5:5:O.Pt01Data (Description := "Stacker Chain$NRev Cmd",
		            RADIX := Decimal);
		y804MTR080SE OF MCC5:3:O.Pt03Data (Description := "Stacker$NBack Stop$NSafety Enable",
		            RADIX := Decimal);
		y804MTR080SP OF MCC5:3:O.Pt02Data (Description := "Stacker$NBack Stop$NSafety Power",
		            RADIX := Decimal);
		y806MTR080SE OF MCC5:3:O.Pt05Data (Description := "Product$NConveyor 3$NSafety Enable",
		            RADIX := Decimal);
		y806MTR080SP OF MCC5:3:O.Pt04Data (Description := "Product$NConveyor 3$NSafety Power",
		            RADIX := Decimal);
		y808MTR080SE OF MCC5:3:O.Pt07Data (Description := "Product$NConveyor 1$NSafety Enable",
		            RADIX := Decimal);
		y808MTR080SP OF MCC5:3:O.Pt06Data (Description := "Product$NConveyor 1$NSafety Power",
		            RADIX := Decimal);
		y810MTR080SE OF MCC5:4:O.Pt01Data (Description := "Product$NConveyor 2$NSafety Enable",
		            RADIX := Decimal);
		y810MTR080SP OF MCC5:4:O.Pt00Data (Description := "Product$NConveyor 2$NSafety Power",
		            RADIX := Decimal);
		y812MTR080SE OF MCC5:4:O.Pt03Data (Description := "Shear$NConveyor$NSafety Enable",
		            RADIX := Decimal);
		y812MTR080SP OF MCC5:4:O.Pt02Data (Description := "Shear$NConveyor$NSafety Power",
		            RADIX := Decimal);
	END_TAG

	PROGRAM CardSts (Description := "Local and Remote IO$NCard Status",
	                 Class := Standard,
	                 MAIN := "Main",
	                 MODE := 0,
	                 DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE A1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,A1,EntryStatus,A1_IO[0].EntrySts)MEQ(A1_IO[0].EntrySts,28672,16384)OTE(A1_IO[0].Running);
					RC: "--------A1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(A1_IO[0].Running)[XIC(A1:20:I.ConnectionFaulted) ,XIC(A1:21:I.ConnectionFaulted) ]OTE(A1_IOSts_Flt);
					N: [XIO(A1_IO[0].Running) ,XIC(A1_IOSts_Flt) ,XIC(Rem_ModFlts.0) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.0);
			END_ROUTINE

			ROUTINE C1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,C1,EntryStatus,C1_IO[0].EntrySts)MEQ(C1_IO[0].EntrySts,28672,16384)OTE(C1_IO[0].Running);
					RC: "--------C1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(C1_IO[0].Running)XIC(C1:12:I.ConnectionFaulted)OTE(C1_IOSts_Flt);
					N: [XIO(C1_IO[0].Running) ,XIC(C1_IOSts_Flt) ,XIC(Rem_ModFlts.1) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.1);
			END_ROUTINE

			ROUTINE CHPLC_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,CHPLC,EntryStatus,CHPLC_IO[0].EntrySts)MEQ(CHPLC_IO[0].EntrySts,28672,16384)OTE(CHPLC_IO[0].Running);
					RC: "--------CHPLC IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(CHPLC_IO[0].Running)[XIC(CHPLC:1:I.ConnectionFaulted) ,XIC(CHPLC:2:I.ConnectionFaulted) ,XIC(CHPLC:3:I.ConnectionFaulted) ,XIC(CHPLC:4:I.ConnectionFaulted) ,XIC(CHPLC:5:I.ConnectionFaulted) ,XIC(CHPLC:6:I.ConnectionFaulted) ]OTE(CHPLC_IOSts_Flt);
					N: [XIO(CHPLC_IO[0].Running) ,XIC(CHPLC_IOSts_Flt) ,XIC(Rem_ModFlts.2) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.2);
			END_ROUTINE

			ROUTINE D1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,D1,EntryStatus,D1_IO[0].EntrySts)MEQ(D1_IO[0].EntrySts,28672,16384)OTE(D1_IO[0].Running);
					RC: "--------D1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(D1_IO[0].Running)XIC(D1:12:I.ConnectionFaulted)OTE(D1_IOSts_Flt);
					N: [XIO(D1_IO[0].Running) ,XIC(D1_IOSts_Flt) ,XIC(Rem_ModFlts.3) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.3);
			END_ROUTINE

			ROUTINE DPD_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,DPD,EntryStatus,DPD_IO[0].EntrySts)MEQ(DPD_IO[0].EntrySts,28672,16384)OTE(DPD_IO[0].Running);
					RC: "--------DPD IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(DPD_IO[0].Running)[XIC(DPD:14:I.ConnectionFaulted) ,XIC(DPD:15:I.ConnectionFaulted) ]OTE(DPD_IOSts_Flt);
					N: [XIO(DPD_IO[0].Running) ,XIC(DPD_IOSts_Flt) ,XIC(Rem_ModFlts.4) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.4);
			END_ROUTINE

			ROUTINE E1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,E1,EntryStatus,E1_IO[0].EntrySts)MEQ(E1_IO[0].EntrySts,28672,16384)OTE(E1_IO[0].Running);
					RC: "--------E1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(E1_IO[0].Running)XIC(E1:10:I.ConnectionFaulted)OTE(E1_IOSts_Flt);
					N: [XIO(E1_IO[0].Running) ,XIC(E1_IOSts_Flt) ,XIC(Rem_ModFlts.5) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.5);
			END_ROUTINE

			ROUTINE F1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,F1,EntryStatus,F1_IO[0].EntrySts)MEQ(F1_IO[0].EntrySts,28672,16384)OTE(F1_IO[0].Running);
					RC: "--------F1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(F1_IO[0].Running)[XIC(F1:19:I.ConnectionFaulted) ,XIC(F1:20:I.ConnectionFaulted) ]OTE(F1_IOSts_Flt);
					N: [XIO(F1_IO[0].Running) ,XIC(F1_IOSts_Flt) ,XIC(Rem_ModFlts.6) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.6);
			END_ROUTINE

			ROUTINE G1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,G1,EntryStatus,G1_IO[0].EntrySts)MEQ(G1_IO[0].EntrySts,28672,16384)OTE(G1_IO[0].Running);
					RC: "--------G1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(G1_IO[0].Running)[XIC(G1:11:I.ConnectionFaulted) ,XIC(G1:12:I.ConnectionFaulted) ]OTE(G1_IOSts_Flt);
					N: [XIO(G1_IO[0].Running) ,XIC(G1_IOSts_Flt) ,XIC(Rem_ModFlts.7) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.7);
			END_ROUTINE

			ROUTINE H1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,H1,EntryStatus,H1_IO[0].EntrySts)MEQ(H1_IO[0].EntrySts,28672,16384)OTE(H1_IO[0].Running);
					RC: "--------H1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(H1_IO[0].Running)[XIC(H1:5:I.ConnectionFaulted) ,XIC(H1:6:I.ConnectionFaulted) ]OTE(H1_IOSts_Flt);
					N: [XIO(H1_IO[0].Running) ,XIC(H1_IOSts_Flt) ,XIC(Rem_ModFlts.28) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.28);
			END_ROUTINE

			ROUTINE Local_IO (Description := "Local IO Card Status")
					RC: "****************************************************************************************************************************$N"
					    "$N"
					    "Local Module Faults -  The following rungs will get the status of the modules assigned to the ShDie Processor$N"
					    "$N"
					    "****************************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "----------EN2T Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,S2,EntryStatus,Local_Slot[2].EntrySts)MEQ(Local_Slot[2].EntrySts,28672,16384)OTE(Local_Slot[2].Running);
					N: [XIO(Local_Slot[2].Running) ,XIC(Local_ModFlts.2) XIO(Sy_ClrFlt) ]OTE(Local_ModFlts.2);
					RC: "----------AMCI-1242 Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,S3,EntryStatus,Local_Slot[3].EntrySts)MEQ(Local_Slot[3].EntrySts,28672,16384)OTE(Local_Slot[3].Running);
					N: [XIO(Local_Slot[3].Running) ,XIC(Local_ModFlts.3) XIO(Sy_ClrFlt) ]OTE(Local_ModFlts.3);
					RC: "---------- EN2F Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,S16,EntryStatus,Local_Slot[16].EntrySts)MEQ(Local_Slot[16].EntrySts,28672,16384)OTE(Local_Slot[16].Running);
					N: [XIO(Local_Slot[16].Running) ,XIC(Local_ModFlts.16) XIO(Sy_ClrFlt) ]OTE(Local_ModFlts.16);
					RC: "----------- Local Networks OK -------------------------------$N"
					    "Slot 2, 3$N"
					    "Remote IO Network$N"
					    "";
					N: XIC(Local_Slot[2].Running)XIC(Local_Slot[3].Running)OTE(Local_Networks_OK);
					RC: "----------- Peer Networks OK -------------------------------$N"
					    "Slot 16$N"
					    "Peer to Peer Network";
					N: XIC(Local_Slot[16].Running)OTE(Peer_Networks_OK);
			END_ROUTINE

			ROUTINE Main 
					N: NOP();
					RC: "-------------- System Reset -----------------------------------------";
					N: [XIC(LineSts.ResetInput_CTC) XIO(Line_TotalMode) ,XIC(LineSts.ResetInput_CTL) XIO(Line_TotalMode) ,XIC(LineSts.ResetInput_Total) XIC(Line_TotalMode) ]OTE(Sy_ClrFlt);
					N: JSR(Local_IO,0);
					N: JSR(A1_IO,0);
					N: JSR(C1_IO,0);
					N: JSR(CHPLC_IO,0);
					N: JSR(D1_IO,0);
					N: JSR(DPD_IO,0);
					N: JSR(E1_IO,0);
					N: JSR(F1_IO,0);
					N: JSR(G1_IO,0);
					N: JSR(H1_IO,0);
					N: JSR(MCC1_IO,0);
					N: JSR(MCC3_IO,0);
					N: JSR(MCC4_IO,0);
					N: JSR(OS11_IO,0);
					N: JSR(OS13_IO,0);
					N: JSR(OS14_IO,0);
					N: JSR(OS15_IO,0);
					N: JSR(OS16_IO,0);
					N: JSR(OS1_IO,0);
					N: JSR(OS2_IO,0);
					N: JSR(OS3_IO,0);
					N: JSR(OS4N_IO,0);
					N: JSR(OS4S_IO,0);
					N: JSR(OS5_IO,0);
					N: JSR(OS6_IO,0);
					N: JSR(OS8_IO,0);
					N: JSR(OS9_IO,0);
					N: JSR(SDPLC_IO,0);
					N: JSR(VS2_IO,0);
					N: JSR(Remote_IO,0);
			END_ROUTINE

			ROUTINE MCC1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,MCC1,EntryStatus,MCC1_IO[0].EntrySts)MEQ(MCC1_IO[0].EntrySts,28672,16384)OTE(MCC1_IO[0].Running);
					RC: "--------MCC1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(MCC1_IO[0].Running)[XIC(MCC1:1:I.ConnectionFaulted) ,XIC(MCC1:6:I.ConnectionFaulted) ]OTE(MCC1_IOSts_Flt);
					N: [XIO(MCC1_IO[0].Running) ,XIC(MCC1_IOSts_Flt) ,XIC(Rem_ModFlts.8) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.8);
			END_ROUTINE

			ROUTINE MCC2_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,MCC2,EntryStatus,MCC2_IO[0].EntrySts)MEQ(MCC2_IO[0].EntrySts,28672,16384)OTE(MCC2_IO[0].Running);
					RC: "--------MCC2 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.$N"
					    "";
					N: XIC(MCC2_IO[0].Running)[XIC(MCC2:1:I.ConnectionFaulted) ,XIC(MCC2:2:I.ConnectionFaulted) ]OTE(MCC2_IOSts_Flt);
					N: [XIO(MCC2_IO[0].Running) ,XIC(MCC2_IOSts_Flt) ,XIC(Rem_ModFlts.22) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.22);
			END_ROUTINE

			ROUTINE MCC3_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,MCC3,EntryStatus,MCC3_IO[0].EntrySts)MEQ(MCC3_IO[0].EntrySts,28672,16384)OTE(MCC3_IO[0].Running);
					RC: "--------MCC3 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(MCC3_IO[0].Running)[XIC(MCC3:1:I.ConnectionFaulted) ,XIC(MCC3:3:I.ConnectionFaulted) ,XIC(MCC3:4:I.ConnectionFaulted) ]OTE(MCC3_IOSts_Flt);
					N: [XIO(MCC3_IO[0].Running) ,XIC(MCC3_IOSts_Flt) ,XIC(Rem_ModFlts.9) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.9);
			END_ROUTINE

			ROUTINE MCC4_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,MCC4,EntryStatus,MCC4_IO[0].EntrySts)MEQ(MCC4_IO[0].EntrySts,28672,16384)OTE(MCC4_IO[0].Running);
					RC: "--------MCC4 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(MCC4_IO[0].Running)[XIC(MCC4:1:I.ConnectionFaulted) ,XIC(MCC4:3:I.ConnectionFaulted) ,XIC(MCC4:4:I.ConnectionFaulted) ]OTE(MCC4_IOSts_Flt);
					N: [XIO(MCC4_IO[0].Running) ,XIC(MCC4_IOSts_Flt) ,XIC(Rem_ModFlts.24) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.24);
			END_ROUTINE

			ROUTINE MCC5_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,MCC5,EntryStatus,MCC5_IO[0].EntrySts)MEQ(MCC5_IO[0].EntrySts,28672,16384)OTE(MCC5_IO[0].Running);
					RC: "--------MCC5 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(MCC5_IO[0].Running)[XIC(MCC5:1:I.ConnectionFaulted) ,XIC(MCC5:3:I.ConnectionFaulted) ,XIC(MCC5:4:I.ConnectionFaulted) ,XIC(MCC5:5:I.ConnectionFaulted) ]OTE(MCC5_IOSts_Flt);
					N: [XIO(MCC5_IO[0].Running) ,XIC(MCC5_IOSts_Flt) ,XIC(Rem_ModFlts.25) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.25);
			END_ROUTINE

			ROUTINE OS11_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS11,EntryStatus,OS11_IO[0].EntrySts)MEQ(OS11_IO[0].EntrySts,28672,16384)OTE(OS11_IO[0].Running);
					RC: "--------OS11 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS11_IO[0].Running)XIC(OS11:1:I.ConnectionFaulted)OTE(OS11_IOSts_Flt);
					N: [XIO(OS11_IO[0].Running) ,XIC(OS11_IOSts_Flt) ,XIC(Rem_ModFlts.10) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.10);
			END_ROUTINE

			ROUTINE OS13_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS13,EntryStatus,OS13_IO[0].EntrySts)MEQ(OS13_IO[0].EntrySts,28672,16384)OTE(OS13_IO[0].Running);
					RC: "--------OS13 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS13_IO[0].Running)XIC(OS13:1:I.ConnectionFaulted)OTE(OS13_IOSts_Flt);
					N: [XIO(OS13_IO[0].Running) ,XIC(OS13_IOSts_Flt) ,XIC(Rem_ModFlts.11) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.11);
			END_ROUTINE

			ROUTINE OS14_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS14,EntryStatus,OS14_IO[0].EntrySts)MEQ(OS14_IO[0].EntrySts,28672,16384)OTE(OS14_IO[0].Running);
					RC: "--------OS14 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS14_IO[0].Running)XIC(OS14:1:I.ConnectionFaulted)OTE(OS14_IOSts_Flt);
					N: [XIO(OS14_IO[0].Running) ,XIC(OS14_IOSts_Flt) ,XIC(Rem_ModFlts.27) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.27);
			END_ROUTINE

			ROUTINE OS15_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS15,EntryStatus,OS15_IO[0].EntrySts)MEQ(OS15_IO[0].EntrySts,28672,16384)OTE(OS15_IO[0].Running);
					RC: "--------OS15 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS15_IO[0].Running)XIC(OS15:1:I.ConnectionFaulted)OTE(OS15_IOSts_Flt);
					N: [XIO(OS15_IO[0].Running) ,XIC(OS15_IOSts_Flt) ,XIC(Rem_ModFlts.29) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.29);
			END_ROUTINE

			ROUTINE OS16_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS16,EntryStatus,OS16_IO[0].EntrySts)MEQ(OS16_IO[0].EntrySts,28672,16384)OTE(OS16_IO[0].Running);
					RC: "--------OS16 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS16_IO[0].Running)XIC(OS16:1:I.ConnectionFaulted)OTE(OS16_IOSts_Flt);
					N: [XIO(OS16_IO[0].Running) ,XIC(OS16_IOSts_Flt) ,XIC(Rem_ModFlts.26) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.26);
			END_ROUTINE

			ROUTINE OS1_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS1,EntryStatus,OS1_IO[0].EntrySts)MEQ(OS1_IO[0].EntrySts,28672,16384)OTE(OS1_IO[0].Running);
					RC: "--------OS1 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS1_IO[0].Running)XIC(OS1:1:I.ConnectionFaulted)OTE(OS1_IOSts_Flt);
					N: [XIO(OS1_IO[0].Running) ,XIC(OS1_IOSts_Flt) ,XIC(Rem_ModFlts.12) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.12);
			END_ROUTINE

			ROUTINE OS2_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS2,EntryStatus,OS2_IO[0].EntrySts)MEQ(OS2_IO[0].EntrySts,28672,16384)OTE(OS2_IO[0].Running);
					RC: "--------OS2 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS2_IO[0].Running)XIC(OS2:1:I.ConnectionFaulted)OTE(OS2_IOSts_Flt);
					N: [XIO(OS2_IO[0].Running) ,XIC(OS2_IOSts_Flt) ,XIC(Rem_ModFlts.13) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.13);
			END_ROUTINE

			ROUTINE OS3_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS3,EntryStatus,OS3_IO[0].EntrySts)MEQ(OS3_IO[0].EntrySts,28672,16384)OTE(OS3_IO[0].Running);
					RC: "--------OS3 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS3_IO[0].Running)XIC(OS3:1:I.ConnectionFaulted)OTE(OS3_IOSts_Flt);
					N: [XIO(OS3_IO[0].Running) ,XIC(OS3_IOSts_Flt) ,XIC(Rem_ModFlts.14) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.14);
			END_ROUTINE

			ROUTINE OS4N_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS4N,EntryStatus,OS4N_IO[0].EntrySts)MEQ(OS4N_IO[0].EntrySts,28672,16384)OTE(OS4N_IO[0].Running);
					RC: "--------OS4N IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS4N_IO[0].Running)[XIC(OS4N:1:I.ConnectionFaulted) ,XIC(OS4N:5:I.ConnectionFaulted) ]OTE(OS4N_IOSts_Flt);
					N: [XIO(OS4N_IO[0].Running) ,XIC(OS4N_IOSts_Flt) ,XIC(Rem_ModFlts.15) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.15);
			END_ROUTINE

			ROUTINE OS4S_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS4S,EntryStatus,OS4S_IO[0].EntrySts)MEQ(OS4S_IO[0].EntrySts,28672,16384)OTE(OS4S_IO[0].Running);
					RC: "--------OS4S IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS4S_IO[0].Running)[XIC(OS4S:1:I.ConnectionFaulted) ,XIC(OS4S:5:I.ConnectionFaulted) ]OTE(OS4S_IOSts_Flt);
					N: [XIO(OS4S_IO[0].Running) ,XIC(OS4S_IOSts_Flt) ,XIC(Rem_ModFlts.16) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.16);
			END_ROUTINE

			ROUTINE OS5_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS5,EntryStatus,OS5_IO[0].EntrySts)MEQ(OS5_IO[0].EntrySts,28672,16384)OTE(OS5_IO[0].Running);
					RC: "--------OS5 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS5_IO[0].Running)XIC(OS5:1:I.ConnectionFaulted)OTE(OS5_IOSts_Flt);
					N: [XIO(OS5_IO[0].Running) ,XIC(OS5_IOSts_Flt) ,XIC(Rem_ModFlts.17) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.17);
			END_ROUTINE

			ROUTINE OS6_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS6,EntryStatus,OS6_IO[0].EntrySts)MEQ(OS6_IO[0].EntrySts,28672,16384)OTE(OS6_IO[0].Running);
					RC: "--------OS6 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS6_IO[0].Running)XIC(OS6:1:I.ConnectionFaulted)OTE(OS6_IOSts_Flt);
					N: [XIO(OS6_IO[0].Running) ,XIC(OS6_IOSts_Flt) ,XIC(Rem_ModFlts.18) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.18);
			END_ROUTINE

			ROUTINE OS8_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS8,EntryStatus,OS8_IO[0].EntrySts)MEQ(OS8_IO[0].EntrySts,28672,16384)OTE(OS8_IO[0].Running);
					RC: "--------OS8 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS8_IO[0].Running)XIC(OS8:1:I.ConnectionFaulted)OTE(OS8_IOSts_Flt);
					N: [XIO(OS8_IO[0].Running) ,XIC(OS8_IOSts_Flt) ,XIC(Rem_ModFlts.19) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.19);
			END_ROUTINE

			ROUTINE OS9_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,OS9,EntryStatus,OS9_IO[0].EntrySts)MEQ(OS9_IO[0].EntrySts,28672,16384)OTE(OS9_IO[0].Running);
					RC: "--------OS9 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(OS9_IO[0].Running)XIC(OS9:1:I.ConnectionFaulted)OTE(OS9_IOSts_Flt);
					N: [XIO(OS9_IO[0].Running) ,XIC(OS9_IOSts_Flt) ,XIC(Rem_ModFlts.20) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.20);
			END_ROUTINE

			ROUTINE Remote_IO (Description := "Remote IO Card Status")
					RC: "****************************************************************************************************************************$N"
					    "$N"
					    "Point IO Module Faults -  (AENTR Module Faults)$N"
					    "****************************************************************************************************************************$N"
					    "";
					N: NOP();
					N: XIC(MCC1_IO[0].Running)XIC(MCC2_IO[0].Running)XIC(MCC3_IO[0].Running)XIC(MCC4_IO[0].Running)XIC(MCC5_IO[0].Running)OTE(CommCards_OK.0);
					N: XIC(OS1_IO[0].Running)XIC(OS2_IO[0].Running)XIC(OS3_IO[0].Running)XIC(OS4N_IO[0].Running)XIC(OS4S_IO[0].Running)XIC(OS5_IO[0].Running)XIC(OS6_IO[0].Running)XIC(OS8_IO[0].Running)XIC(OS9_IO[0].Running)XIC(OS11_IO[0].Running)OTE(CommCards_OK.1);
					N: XIC(OS13_IO[0].Running)XIC(OS14_IO[0].Running)XIC(OS15_IO[0].Running)XIC(OS16_IO[0].Running)OTE(CommCards_OK.2);
					N: XIC(A1_IO[0].Running)XIC(C1_IO[0].Running)XIC(CHPLC_IO[0].Running)XIC(D1_IO[0].Running)XIC(DPD_IO[0].Running)XIC(E1_IO[0].Running)XIC(F1_IO[0].Running)OTE(CommCards_OK.3);
					N: XIC(G1_IO[0].Running)XIC(H1_IO[0].Running)XIC(SDPLC_IO[0].Running)XIC(VS2_IO[0].Running)OTE(CommCards_OK.4);
					RC: "-----------Remote IO Comm Cards OK -------------------------------$N"
					    "Point IO Networks OK$N"
					    "";
					N: XIC(CommCards_OK.0)XIC(CommCards_OK.1)XIC(CommCards_OK.2)XIC(CommCards_OK.3)XIC(CommCards_OK.4)OTE(CommCards_OK.31);
					RC: "****************************************************************************************************************************$N"
					    "$N"
					    "Point IO Module Faults -  (IO Module Connection Faults)$N"
					    "$N"
					    "****************************************************************************************************************************$N"
					    "";
					N: NOP();
					N: XIC(MCC1_IOSts_Flt)XIC(MCC2_IOSts_Flt)XIC(MCC3_IOSts_Flt)XIC(MCC4_IOSts_Flt)XIC(MCC5_IOSts_Flt)OTE(IOCards_OK.0);
					N: XIC(OS1_IOSts_Flt)XIC(OS2_IOSts_Flt)XIC(OS3_IOSts_Flt)XIC(OS4N_IOSts_Flt)XIC(OS4S_IOSts_Flt)XIC(OS5_IOSts_Flt)XIC(OS6_IOSts_Flt)XIC(OS8_IOSts_Flt)XIC(OS9_IOSts_Flt)XIC(OS11_IOSts_Flt)OTE(IOCards_OK.1);
					N: XIC(OS13_IOSts_Flt)XIC(OS14_IOSts_Flt)XIC(OS15_IOSts_Flt)XIC(OS16_IOSts_Flt)OTE(IOCards_OK.2);
					N: XIC(A1_IOSts_Flt)XIC(C1_IOSts_Flt)XIC(CHPLC_IOSts_Flt)XIC(D1_IOSts_Flt)XIC(DPD_IOSts_Flt)XIC(E1_IOSts_Flt)XIC(F1_IOSts_Flt)OTE(IOCards_OK.3);
					N: XIC(G1_IOSts_Flt)XIC(H1_IOSts_Flt)XIC(SDPLC_IOSts_Flt)XIC(VS2_IOSts_Flt)OTE(IOCards_OK.4);
					RC: "-----------Remote IO Cards OK -------------------------------$N"
					    "Point IO I/O Cards OK$N"
					    "";
					N: XIC(IOCards_OK.0)XIC(IOCards_OK.1)XIC(IOCards_OK.2)XIC(IOCards_OK.3)XIC(IOCards_OK.4)OTE(IOCards_OK.31);
			END_ROUTINE

			ROUTINE SDPLC_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,SDPLC,EntryStatus,SDPLC_IO[0].EntrySts)MEQ(SDPLC_IO[0].EntrySts,28672,16384)OTE(SDPLC_IO[0].Running);
					RC: "--------SDPLC IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(SDPLC_IO[0].Running)[XIC(SDPLC:1:I.ConnectionFaulted) ,XIC(SDPLC:2:I.ConnectionFaulted) ]OTE(SDPLC_IOSts_Flt);
					N: [XIO(SDPLC_IO[0].Running) ,XIC(SDPLC_IOSts_Flt) ,XIC(Rem_ModFlts.23) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.23);
			END_ROUTINE

			ROUTINE VS2_IO 
					RC: "----------AENTR Module Status ----------$N"
					    "$N"
					    "Only bits 12-15 are valid.$N"
					    "$N"
					    "16#0000 - Standby$N"
					    "16#1000 - Faulted$N"
					    "16#2000 - Validating$N"
					    "16#3000 - Connecting$N"
					    "16#4000 - Running$N"
					    "16#5000 - Shutting Down$N"
					    "16#6000 - Inhibited$N"
					    "16#7000 - Waiting$N"
					    "$N"
					    "";
					N: GSV(Module,VS2,EntryStatus,VS2_IO[0].EntrySts)MEQ(VS2_IO[0].EntrySts,28672,16384)OTE(VS2_IO[0].Running);
					RC: "--------VS2 IO Status Faulted ----------------------------------------------------------$N"
					    "If Connection to the AENT is established verify the Direct Connection to each Safety Module.";
					N: XIC(VS2_IO[0].Running)XIC(VS2:10:I.ConnectionFaulted)OTE(VS2_IOSts_Flt);
					N: [XIO(VS2_IO[0].Running) ,XIC(VS2_IOSts_Flt) ,XIC(Rem_ModFlts.21) XIO(Sy_ClrFlt) ]OTE(Rem_ModFlts.21);
			END_ROUTINE

	END_PROGRAM

	PROGRAM Comms (Description := "Communications to Others",
	               Class := Standard,
	               MAIN := "MainRoutine",
	               MODE := 0,
	               DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE FltsToCitect (Description := "Faults to the $NCitect System")
					RC: "**************************************************************************$N"
					    "Faults to the Citect System $N"
					    "**************************************************************************";
					N: NOP();
					N: XIC(Machine_HB_Flt)OTE(FltsToCitect[0].0);
					N: XIC(Shear_HB_Flt)OTE(FltsToCitect[0].1);
					N: XIC(ChgMe)OTE(FltsToCitect[0].2);
					N: XIC(Local_ModFlts.2)OTE(FltsToCitect[0].3);
					N: XIC(Local_ModFlts.3)OTE(FltsToCitect[0].4);
					N: XIC(Local_ModFlts.16)OTE(FltsToCitect[0].5);
					N: XIC(ChgMe)OTE(FltsToCitect[0].6);
					RC: "-----------Remote IO Comm Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Rem_ModFlts DINT is moved directly to the CItect Fault Word [1].$N"
					    "If a Comm adapater is not located in this processor then OTU the bit to disable the fault$N"
					    "in this processor.$N"
					    "";
					N: [XIC(Rem_ModFlts.0) XIC(Rem_ModFlts.1) XIC(Rem_ModFlts.2) XIC(Rem_ModFlts.3) XIC(Rem_ModFlts.4) XIC(Rem_ModFlts.5) XIC(Rem_ModFlts.6) XIC(Rem_ModFlts.7) ,XIC(Rem_ModFlts.8) XIC(Rem_ModFlts.9) XIC(Rem_ModFlts.10) XIC(Rem_ModFlts.11) XIC(Rem_ModFlts.12) XIC(Rem_ModFlts.13) XIC(Rem_ModFlts.14) XIC(Rem_ModFlts.15) ,XIC(Rem_ModFlts.16) XIC(Rem_ModFlts.17) XIC(Rem_ModFlts.18) XIC(Rem_ModFlts.19) XIC(Rem_ModFlts.20) XIC(Rem_ModFlts.21) XIC(Rem_ModFlts.22) XIC(Rem_ModFlts.23) ,XIC(Rem_ModFlts.24) XIC(Rem_ModFlts.25) XIC(Rem_ModFlts.26) XIC(Rem_ModFlts.27) XIC(Rem_ModFlts.28) XIC(Rem_ModFlts.29) OTU(Rem_ModFlts.30) OTU(Rem_ModFlts.31) ]NOP();
					N: MOV(Rem_ModFlts,FltsToCitect[1]);
					RC: "-----------E-Stop PB Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Flt_Estops DINT is moved directly to the CItect Fault Word [2].$N"
					    "$N"
					    "";
					N: [XIC(ESTOP_x201PB040_Flt) XIC(ESTOP_x211PB040_Flt) XIC(ESTOP_x221PB040_Flt) XIC(ESTOP_x231PB040_Flt) XIC(ESTOP_x241PB040_Flt) XIC(ESTOP_x251PB040_Flt) XIC(ESTOP_x261PB040_Flt) XIC(ESTOP_x271PB040_Flt) ,XIC(ESTOP_x281PB040_Flt) XIC(ESTOP_x291PB040_Flt) XIC(ESTOP_x301PB040_Flt) XIC(ESTOP_x311PB040_Flt) XIC(ESTOP_x321PB040_Flt) XIC(ESTOP_x331PB040_Flt) XIC(ESTOP_x480PB470_Flt) XIC(ESTOP_x480PB550_Flt) ,XIC(ESTOP_x533PB470_Flt) XIC(ESTOP_x311PB130_Flt) XIC(ESTOP_x519LS470_Flt) XIC(Flt_Estops.19) XIC(Flt_Estops.20) XIC(Flt_Estops.21) XIC(Flt_Estops.22) XIC(Flt_Estops.23) ,XIC(Flt_Estops.24) XIC(Flt_Estops.25) XIC(Flt_Estops.26) XIC(Flt_Estops.27) XIC(Flt_Estops.28) XIC(Flt_Estops.29) XIC(Flt_Estops.30) XIC(Flt_Estops.31) ]NOP();
					N: MOV(Flt_Estops,FltsToCitect[2]);
					RC: "-----------Safe-Off Relay Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Flt_SafeOff[0] DINT is moved directly to the CItect Fault Word [3].$N"
					    "";
					N: [XIC(SafeOff_y172CR460_Flt) XIC(SafeOff_y172CR510_Flt) XIC(SafeOff_y613CR460_Flt) XIC(SafeOff_y613CR510_Flt) XIC(SafeOff_y613CR550_Flt) XIC(SafeOff_y613CR590_Flt) XIC(SafeOff_y613CR630_Flt) XIC(SafeOff_y613CR670_Flt) ,XIC(SafeOff_y613CR710_Flt) XIC(SafeOff_y613CR750_Flt) XIC(SafeOff_y614CR040_Flt) XIC(SafeOff_y614CR090_Flt) XIC(SafeOff_y614CR130_Flt) XIC(SafeOff_y614CR170_Flt) XIC(SafeOff_y614CR210_Flt) XIC(SafeOff_y614CR250_Flt) ,XIC(Flt_SafeOff[0].16) XIC(Flt_SafeOff[0].17) XIC(Flt_SafeOff[0].18) XIC(Flt_SafeOff[0].19) XIC(Flt_SafeOff[0].20) XIC(Flt_SafeOff[0].21) XIC(Flt_SafeOff[0].22) XIC(Flt_SafeOff[0].23) ,XIC(Flt_SafeOff[0].24) XIC(Flt_SafeOff[0].25) XIC(Flt_SafeOff[0].26) XIC(Flt_SafeOff[0].27) XIC(Flt_SafeOff[0].28) XIC(Flt_SafeOff[0].29) XIC(Flt_SafeOff[0].30) XIC(Flt_SafeOff[0].31) ]NOP();
					N: MOV(Flt_SafeOff[0],FltsToCitect[3]);
					RC: "-----------FVR/FVNR Starter Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Flt_Starter DINT is moved directly to the CItect Fault Word [4].$N"
					    "$N"
					    "";
					N: [XIC(FVR_y708MTR250_Flt) XIC(FVR_y708MTR080_Flt) XIC(FVR_y753MTR190_Flt) XIC(FVR_y761MTR081_Flt) XIC(FVR_y702MTR191_Flt) XIC(FVR_y778MTR080_Flt) XIC(FVR_y802MTR080_Flt) XIC(FVR_y802MTR231_Flt) ,XIC(FVR_y802MTR230_Flt) XIC(Flt_Starter.9) XIC(Flt_Starter.10) XIC(Flt_Starter.11) XIC(Flt_Starter.12) XIC(Flt_Starter.13) XIC(Flt_Starter.14) XIC(Flt_Starter.15) ,XIC(Flt_Starter.16) XIC(Flt_Starter.17) XIC(Flt_Starter.18) XIC(Flt_Starter.19) XIC(Flt_Starter.20) XIC(Flt_Starter.21) XIC(Flt_Starter.22) XIC(Flt_Starter.23) ,XIC(Flt_Starter.24) XIC(Flt_Starter.25) XIC(Flt_Starter.26) XIC(Flt_Starter.27) XIC(Flt_Starter.28) XIC(Flt_Starter.29) XIC(Flt_Starter.30) XIC(Flt_Starter.31) ]NOP();
					N: MOV(Flt_Starter,FltsToCitect[4]);
					RC: "-----------Point I/O Safety Module Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Flt_Modules[0] DINT is moved directly to the CItect Fault Word [5].$N"
					    "$N"
					    "";
					N: [XIC(A1_S20_ModFlt) XIC(A1_S21_ModFlt) XIC(C1_S12_ModFlt) XIC(CHPLC_S1_ModFlt) XIC(CHPLC_S2_ModFlt) XIC(CHPLC_S3_ModFlt) XIC(CHPLC_S4_ModFlt) XIC(CHPLC_S5_ModFlt) ,XIC(CHPLC_S6_ModFlt) XIC(D1_S12_ModFlt) XIC(DPD_S14_ModFlt) XIC(DPD_S15_ModFlt) XIC(E1_S10_ModFlt) XIC(F1_S19_ModFlt) XIC(F1_S20_ModFlt) XIC(G1_S11_ModFlt) ,XIC(G1_S12_ModFlt) XIC(H1_S5_ModFlt) XIC(H1_S6_ModFlt) XIC(SDPLC_S1_ModFlt) XIC(SDPLC_S2_ModFlt) XIC(VS2_S10_ModFlt) XIC(Flt_Modules[0].22) XIC(Flt_Modules[0].23) ,XIC(Flt_Modules[0].24) XIC(Flt_Modules[0].25) XIC(Flt_Modules[0].26) XIC(Flt_Modules[0].27) XIC(Flt_Modules[0].28) XIC(Flt_Modules[0].29) XIC(Flt_Modules[0].30) XIC(Flt_Modules[0].31) ]NOP();
					RC: "------------ General I/O Module Faults ------------------------------------";
					N: MOV(Flt_Modules[0],FltsToCitect[5]);
					RC: "-----------Point I/O Safety Module Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Flt_Modules[1] DINT is moved directly to the CItect Fault Word [6].$N"
					    "$N"
					    "";
					N: [XIC(OS1_S1_ModFlt) XIC(OS2_S1_ModFlt) XIC(OS3_S1_ModFlt) XIC(OS4N_S1_ModFlt) XIC(OS4N_S5_ModFlt) XIC(OS4S_S1_ModFlt) XIC(OS4S_S5_ModFlt) XIC(OS5_S1_ModFlt) ,XIC(OS6_S1_ModFlt) XIC(OS8_S1_ModFlt) XIC(OS9_S1_ModFlt) XIC(OS11_S1_ModFlt) XIC(OS13_S1_ModFlt) XIC(OS14_S1_ModFlt) XIC(OS15_S1_ModFlt) XIC(OS16_S1_ModFlt) ,XIC(Flt_Modules[1].16) XIC(Flt_Modules[1].17) XIC(Flt_Modules[1].18) XIC(Flt_Modules[1].19) XIC(Flt_Modules[1].20) XIC(Flt_Modules[1].21) XIC(Flt_Modules[1].22) XIC(Flt_Modules[1].23) ,XIC(Flt_Modules[1].24) XIC(Flt_Modules[1].25) XIC(Flt_Modules[1].26) XIC(Flt_Modules[1].27) XIC(Flt_Modules[1].28) XIC(Flt_Modules[1].29) XIC(Flt_Modules[1].30) XIC(Flt_Modules[1].31) ]NOP();
					RC: "------------ Operator Station Module Faults ------------------------------------";
					N: MOV(Flt_Modules[1],FltsToCitect[6]);
					RC: "-----------Point I/O Safety Module Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Flt_Modules[2] DINT is moved directly to the CItect Fault Word [7].$N"
					    "$N"
					    "";
					N: [XIC(MCC1_S1_ModFlt) XIC(MCC1_S6_ModFlt) XIC(MCC2_S1_ModFlt) XIC(MCC2_S2_ModFlt) XIC(MCC3_S1_ModFlt) XIC(MCC3_S3_ModFlt) XIC(MCC3_S4_ModFlt) XIC(MCC4_S1_ModFlt) ,XIC(MCC4_S3_ModFlt) XIC(MCC4_S4_ModFlt) XIC(MCC5_S1_ModFlt) XIC(MCC5_S3_ModFlt) XIC(MCC5_S4_ModFlt) XIC(MCC5_S5_ModFlt) XIC(Flt_Modules[2].14) XIC(Flt_Modules[2].15) ,XIC(Flt_Modules[2].16) XIC(Flt_Modules[2].17) XIC(Flt_Modules[2].18) XIC(Flt_Modules[2].19) XIC(Flt_Modules[2].20) XIC(Flt_Modules[2].21) XIC(Flt_Modules[2].22) XIC(Flt_Modules[2].23) ,XIC(Flt_Modules[2].24) XIC(Flt_Modules[2].25) XIC(Flt_Modules[2].26) XIC(Flt_Modules[2].27) XIC(Flt_Modules[2].28) XIC(Flt_Modules[2].29) XIC(Flt_Modules[2].30) XIC(Flt_Modules[2].31) ]NOP();
					RC: "------------ MCC Module Faults ------------------------------------";
					N: MOV(Flt_Modules[2],FltsToCitect[7]);
			END_ROUTINE

			ROUTINE FromCitect (Description := "Signals $NFrom Citect System")
					RC: "**************************************************************************$N"
					    "Signals From the Citect System $N"
					    "**************************************************************************";
					N: NOP();
					RC: "--------------- Pushbuttons/ Commands -------------------------$N"
					    "Used directly in the code, here for monitoring purposes only.";
					N: NOP();
					RC: "----Used at the source --------";
					N: XIC(FromCitect[0].0)NOP();
			END_ROUTINE

			ROUTINE FromMach (Description := "Signals$Nfrom Machine Processor")
					RC: "****************************************************************************$N"
					    "From Machine Processor$N"
					    "****************************************************************************";
					N: NOP();
					N: XIC(FromMachine[0].0)NOP();
					N: XIC(FromMachine[0].1)NOP();
					RC: "------Line Reset -------";
					N: XIC(FromMachine[0].6)NOP();
					RC: "--------- Hydraulic Pumps Auto Start Mode Enable -----------------$N"
					    "";
					N: XIC(FromMachine[0].10)OTE(HydPumps_AutoStart);
					RC: "--------- Exit Conveyor Hydraulic Pumps Auto Start -----------------";
					N: XIC(FromMachine[0].11)OTE(ExConHydPump_AutoStart);
					RC: "--------- Sheeter Hydraulic Pumps Auto Start -----------------";
					N: XIC(FromMachine[0].12)OTE(StHydPump_AutoStart);
					RC: "--------- Lube Pumps Auto Start Mode Enable -----------------$N"
					    "";
					N: XIC(FromMachine[0].13)OTE(LubePumps_AutoStart);
					RC: "--------- Sheeter Lube Pumps Auto Start -----------------";
					N: XIC(FromMachine[0].14)OTE(StPRLubePump_AutoStart);
					RC: "--------- Shear Lube Pumps Auto Start -----------------";
					N: XIC(FromMachine[0].15)OTE(SrPRLubePump_AutoStart);
					RC: "**************************************************************************$N"
					    "FromMach[5].00-32$N"
					    "$N"
					    "Designated Safety Word$N"
					    "*************************************************************************";
					N: NOP();
					N: XIC(FromMachine[5].0)NOP();
					N: XIC(FromMachine[5].1)NOP();
					N: XIC(FromMachine[5].2)NOP();
					N: XIC(FromMachine[5].3)NOP();
					N: XIC(FromMachine[5].4)NOP();
					N: XIC(FromMachine[5].5)NOP();
					N: XIC(FromMachine[5].6)NOP();
					N: XIC(FromMachine[5].7)NOP();
					N: XIC(FromMachine[5].8)NOP();
			END_ROUTINE

			ROUTINE FromShDie (Description := "Signals$Nfrom Shear Die Processor")
					RC: "**************************************************************************$N"
					    "Shear Die Processor to Line Signals$N"
					    "*************************************************************************$N"
					    "Words 0-4 are designated general use$N"
					    "Word 5 is designated for Safety Use";
					N: NOP();
					RC: "------- Heartbeat Sourced in Heartbeat file here for monitoring purposes only --------------------";
					N: XIC(FromShearDie[0].0)NOP();
					N: XIC(FromShearDie[0].1)OTE(x813MTR080RF);
					N: XIC(FromShearDie[0].2)OTE(x781MTR190RF);
					N: XIC(FromShearDie[0].3)OTE(x775MTR280RF);
					N: XIC(FromShearDie[0].4)OTE(x781MTR080RF);
					N: XIC(FromShearDie[0].5)NOP();
					N: XIC(FromShearDie[0].6)NOP();
					RC: "---------- Line Stop PB$'s ----------------------------------------$N"
					    "OS13$N"
					    "OS14$N"
					    "OS15$N"
					    "OS16$N"
					    "H1";
					N: XIC(FromShearDie[0].7)OTE(ES_Line_StopPB);
					RC: "---------- Line Run PB$'s ----------------------------------------$N"
					    "OS14$N"
					    "";
					N: XIC(FromShearDie[0].8)OTE(ES_Line_RunPB);
					RC: "---------- Line Thread PB$'s ----------------------------------------$N"
					    "OS13$N"
					    "OS14$N"
					    "$N"
					    "";
					N: XIC(FromShearDie[0].9)OTE(ES_Line_ThreadPB);
					RC: "---------- Line Jog PB$'s ----------------------------------------$N"
					    "OS13$N"
					    "OS14$N"
					    "$N"
					    "";
					N: XIC(FromShearDie[0].10)OTE(ES_Line_JogPB);
					RC: "-------Tandem Jog Select --------------------------------------------";
					N: XIC(FromShearDie[0].11)OTE(ES_TndJog_PB);
					RC: "-------Individual Jog Select--------------------------------------------";
					N: XIC(FromShearDie[0].12)OTE(ES_IndJog_PB);
					N: XIC(FromShearDie[0].13)OTE(x301SS540a);
					N: XIC(FromShearDie[0].14)OTE(x301SS540b);
					N: XIC(FromShearDie[0].15)OTE(x315SS040a);
					N: XIC(FromShearDie[0].16)OTE(x315SS040b);
					N: XIC(FromShearDie[0].17)OTE(x314SS040a);
					N: XIC(FromShearDie[0].18)OTE(x314SS040b);
					N: XIC(FromShearDie[0].19)OTE(x313SS460a);
					N: XIC(FromShearDie[0].20)OTE(x313SS460b);
					N: XIC(FromShearDie[0].21)OTE(x312PB700);
					N: XIC(FromShearDie[0].22)OTE(x312PB740);
					N: XIC(FromShearDie[0].23)OTE(x312SS460a);
					N: XIC(FromShearDie[0].24)OTE(x312SS460b);
					RC: "------ WORD 1 -----";
					N: NOP();
					RC: "------------- Scrap Mode ON Being Requested ---------------------$N"
					    "When this bit is high the Line needs to decel to the Scrap Mode speed$N"
					    "Once this speed is achieved the line will begin cutting scrap.";
					N: XIC(FromShearDie[1].0)OTE(ScrapModeOn);
					RC: "**************************************************************************$N"
					    "FromShearDie[5].00-32$N"
					    "$N"
					    "Designated Safety Word$N"
					    "*************************************************************************";
					N: NOP();
					RC: "-------- Command to Start the Shear Die Crank in the Safety Processor ---------------------------";
					N: XIC(FromShearDie[5].0)NOP();
					RC: "-------- Command to Start the Scrap Horizontal Conveyor (FWD) in the Safety Processor ---------------------------";
					N: XIC(FromShearDie[5].1)NOP();
					RC: "-------- Command to Start the Scrap Horizontal Conveyor (REV) in the Safety Processor ---------------------------";
					N: XIC(FromShearDie[5].2)NOP();
					RC: "------ Stacker Chain Run Fwd Command in the Safety Processor ------------------------------";
					N: XIC(FromShearDie[5].3)NOP();
					RC: "------ Stacker Chain Run Rev Command in the Safety Processor------------------------------";
					N: XIC(FromShearDie[5].4)NOP();
					RC: "------ Stacker Side Guide Run Fwd Command in the Safety Processor------------------------------";
					N: XIC(FromShearDie[5].5)NOP();
					RC: "------ Stacker Side Guide Run Rev Command in the Safety Processor------------------------------";
					N: XIC(FromShearDie[5].6)NOP();
			END_ROUTINE

			ROUTINE MainRoutine 
					N: NOP();
					N: JSR(FromMach,0);
					N: JSR(FromCitect,0);
					N: JSR(FromShDie,0);
					N: JSR(Safety_to_Line,0);
					N: JSR(SftyMap_Citect,0);
					N: JSR(SftyMap_Mach,0);
					N: JSR(SftyMap_ShDie,0);
					N: JSR(ToCitect,0);
					N: XIC(DAM)JSR(ToCitect4,0);
					N: XIO(DAM)JSR(FltsToCitect,0);
			END_ROUTINE

			ROUTINE Safety_to_Line (Description := "Safety Signals to Line")
					RC: "**************************************************************************$N"
					    "Safety to Line$N"
					    "*************************************************************************";
					N: NOP();
					RC: "Set and Reset the FromSafety[0].00 every 0.25 Seconds for communication verification$N"
					    "to the Machine and ShearDie Processors.";
					N: XIC(LineSts.Heartbeat)OTE(FromSafety[0].0);
					RC: "---------- System Coast Stop ----------------------------------------";
					N: XIC(LineSts.CoastStop_CTC)OTE(FromSafety[0].1);
					RC: "---------- System EStop ----------------------------------------";
					N: XIC(LineSts.No_CTC_EStops)OTE(FromSafety[0].2);
					RC: "---------- System No Faults ----------------------------------------";
					N: XIC(LineSts.No_CTC_Faults)OTE(FromSafety[0].3);
					N: XIO(FUTURE)OTE(FromSafety[0].4);
					RC: "---------- System All Drives Off ----------------------------------------";
					N: XIC(LineSts.All_Drives_Off)OTE(FromSafety[0].5);
					RC: "------------- Safety Gate Guarding OK -----------------------------";
					N: XIC(LineSts.GuardsOK)OTE(FromSafety[0].6);
					N: XIC(A1_CoilCarSolPwrEn)OTE(FromSafety[0].7);
					RC: "---------- System Coast Stop ----------------------------------------";
					N: XIC(LineSts.CoastStop_CTL)OTE(FromSafety[0].8);
					RC: "---------- System EStop ----------------------------------------";
					N: XIC(LineSts.No_CTL_EStops)OTE(FromSafety[0].9);
					RC: "---------- System No Faults ----------------------------------------";
					N: XIC(LineSts.No_CTL_Faults)OTE(FromSafety[0].10);
					RC: "---------- System Coast Stop ----------------------------------------";
					N: XIC(LineSts.CoastStop_Total)OTE(FromSafety[0].11);
					RC: "---------- System EStop ----------------------------------------";
					N: XIC(LineSts.No_Total_Estops)OTE(FromSafety[0].12);
					RC: "---------- System No Faults ----------------------------------------";
					N: XIC(LineSts.No_Total_Faults)OTE(FromSafety[0].13);
					RC: "***************************************************************************$N"
					    "Shear System Signals$N"
					    "***************************************************************************";
					N: NOP();
					RC: "---------- Shear Coast Stop ----------------------------------------";
					N: XIC(ShearSts.CoastStop)OTE(FromSafety[1].1);
					RC: "---------- Shear EStop ----------------------------------------";
					N: XIC(ShearSts.No_EStops)OTE(FromSafety[1].2);
					RC: "---------- Shear No Faults ----------------------------------------";
					N: XIC(ShearSts.No_Faults)OTE(FromSafety[1].3);
					N: XIO(FUTURE)OTE(FromSafety[1].4);
					RC: "---------- Shear All Drives Off ----------------------------------------";
					N: XIC(ShearSts.All_Drives_Off)OTE(FromSafety[1].5);
					N: XIO(FUTURE)OTE(FromSafety[1].6);
					RC: "***************************************************************************$N"
					    "Drive Enable Status$N"
					    "***************************************************************************$N"
					    "Sent to the Machine and Shear Die Processor for Verification$N"
					    "of the HW Signal at the Drive Interface level";
					N: NOP();
					N: XIC(SafeOff_y613CR510.O1)OTE(FromSafety[2].0);
					N: XIC(SafeOff_y613CR550.O1)OTE(FromSafety[2].1);
					N: XIC(SafeOff_y613CR670.O1)OTE(FromSafety[2].2);
					N: XIC(SafeOff_y613CR750.O1)OTE(FromSafety[2].3);
					N: XIC(SafeOff_y614CR090.O1)OTE(FromSafety[2].4);
					N: XIC(SafeOff_y614CR170.O1)OTE(FromSafety[2].5);
					N: XIC(SafeOff_y614CR250.O1)OTE(FromSafety[2].6);
					N: XIC(SafeOff_y172CR510.O1)OTE(FromSafety[2].7);
					N: XIC(y725MTR080SE)OTE(FromSafety[2].8);
					N: XIC(y727MTR080SE)OTE(FromSafety[2].9);
					N: XIC(y755MTR080SE)OTE(FromSafety[2].10);
					N: XIC(y751MTR080SE)OTE(FromSafety[2].11);
					N: XIC(y762MTR080SE)OTE(FromSafety[2].12);
					N: XIC(x759MTR080SE)OTE(FromSafety[2].13);
					N: XIC(y731MTR080SE)OTE(FromSafety[2].14);
					N: XIC(y733MTR080SE)OTE(FromSafety[2].15);
					N: XIC(y735MTR080SE)OTE(FromSafety[2].16);
					N: XIC(y729MTR080SE)OTE(FromSafety[2].17);
					N: XIC(y754MTR080SE)OTE(FromSafety[2].18);
					N: XIC(y782MTR080SE)OTE(FromSafety[2].19);
					N: XIC(y779MTR080SE)OTE(FromSafety[2].20);
					N: XIC(y776MTR080SE)OTE(FromSafety[2].21);
					N: XIC(y812MTR080SE)OTE(FromSafety[2].22);
					N: XIC(y808MTR080SE)OTE(FromSafety[2].23);
					N: XIC(y810MTR080SE)OTE(FromSafety[2].24);
					N: XIC(y806MTR080SE)OTE(FromSafety[2].25);
					N: XIC(y800MTR080SE)OTE(FromSafety[2].26);
					N: XIC(y785MTR080SE)OTE(FromSafety[2].27);
					N: XIC(y804MTR080SE)OTE(FromSafety[2].28);
					N: XIC(ChgMe)OTE(FromSafety[2].29);
					N: XIC(ChgMe)OTE(FromSafety[2].30);
					N: XIC(ChgMe)OTE(FromSafety[2].31);
					RC: "**************************************************************************$N"
					    "FVR/FVNR Motor Starter Feedback ---> to Machine Processor$N"
					    "**************************************************************************";
					N: NOP();
					RC: "---------Unwind Hold Down Roll Forward/Reverse Running FB-------$N"
					    "";
					N: [XIC(x708MTR250FF) OTE(FromSafety[4].0) ,XIC(x708MTR250RF) OTE(FromSafety[4].1) ];
					RC: "---------Flattener Forward/Reverse Running FB-------$N"
					    "";
					N: [XIC(x708MTR080FF) OTE(FromSafety[4].2) ,XIC(x708MTR080RF) OTE(FromSafety[4].3) ];
					RC: "---------Trimmer Pinch Roll Forward/Reverse Running FB-------$N"
					    "";
					N: [XIC(x753MTR190FF) OTE(FromSafety[4].4) ,XIC(x753MTR190RF) OTE(FromSafety[4].5) ];
					RC: "---------Trimmer Scrap Conveyor Running FB-------$N"
					    "";
					N: XIC(x761MTR081RF)OTE(FromSafety[4].6);
					RC: "---------Trimmer Pinch Roll Forward/Reverse Running FB-------$N"
					    "";
					N: [XIC(x702MTR191FF) OTE(FromSafety[4].7) ,XIC(x702MTR191RF) OTE(FromSafety[4].8) ];
					RC: "**************************************************************************$N"
					    "FVR/FVNR Motor Starter Feedback ---> to ShearDie Processor$N"
					    "**************************************************************************";
					N: NOP();
					RC: "--------- Shear Die Crank Motor-------$N"
					    "Running Feedback";
					N: XIC(x778MTR080RF)OTE(FromSafety[5].0);
					RC: "--------- Scrap Horizontal Conveyor Forward/Reverse Running FB-------$N"
					    "";
					N: [XIC(x802MTR230FF) OTE(FromSafety[5].1) ,XIC(x802MTR230RF) OTE(FromSafety[5].2) ];
					RC: "---------Stacker Chain Forward/Reverse Running FB-------$N"
					    "";
					N: [XIC(x802MTR231FF) OTE(FromSafety[5].3) ,XIC(x802MTR231RF) OTE(FromSafety[5].4) ];
					RC: "---------Stacker Side Guide Forward/Reverse Running FB-------$N"
					    "";
					N: [XIC(x802MTR080FF) OTE(FromSafety[5].5) ,XIC(x802MTR080RF) OTE(FromSafety[5].6) ];
			END_ROUTINE

			ROUTINE SftyMap_Citect (Description := "Citect$NSafety Mapped Data")
					RC: "**************************************************************************$N"
					    "Citect System Safety Mapped Data Source$N"
					    "**************************************************************************$N"
					    "$N"
					    "In the Safety Task this data will be $QSftyMap_Citect[x].yy$Q";
					N: NOP();
					N: XIC(FromCitect[0].0)OTE(Map_Citect[0].0);
			END_ROUTINE

			ROUTINE SftyMap_Mach (Description := "Machine$NSafety Mapped Data")
					RC: "**************************************************************************$N"
					    "Machine Processor Safety Mapped Data Source$N"
					    "**************************************************************************$N"
					    "$N"
					    "In the Safety Task this data will be $QSftyMap_Mach[x].yy$Q";
					N: NOP();
					N: XIC(FromMachine[0].0)OTE(Map_Mach[0].0);
					RC: "------ Unwind Hold Down Roll Run Fwd Command ------------------------------";
					N: XIC(FromMachine[5].0)OTE(Map_Mach[0].1);
					RC: "------ Unwind Hold Down Roll Run Fwd Command ------------------------------";
					N: XIC(FromMachine[5].1)OTE(Map_Mach[0].2);
					RC: "------ Flattener Run Fwd Command ------------------------------";
					N: XIC(FromMachine[5].2)OTE(Map_Mach[0].3);
					RC: "------ Flattener Run Rev Command ------------------------------";
					N: XIC(FromMachine[5].3)OTE(Map_Mach[0].4);
					RC: "----- Trimmer Pinch Roll Run Fwd Command ------------------------------";
					N: XIC(FromMachine[5].4)OTE(Map_Mach[0].5);
					RC: "------ Trimmer Pinch Roll Run Rev Command ------------------------------";
					N: XIC(FromMachine[5].5)OTE(Map_Mach[0].6);
					RC: "------ Trimmer Scrap Conveyor Run Command ------------------------------";
					N: XIC(FromMachine[5].6)OTE(Map_Mach[0].7);
					RC: "----- Rewind Pinch Roll Run Fwd Command ------------------------------";
					N: XIC(FromMachine[5].7)OTE(Map_Mach[0].8);
					RC: "----- Rewind Pinch Roll Run Rev Command ------------------------------";
					N: XIC(FromMachine[5].8)OTE(Map_Mach[0].9);
					N: XIC(FromMachine[0].1)OTE(Map_Mach[0].10);
					N: XIC(FromMachine[0].6)OTE(Map_Mach[0].11);
					N: XIC(FromMachine[0].2)OTE(Map_Mach[0].12);
			END_ROUTINE

			ROUTINE SftyMap_ShDie (Description := "Shear Die$NSafety Mapped Data")
					RC: "**************************************************************************$N"
					    "Shear Die Processor Safety Mapped Data Source$N"
					    "**************************************************************************$N"
					    "$N"
					    "In the Safety Task this data will be $QSftyMap_ShDie[x].yy$Q";
					N: NOP();
					N: XIC(FromShearDie[0].0)OTE(Map_ShDie[0].0);
					RC: "------ Shear Die Crank Run Command ------------------------------";
					N: XIC(FromShearDie[5].0)OTE(Map_ShDie[0].1);
					RC: "------ Scrap Horizontal Conveyor Run Fwd Command ------------------------------";
					N: XIC(FromShearDie[5].1)OTE(Map_ShDie[0].2);
					RC: "------ Scrap Horizontal Conveyor Run Rev Command ------------------------------";
					N: XIC(FromShearDie[5].2)OTE(Map_ShDie[0].3);
					RC: "------ Stacker Chain Run Fwd Command ------------------------------";
					N: XIC(FromShearDie[5].3)OTE(Map_ShDie[0].4);
					RC: "------ Stacker Chain Run Rev Command ------------------------------";
					N: XIC(FromShearDie[5].4)OTE(Map_ShDie[0].5);
					RC: "------ Stacker Side Guide Run Fwd Command ------------------------------";
					N: XIC(FromShearDie[5].5)OTE(Map_ShDie[0].6);
					RC: "------ Stacker Side Guide Run Rev Command ------------------------------";
					N: XIC(FromShearDie[5].6)OTE(Map_ShDie[0].7);
					N: XIC(FromShearDie[0].5)OTE(Map_ShDie[0].8);
					N: XIC(FromShearDie[0].6)OTE(Map_ShDie[0].9);
			END_ROUTINE

			ROUTINE ToCitect (Description := "Safety Signals $Nto Citect System")
					RC: "**************************************************************************$N"
					    "Signals To the Citect System $N"
					    "**************************************************************************";
					N: NOP();
					RC: " (Sourced in Safety Heartbeat Routine)";
					N: XIC(HB_Citect)OTE(ToCitect[0].0);
					N: XIC(ESTOP_x201PB040.O1)OTE(ToCitect[0].1);
					N: XIC(ESTOP_x211PB040.O1)OTE(ToCitect[0].2);
					N: XIC(ESTOP_x221PB040.O1)OTE(ToCitect[0].3);
					N: XIC(ESTOP_x231PB040.O1)OTE(ToCitect[0].4);
					N: XIC(ESTOP_x241PB040.O1)OTE(ToCitect[0].5);
					N: XIC(ESTOP_x251PB040.O1)OTE(ToCitect[0].6);
					N: XIC(ESTOP_x261PB040.O1)OTE(ToCitect[0].7);
					N: XIC(ESTOP_x271PB040.O1)OTE(ToCitect[0].8);
					N: XIC(ESTOP_x281PB040.O1)OTE(ToCitect[0].9);
					N: XIC(ESTOP_x291PB040.O1)OTE(ToCitect[0].10);
					N: XIC(ESTOP_x301PB040.O1)OTE(ToCitect[0].11);
					N: XIC(ESTOP_x311PB040.O1)OTE(ToCitect[0].12);
					N: XIC(ESTOP_x311PB130.O1)OTE(ToCitect[0].13);
					N: XIC(ESTOP_x321PB040.O1)OTE(ToCitect[0].14);
					N: XIC(ESTOP_x331PB040.O1)OTE(ToCitect[0].15);
					N: XIC(ESTOP_x480PB470.O1)OTE(ToCitect[0].16);
					N: XIC(ESTOP_x480PB550.O1)OTE(ToCitect[0].17);
					N: XIC(ESTOP_x519LS470.O1)OTE(ToCitect[0].18);
					N: XIC(ESTOP_x533PB470.O1)OTE(ToCitect[0].19);
					N: XIC(ChgMe)OTE(ToCitect[0].20);
					RC: "******************************************************************************$N"
					    "Safety System Signals$N"
					    "******************************************************************************";
					N: NOP();
					RC: "---------- System Coast Stop ----------------------------------------";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(ToCitect[1].1);
					RC: "---------- System EStop ----------------------------------------";
					N: [XIC(LineSts.No_CTC_EStops) XIO(Line_TotalMode) ,XIC(LineSts.No_Total_Estops) XIC(Line_TotalMode) ]OTE(ToCitect[1].2);
					RC: "---------- System No Faults ----------------------------------------";
					N: [XIC(LineSts.No_CTC_Faults) XIO(Line_TotalMode) ,XIC(LineSts.No_CTC_Faults) XIC(Line_TotalMode) ]OTE(ToCitect[1].3);
					N: XIO(FUTURE)OTE(ToCitect[1].4);
					RC: "---------- System All Drives Off ----------------------------------------";
					N: XIC(LineSts.All_Drives_Off)OTE(ToCitect[1].5);
					RC: "---------- System Safety Controlled Power ON --------------------$N"
					    "";
					N: XIC(ChgMe)OTE(ToCitect[1].6);
					RC: "***************************************************************************$N"
					    "Shear System Signals$N"
					    "***************************************************************************";
					N: NOP();
					RC: "---------- Shear Coast Stop ----------------------------------------";
					N: XIC(ShearSts.CoastStop)OTE(ToCitect[2].1);
					RC: "---------- Shear EStop ----------------------------------------";
					N: XIC(ShearSts.No_EStops)OTE(ToCitect[2].2);
					RC: "---------- Shear No Faults ----------------------------------------";
					N: XIC(ShearSts.No_Faults)OTE(ToCitect[2].3);
					N: XIO(FUTURE)OTE(ToCitect[2].4);
					RC: "---------- Shear All Drives Off ----------------------------------------";
					N: XIC(ShearSts.All_Drives_Off)OTE(ToCitect[2].5);
					RC: "---------- Shear Safety Controlled Power ON --------------------$N"
					    "";
					N: XIC(ChgMe)OTE(ToCitect[2].6);
			END_ROUTINE

			ROUTINE ToCitect4 
					RC: "**************************************************************************$N"
					    "Signals To the Citect System $N"
					    "**************************************************************************";
					N: NOP();
					N: XIC(y406CR050)OTE(ToCitect4[0].0);
					N: XIC(y406CR090)OTE(ToCitect4[0].1);
					N: XIC(y406CR120)OTE(ToCitect4[0].2);
					N: XIC(y406CR170)OTE(ToCitect4[0].3);
					N: XIC(A1:20:O.Pt04Data)OTE(ToCitect4[0].4);
					N: XIC(A1:20:O.Pt05Data)OTE(ToCitect4[0].5);
					N: XIC(A1:20:O.Pt06Data)OTE(ToCitect4[0].6);
					N: XIC(A1:20:O.Pt07Data)OTE(ToCitect4[0].7);
					N: XIC(x406LCA047)OTE(ToCitect4[0].8);
					N: XIC(x406LCB052)OTE(ToCitect4[0].9);
					N: XIC(A1:21:I.Pt02Data)OTE(ToCitect4[0].10);
					N: XIC(A1:21:I.Pt03Data)OTE(ToCitect4[0].11);
					N: XIC(A1:21:I.Pt04Data)OTE(ToCitect4[0].12);
					N: XIC(A1:21:I.Pt05Data)OTE(ToCitect4[0].13);
					N: XIC(A1:21:I.Pt06Data)OTE(ToCitect4[0].14);
					N: XIC(A1:21:I.Pt07Data)OTE(ToCitect4[0].15);
					N: XIC(y435CR050)OTE(ToCitect4[0].16);
					N: XIC(C1:12:O.Pt01Data)OTE(ToCitect4[0].17);
					N: XIC(C1:12:O.Pt02Data)OTE(ToCitect4[0].18);
					N: XIC(C1:12:O.Pt03Data)OTE(ToCitect4[0].19);
					N: XIC(C1:12:O.Pt04Data)OTE(ToCitect4[0].20);
					N: XIC(C1:12:O.Pt05Data)OTE(ToCitect4[0].21);
					N: XIC(C1:12:O.Pt06Data)OTE(ToCitect4[0].22);
					N: XIC(C1:12:O.Pt07Data)OTE(ToCitect4[0].23);
					N: XIC(x613CR460)OTE(ToCitect4[0].24);
					N: XIC(x613CR510)OTE(ToCitect4[0].25);
					N: XIC(x613CR550)OTE(ToCitect4[0].26);
					N: XIC(x613CR590)OTE(ToCitect4[0].27);
					N: XIC(x613CR630)OTE(ToCitect4[0].28);
					N: XIC(x613CR670)OTE(ToCitect4[0].29);
					N: XIC(x613CR710)OTE(ToCitect4[0].30);
					N: XIC(x613CR750)OTE(ToCitect4[0].31);
					N: XIC(x614CR040)OTE(ToCitect4[1].0);
					N: XIC(x614CR090)OTE(ToCitect4[1].1);
					N: XIC(x614CR130)OTE(ToCitect4[1].2);
					N: XIC(x614CR170)OTE(ToCitect4[1].3);
					N: XIC(x614CR210)OTE(ToCitect4[1].4);
					N: XIC(x614CR250)OTE(ToCitect4[1].5);
					N: XIC(CHPLC:2:I.Pt06Data)OTE(ToCitect4[1].6);
					N: XIC(CHPLC:2:I.Pt07Data)OTE(ToCitect4[1].7);
					N: XIC(CHPLC:3:I.Pt00Data)OTE(ToCitect4[1].8);
					N: XIC(CHPLC:3:I.Pt01Data)OTE(ToCitect4[1].9);
					N: XIC(CHPLC:3:I.Pt02Data)OTE(ToCitect4[1].10);
					N: XIC(CHPLC:3:I.Pt03Data)OTE(ToCitect4[1].11);
					N: XIC(CHPLC:3:I.Pt04Data)OTE(ToCitect4[1].12);
					N: XIC(CHPLC:3:I.Pt05Data)OTE(ToCitect4[1].13);
					N: XIC(CHPLC:3:I.Pt06Data)OTE(ToCitect4[1].14);
					N: XIC(CHPLC:3:I.Pt07Data)OTE(ToCitect4[1].15);
					N: XIC(y613CR460)OTE(ToCitect4[1].16);
					N: XIC(y613CR510)OTE(ToCitect4[1].17);
					N: XIC(y613CR550)OTE(ToCitect4[1].18);
					N: XIC(y613CR590)OTE(ToCitect4[1].19);
					N: XIC(y613CR630)OTE(ToCitect4[1].20);
					N: XIC(y613CR670)OTE(ToCitect4[1].21);
					N: XIC(y613CR710)OTE(ToCitect4[1].22);
					N: XIC(y613CR750)OTE(ToCitect4[1].23);
					N: XIC(y614CR040)OTE(ToCitect4[1].24);
					N: XIC(y614CR090)OTE(ToCitect4[1].25);
					N: XIC(y614CR130)OTE(ToCitect4[1].26);
					N: XIC(y614CR170)OTE(ToCitect4[1].27);
					N: XIC(y614CR210)OTE(ToCitect4[1].28);
					N: XIC(y614CR250)OTE(ToCitect4[1].29);
					N: XIC(CHPLC:5:O.Pt06Data)OTE(ToCitect4[1].30);
					N: XIC(CHPLC:5:O.Pt07Data)OTE(ToCitect4[1].31);
					N: XIC(CHPLC:6:O.Pt00Data)OTE(ToCitect4[2].0);
					N: XIC(CHPLC:6:O.Pt01Data)OTE(ToCitect4[2].1);
					N: XIC(CHPLC:6:O.Pt02Data)OTE(ToCitect4[2].2);
					N: XIC(CHPLC:6:O.Pt03Data)OTE(ToCitect4[2].3);
					N: XIC(CHPLC:6:O.Pt04Data)OTE(ToCitect4[2].4);
					N: XIC(CHPLC:6:O.Pt05Data)OTE(ToCitect4[2].5);
					N: XIC(CHPLC:6:O.Pt06Data)OTE(ToCitect4[2].6);
					N: XIC(CHPLC:6:O.Pt07Data)OTE(ToCitect4[2].7);
					N: XIC(y451CR050)OTE(ToCitect4[2].8);
					N: XIC(D1:12:O.Pt01Data)OTE(ToCitect4[2].9);
					N: XIC(D1:12:O.Pt02Data)OTE(ToCitect4[2].10);
					N: XIC(D1:12:O.Pt03Data)OTE(ToCitect4[2].11);
					N: XIC(D1:12:O.Pt04Data)OTE(ToCitect4[2].12);
					N: XIC(D1:12:O.Pt05Data)OTE(ToCitect4[2].13);
					N: XIC(D1:12:O.Pt06Data)OTE(ToCitect4[2].14);
					N: XIC(D1:12:O.Pt07Data)OTE(ToCitect4[2].15);
					N: XIC(y480CR050)OTE(ToCitect4[2].16);
					N: XIC(DPD:14:O.Pt01Data)OTE(ToCitect4[2].17);
					N: XIC(DPD:14:O.Pt02Data)OTE(ToCitect4[2].18);
					N: XIC(DPD:14:O.Pt03Data)OTE(ToCitect4[2].19);
					N: XIC(DPD:14:O.Pt04Data)OTE(ToCitect4[2].20);
					N: XIC(DPD:14:O.Pt05Data)OTE(ToCitect4[2].21);
					N: XIC(DPD:14:O.Pt06Data)OTE(ToCitect4[2].22);
					N: XIC(DPD:14:O.Pt07Data)OTE(ToCitect4[2].23);
					N: XIC(x480PB470a)OTE(ToCitect4[2].24);
					N: XIC(x480PB470b)OTE(ToCitect4[2].25);
					N: XIC(x480PB550a)OTE(ToCitect4[2].26);
					N: XIC(x480PB550b)OTE(ToCitect4[2].27);
					N: XIC(DPD:15:I.Pt04Data)OTE(ToCitect4[2].28);
					N: XIC(DPD:15:I.Pt05Data)OTE(ToCitect4[2].29);
					N: XIC(DPD:15:I.Pt06Data)OTE(ToCitect4[2].30);
					N: XIC(DPD:15:I.Pt07Data)OTE(ToCitect4[2].31);
					N: XIC(y464CR050)OTE(ToCitect4[3].0);
					N: XIC(E1:10:O.Pt01Data)OTE(ToCitect4[3].1);
					N: XIC(E1:10:O.Pt02Data)OTE(ToCitect4[3].2);
					N: XIC(E1:10:O.Pt03Data)OTE(ToCitect4[3].3);
					N: XIC(E1:10:O.Pt04Data)OTE(ToCitect4[3].4);
					N: XIC(E1:10:O.Pt05Data)OTE(ToCitect4[3].5);
					N: XIC(E1:10:O.Pt06Data)OTE(ToCitect4[3].6);
					N: XIC(E1:10:O.Pt07Data)OTE(ToCitect4[3].7);
					N: XIC(y507CR050)OTE(ToCitect4[3].8);
					N: XIC(y507CR090)OTE(ToCitect4[3].9);
					N: XIC(F1:19:O.Pt02Data)OTE(ToCitect4[3].10);
					N: XIC(F1:19:O.Pt03Data)OTE(ToCitect4[3].11);
					N: XIC(F1:19:O.Pt04Data)OTE(ToCitect4[3].12);
					N: XIC(F1:19:O.Pt05Data)OTE(ToCitect4[3].13);
					N: XIC(F1:19:O.Pt06Data)OTE(ToCitect4[3].14);
					N: XIC(F1:19:O.Pt07Data)OTE(ToCitect4[3].15);
					N: XIC(F1:20:I.Pt00Data)OTE(ToCitect4[3].16);
					N: XIC(F1:20:I.Pt01Data)OTE(ToCitect4[3].17);
					N: XIC(F1:20:I.Pt02Data)OTE(ToCitect4[3].18);
					N: XIC(F1:20:I.Pt03Data)OTE(ToCitect4[3].19);
					N: XIC(F1:20:I.Pt04Data)OTE(ToCitect4[3].20);
					N: XIC(F1:20:I.Pt05Data)OTE(ToCitect4[3].21);
					N: XIC(F1:20:I.Pt06Data)OTE(ToCitect4[3].22);
					N: XIC(F1:20:I.Pt07Data)OTE(ToCitect4[3].23);
					N: XIC(y519CR050)OTE(ToCitect4[3].24);
					N: XIC(G1:11:O.Pt01Data)OTE(ToCitect4[3].25);
					N: XIC(G1:11:O.Pt02Data)OTE(ToCitect4[3].26);
					N: XIC(G1:11:O.Pt03Data)OTE(ToCitect4[3].27);
					N: XIC(G1:11:O.Pt04Data)OTE(ToCitect4[3].28);
					N: XIC(G1:11:O.Pt05Data)OTE(ToCitect4[3].29);
					N: XIC(G1:11:O.Pt06Data)OTE(ToCitect4[3].30);
					N: XIC(G1:11:O.Pt07Data)OTE(ToCitect4[3].31);
					N: XIC(x519LS470)OTE(ToCitect4[4].0);
					N: XIC(G1:12:I.Pt01Data)OTE(ToCitect4[4].1);
					N: XIC(G1:12:I.Pt02Data)OTE(ToCitect4[4].2);
					N: XIC(G1:12:I.Pt03Data)OTE(ToCitect4[4].3);
					N: XIC(G1:12:I.Pt04Data)OTE(ToCitect4[4].4);
					N: XIC(G1:12:I.Pt05Data)OTE(ToCitect4[4].5);
					N: XIC(G1:12:I.Pt06Data)OTE(ToCitect4[4].6);
					N: XIC(G1:12:I.Pt07Data)OTE(ToCitect4[4].7);
					N: XIC(y533CR050)OTE(ToCitect4[4].8);
					N: XIC(H1:5:O.Pt01Data)OTE(ToCitect4[4].9);
					N: XIC(H1:5:O.Pt02Data)OTE(ToCitect4[4].10);
					N: XIC(H1:5:O.Pt03Data)OTE(ToCitect4[4].11);
					N: XIC(H1:5:O.Pt04Data)OTE(ToCitect4[4].12);
					N: XIC(H1:5:O.Pt05Data)OTE(ToCitect4[4].13);
					N: XIC(H1:5:O.Pt06Data)OTE(ToCitect4[4].14);
					N: XIC(H1:5:O.Pt07Data)OTE(ToCitect4[4].15);
					N: XIC(x533PB470a)OTE(ToCitect4[4].16);
					N: XIC(x533PB470b)OTE(ToCitect4[4].17);
					N: XIC(H1:6:I.Pt02Data)OTE(ToCitect4[4].18);
					N: XIC(H1:6:I.Pt03Data)OTE(ToCitect4[4].19);
					N: XIC(H1:6:I.Pt04Data)OTE(ToCitect4[4].20);
					N: XIC(H1:6:I.Pt05Data)OTE(ToCitect4[4].21);
					N: XIC(H1:6:I.Pt06Data)OTE(ToCitect4[4].22);
					N: XIC(H1:6:I.Pt07Data)OTE(ToCitect4[4].23);
					N: XIC(x702MTR191FF)OTE(ToCitect4[4].24);
					N: XIC(x702MTR191RF)OTE(ToCitect4[4].25);
					N: XIC(MCC1:1:I.Pt02Data)OTE(ToCitect4[4].26);
					N: XIC(MCC1:1:I.Pt03Data)OTE(ToCitect4[4].27);
					N: XIC(x708MTR080FF)OTE(ToCitect4[4].28);
					N: XIC(x708MTR080RF)OTE(ToCitect4[4].29);
					N: XIC(x708MTR250FF)OTE(ToCitect4[4].30);
					N: XIC(x708MTR250RF)OTE(ToCitect4[4].31);
					N: XIC(y702MTR191FC)OTE(ToCitect4[5].0);
					N: XIC(y702MTR191RC)OTE(ToCitect4[5].1);
					N: XIC(MCC1:6:O.Pt02Data)OTE(ToCitect4[5].2);
					N: XIC(MCC1:6:O.Pt03Data)OTE(ToCitect4[5].3);
					N: XIC(y708MTR080FC)OTE(ToCitect4[5].4);
					N: XIC(y708MTR080RC)OTE(ToCitect4[5].5);
					N: XIC(y708MTR250FC)OTE(ToCitect4[5].6);
					N: XIC(y708MTR250RC)OTE(ToCitect4[5].7);
					N: XIC(y725MTR080SP)OTE(ToCitect4[5].8);
					N: XIC(y725MTR080SE)OTE(ToCitect4[5].9);
					N: XIC(y729MTR080SP)OTE(ToCitect4[5].10);
					N: XIC(y729MTR080SE)OTE(ToCitect4[5].11);
					N: XIC(y727MTR080SP)OTE(ToCitect4[5].12);
					N: XIC(y727MTR080SE)OTE(ToCitect4[5].13);
					N: XIC(y731MTR080SP)OTE(ToCitect4[5].14);
					N: XIC(y731MTR080SE)OTE(ToCitect4[5].15);
					N: XIC(y733MTR080SP)OTE(ToCitect4[5].16);
					N: XIC(y733MTR080SE)OTE(ToCitect4[5].17);
					N: XIC(y735MTR080SP)OTE(ToCitect4[5].18);
					N: XIC(y735MTR080SE)OTE(ToCitect4[5].19);
					N: XIC(MCC2:2:O.Pt04Data)OTE(ToCitect4[5].20);
					N: XIC(MCC2:2:O.Pt05Data)OTE(ToCitect4[5].21);
					N: XIC(MCC2:2:O.Pt06Data)OTE(ToCitect4[5].22);
					N: XIC(MCC2:2:O.Pt07Data)OTE(ToCitect4[5].23);
					N: XIC(x753MTR190FF)OTE(ToCitect4[5].24);
					N: XIC(x753MTR190RF)OTE(ToCitect4[5].25);
					N: XIC(x761MTR081RF)OTE(ToCitect4[5].26);
					N: XIC(MCC3:1:I.Pt03Data)OTE(ToCitect4[5].27);
					N: XIC(MCC3:1:I.Pt04Data)OTE(ToCitect4[5].28);
					N: XIC(MCC3:1:I.Pt05Data)OTE(ToCitect4[5].29);
					N: XIC(MCC3:1:I.Pt06Data)OTE(ToCitect4[5].30);
					N: XIC(MCC3:1:I.Pt07Data)OTE(ToCitect4[5].31);
					N: XIC(y753MTR190FC)OTE(ToCitect4[6].0);
					N: XIC(y753MTR190RC)OTE(ToCitect4[6].1);
					N: XIC(y761MTR081RC)OTE(ToCitect4[6].2);
					N: XIC(y751MTR080SP)OTE(ToCitect4[6].3);
					N: XIC(y751MTR080SE)OTE(ToCitect4[6].4);
					N: XIC(y754MTR080SP)OTE(ToCitect4[6].5);
					N: XIC(y754MTR080SE)OTE(ToCitect4[6].6);
					N: XIC(y755MTR080SP)OTE(ToCitect4[6].7);
					N: XIC(y755MTR080SE)OTE(ToCitect4[6].8);
					N: XIC(x759MTR080SP)OTE(ToCitect4[6].9);
					N: XIC(x759MTR080SE)OTE(ToCitect4[6].10);
					N: XIC(y762MTR080SP)OTE(ToCitect4[6].11);
					N: XIC(y762MTR080SE)OTE(ToCitect4[6].12);
					N: XIC(MCC3:4:O.Pt05Data)OTE(ToCitect4[6].13);
					N: XIC(MCC3:4:O.Pt06Data)OTE(ToCitect4[6].14);
					N: XIC(MCC3:4:O.Pt07Data)OTE(ToCitect4[6].15);
					N: XIC(x778MTR080RF)OTE(ToCitect4[6].16);
					N: XIC(MCC4:1:I.Pt01Data)OTE(ToCitect4[6].17);
					N: XIC(MCC4:1:I.Pt02Data)OTE(ToCitect4[6].18);
					N: XIC(MCC4:1:I.Pt03Data)OTE(ToCitect4[6].19);
					N: XIC(MCC4:1:I.Pt04Data)OTE(ToCitect4[6].20);
					N: XIC(MCC4:1:I.Pt05Data)OTE(ToCitect4[6].21);
					N: XIC(MCC4:1:I.Pt06Data)OTE(ToCitect4[6].22);
					N: XIC(MCC4:1:I.Pt07Data)OTE(ToCitect4[6].23);
					N: XIC(y779MTR080SP)OTE(ToCitect4[6].24);
					N: XIC(y779MTR080SE)OTE(ToCitect4[6].25);
					N: XIC(y782MTR080SP)OTE(ToCitect4[6].26);
					N: XIC(y782MTR080SE)OTE(ToCitect4[6].27);
					N: XIC(y785MTR080SP)OTE(ToCitect4[6].28);
					N: XIC(y785MTR080SE)OTE(ToCitect4[6].29);
					N: XIC(y776MTR080SP)OTE(ToCitect4[6].30);
					N: XIC(y776MTR080SE)OTE(ToCitect4[6].31);
					N: XIC(y778MTR080RC)OTE(ToCitect4[7].0);
					N: XIC(MCC4:4:O.Pt01Data)OTE(ToCitect4[7].1);
					N: XIC(MCC4:4:O.Pt02Data)OTE(ToCitect4[7].2);
					N: XIC(MCC4:4:O.Pt03Data)OTE(ToCitect4[7].3);
					N: XIC(MCC4:4:O.Pt04Data)OTE(ToCitect4[7].4);
					N: XIC(MCC4:4:O.Pt05Data)OTE(ToCitect4[7].5);
					N: XIC(MCC4:4:O.Pt06Data)OTE(ToCitect4[7].6);
					N: XIC(MCC4:4:O.Pt07Data)OTE(ToCitect4[7].7);
					N: XIC(x802MTR080FF)OTE(ToCitect4[7].8);
					N: XIC(x802MTR080RF)OTE(ToCitect4[7].9);
					N: XIC(x802MTR230FF)OTE(ToCitect4[7].10);
					N: XIC(x802MTR230RF)OTE(ToCitect4[7].11);
					N: XIC(x802MTR231FF)OTE(ToCitect4[7].12);
					N: XIC(x802MTR231RF)OTE(ToCitect4[7].13);
					N: XIC(MCC5:1:I.Pt06Data)OTE(ToCitect4[7].14);
					N: XIC(MCC5:1:I.Pt07Data)OTE(ToCitect4[7].15);
					N: XIC(y800MTR080SP)OTE(ToCitect4[7].16);
					N: XIC(y800MTR080SE)OTE(ToCitect4[7].17);
					N: XIC(y804MTR080SP)OTE(ToCitect4[7].18);
					N: XIC(y804MTR080SE)OTE(ToCitect4[7].19);
					N: XIC(y806MTR080SP)OTE(ToCitect4[7].20);
					N: XIC(y806MTR080SE)OTE(ToCitect4[7].21);
					N: XIC(y808MTR080SP)OTE(ToCitect4[7].22);
					N: XIC(y808MTR080SE)OTE(ToCitect4[7].23);
					N: XIC(y810MTR080SP)OTE(ToCitect4[7].24);
					N: XIC(y810MTR080SE)OTE(ToCitect4[7].25);
					N: XIC(y812MTR080SP)OTE(ToCitect4[7].26);
					N: XIC(y812MTR080SE)OTE(ToCitect4[7].27);
					N: XIC(y802MTR080FC)OTE(ToCitect4[7].28);
					N: XIC(y802MTR080RC)OTE(ToCitect4[7].29);
					N: XIC(y802MTR230FC)OTE(ToCitect4[7].30);
					N: XIC(y802MTR230RC)OTE(ToCitect4[7].31);
					N: XIC(y802MTR231FC)OTE(ToCitect4[8].0);
					N: XIC(y802MTR231RC)OTE(ToCitect4[8].1);
					N: XIC(MCC5:5:O.Pt02Data)OTE(ToCitect4[8].2);
					N: XIC(MCC5:5:O.Pt03Data)OTE(ToCitect4[8].3);
					N: XIC(MCC5:5:O.Pt04Data)OTE(ToCitect4[8].4);
					N: XIC(MCC5:5:O.Pt05Data)OTE(ToCitect4[8].5);
					N: XIC(MCC5:5:O.Pt06Data)OTE(ToCitect4[8].6);
					N: XIC(MCC5:5:O.Pt07Data)OTE(ToCitect4[8].7);
					N: XIC(x172CR460)OTE(ToCitect4[8].8);
					N: XIC(x172CR510)OTE(ToCitect4[8].9);
					N: XIC(SDPLC:1:I.Pt02Data)OTE(ToCitect4[8].10);
					N: XIC(SDPLC:1:I.Pt03Data)OTE(ToCitect4[8].11);
					N: XIC(SDPLC:1:I.Pt04Data)OTE(ToCitect4[8].12);
					N: XIC(SDPLC:1:I.Pt05Data)OTE(ToCitect4[8].13);
					N: XIC(SDPLC:1:I.Pt06Data)OTE(ToCitect4[8].14);
					N: XIC(SDPLC:1:I.Pt07Data)OTE(ToCitect4[8].15);
					N: XIC(y172CR460)OTE(ToCitect4[8].16);
					N: XIC(y172CR510)OTE(ToCitect4[8].17);
					N: XIC(y172CR550)OTE(ToCitect4[8].18);
					N: XIC(SDPLC:2:O.Pt03Data)OTE(ToCitect4[8].19);
					N: XIC(SDPLC:2:O.Pt04Data)OTE(ToCitect4[8].20);
					N: XIC(SDPLC:2:O.Pt05Data)OTE(ToCitect4[8].21);
					N: XIC(SDPLC:2:O.Pt06Data)OTE(ToCitect4[8].22);
					N: XIC(SDPLC:2:O.Pt07Data)OTE(ToCitect4[8].23);
			END_ROUTINE

	END_PROGRAM

	PROGRAM Estops (Description := "Estop PB$'s",
	                Class := Safety,
	                MAIN := "A00_Main",
	                MODE := 0,
	                DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE A00_Main 
					N: NOP();
					N: AFI()[XIC(ESTOP_x201PB040.O1) XIC(ESTOP_x211PB040.O1) XIC(ESTOP_x221PB040.O1) XIC(ESTOP_x231PB040.O1) XIC(ESTOP_x251PB040.O1) XIC(ESTOP_x261PB040.O1) ,XIC(ESTOP_x271PB040.O1) XIC(ESTOP_x281PB040.O1) XIC(ESTOP_x301PB040.O1) XIC(ESTOP_x311PB040.O1) XIC(ESTOP_x321PB040.O1) XIC(ESTOP_x331PB040.O1) ,XIC(ESTOP_x480PB550.O1) XIC(ESTOP_x533PB470.O1) XIC(ESTOP_x519LS470.O1) XIC(ESTOP_x311PB130.O1) ]NOP();
					N: JSR(A01_OS1_EStop,0);
					N: JSR(A02_OS2_EStop,0);
					N: JSR(A03_OS3_EStop,0);
					N: JSR(A04_OS4_EStop,0);
					N: JSR(A05_OS5_EStop,0);
					N: JSR(A06_OS6_EStop,0);
					N: JSR(A08_OS8_EStop,0);
					N: JSR(A09_OS9_EStop,0);
					N: JSR(A11_OS11_EStop,0);
					N: JSR(A13_OS13_EStop,0);
					N: JSR(A14_OS14_EStop,0);
					N: JSR(A15_OS15_EStop,0);
					N: JSR(A16_OS16_EStop,0);
					N: JSR(B00_DPD_Estop,0);
					N: JSR(B01_H1_EStop,0);
					N: JSR(B02_G1_EStop,0);
					N: JSR(C00_OS14_Shear_EStop,0);
			END_ROUTINE

			ROUTINE A01_OS1_EStop (Description := "OS1 Estops")
					RC: "****************************************************************************************************************$N"
					    "OS1  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS1_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS1_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS1$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x201PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x201PB040a,x201PB040b,OS1:1:I.CombinedInputStatus,OS1_EstopRstCmd) ,XIC(ESTOP_x201PB040.O1) NOP() ,XIC(ESTOP_x201PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x201PB040.O1)OTE(OS1_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x201PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x201PB040.FP) ,XIC(ESTOP_x201PB040_Flt) XIO(OS1_FltRstCmd) ]XIC(OS1:1:I.RunMode)XIO(OS1:1:I.ConnectionFaulted)OTE(ESTOP_x201PB040_Flt);
			END_ROUTINE

			ROUTINE A02_OS2_EStop (Description := "OS2 Estops")
					RC: "****************************************************************************************************************$N"
					    "OS2  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS2_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS2_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS2$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x211PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x211PB040a,x211PB040b,OS2:1:I.CombinedInputStatus,OS2_EstopRstCmd) ,XIC(ESTOP_x211PB040.O1) NOP() ,XIC(ESTOP_x211PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x211PB040.O1)OTE(OS2_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x211PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x211PB040.FP) ,XIC(ESTOP_x211PB040_Flt) XIO(OS2_FltRstCmd) ]XIC(OS2:1:I.RunMode)XIO(OS2:1:I.ConnectionFaulted)OTE(ESTOP_x211PB040_Flt);
			END_ROUTINE

			ROUTINE A03_OS3_EStop (Description := "OS3 Estops")
					RC: "****************************************************************************************************************$N"
					    "OS3  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS3_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS3_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS3$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x221PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x221PB040a,x221PB040b,OS3:1:I.CombinedInputStatus,OS3_EstopRstCmd) ,XIC(ESTOP_x221PB040.O1) NOP() ,XIC(ESTOP_x221PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x221PB040.O1)OTE(OS3_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x221PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x221PB040.FP) ,XIC(ESTOP_x221PB040_Flt) XIO(OS3_FltRstCmd) ]XIC(OS3:1:I.RunMode)XIO(OS3:1:I.ConnectionFaulted)OTE(ESTOP_x221PB040_Flt);
			END_ROUTINE

			ROUTINE A04_OS4_EStop (Description := "OS4N/S Estops")
					RC: "****************************************************************************************************************$N"
					    "OS4N/S  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS4_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS4_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS4N$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x231PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x231PB040a,x231PB040b,OS4N:1:I.CombinedInputStatus,OS4_EstopRstCmd) ,XIC(ESTOP_x231PB040.O1) NOP() ,XIC(ESTOP_x231PB040.FP) NOP() ];
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS4S$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x241PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x241PB040a,x241PB040b,OS4S:1:I.CombinedInputStatus,OS4_EstopRstCmd) ,XIC(ESTOP_x241PB040.O1) NOP() ,XIC(ESTOP_x241PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x231PB040.O1)XIC(ESTOP_x241PB040.O1)OTE(OS4_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x231PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x231PB040.FP) ,XIC(ESTOP_x231PB040_Flt) XIO(OS4_FltRstCmd) ]XIC(OS4N:1:I.RunMode)XIO(OS4N:1:I.ConnectionFaulted)OTE(ESTOP_x231PB040_Flt);
					RC: "---------------------------------x241PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x241PB040.FP) ,XIC(ESTOP_x241PB040_Flt) XIO(OS4_FltRstCmd) ]XIC(OS4S:1:I.RunMode)XIO(OS4S:1:I.ConnectionFaulted)OTE(ESTOP_x241PB040_Flt);
			END_ROUTINE

			ROUTINE A05_OS5_EStop (Description := "OS5 Estops")
					RC: "****************************************************************************************************************$N"
					    "OS5  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS5_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS5_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS5$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x251PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x251PB040a,x251PB040b,OS5:1:I.CombinedInputStatus,OS5_EstopRstCmd) ,XIC(ESTOP_x251PB040.O1) NOP() ,XIC(ESTOP_x251PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x251PB040.O1)OTE(OS5_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x251PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x251PB040.FP) ,XIC(ESTOP_x251PB040_Flt) XIO(OS5_FltRstCmd) ]XIC(OS5:1:I.RunMode)XIO(OS5:1:I.ConnectionFaulted)OTE(ESTOP_x251PB040_Flt);
			END_ROUTINE

			ROUTINE A06_OS6_EStop (Description := "OS6 Estops")
					RC: "****************************************************************************************************************$N"
					    "OS6  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS6_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS6_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS6$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x261PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x261PB040a,x261PB040b,OS6:1:I.CombinedInputStatus,OS6_EstopRstCmd) ,XIC(ESTOP_x261PB040.O1) NOP() ,XIC(ESTOP_x261PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x261PB040.O1)OTE(OS6_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x261PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x261PB040.FP) ,XIC(ESTOP_x261PB040_Flt) XIO(OS6_FltRstCmd) ]XIC(OS6:1:I.RunMode)XIO(OS6:1:I.ConnectionFaulted)OTE(ESTOP_x261PB040_Flt);
			END_ROUTINE

			ROUTINE A08_OS8_EStop (Description := "OS8 Estops")
					RC: "****************************************************************************************************************$N"
					    "OS8  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS8_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS8_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS8$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x271PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x271PB040a,x271PB040b,OS8:1:I.CombinedInputStatus,OS8_EstopRstCmd) ,XIC(ESTOP_x271PB040.O1) NOP() ,XIC(ESTOP_x271PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x271PB040.O1)OTE(OS8_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x271PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x271PB040.FP) ,XIC(ESTOP_x271PB040_Flt) XIO(OS8_FltRstCmd) ]XIC(OS8:1:I.RunMode)XIO(OS8:1:I.ConnectionFaulted)OTE(ESTOP_x271PB040_Flt);
			END_ROUTINE

			ROUTINE A09_OS9_EStop (Description := "OS9 EStops")
					RC: "****************************************************************************************************************$N"
					    "OS9  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS9_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS9_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS9$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x281PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x281PB040a,x281PB040b,OS9:1:I.CombinedInputStatus,OS9_EstopRstCmd) ,XIC(ESTOP_x281PB040.O1) NOP() ,XIC(ESTOP_x281PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x281PB040.O1)OTE(OS9_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x281PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x281PB040.FP) ,XIC(ESTOP_x281PB040_Flt) XIO(OS9_FltRstCmd) ]XIC(OS9:1:I.RunMode)XIO(OS9:1:I.ConnectionFaulted)OTE(ESTOP_x281PB040_Flt);
			END_ROUTINE

			ROUTINE A11_OS11_EStop (Description := "OS11 Estops")
					RC: "****************************************************************************************************************$N"
					    "OS11  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS11_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS11_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS11$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x291PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x291PB040a,x291PB040b,OS11:1:I.CombinedInputStatus,OS11_EstopRstCmd) ,XIC(ESTOP_x291PB040.O1) NOP() ,XIC(ESTOP_x291PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x291PB040.O1)OTE(OS11_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x291PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x291PB040.FP) ,XIC(ESTOP_x291PB040_Flt) XIO(OS11_FltRstCmd) ]XIC(OS11:1:I.RunMode)XIO(OS11:1:I.ConnectionFaulted)OTE(ESTOP_x291PB040_Flt);
			END_ROUTINE

			ROUTINE A13_OS13_EStop (Description := "OS13 EStops")
					RC: "****************************************************************************************************************$N"
					    "OS13  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS13_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS13_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS13$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x301PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x301PB040a,x301PB040b,OS13:1:I.CombinedInputStatus,OS13_EstopRstCmd) ,XIC(ESTOP_x301PB040.O1) NOP() ,XIC(ESTOP_x301PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x301PB040.O1)OTE(OS13_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x301PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x301PB040.FP) ,XIC(ESTOP_x301PB040_Flt) XIO(OS13_FltRstCmd) ]XIC(OS13:1:I.RunMode)XIO(OS13:1:I.ConnectionFaulted)OTE(ESTOP_x301PB040_Flt);
			END_ROUTINE

			ROUTINE A14_OS14_EStop (Description := "OS14 EStop")
					RC: "****************************************************************************************************************$N"
					    "OS14  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS14_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS14_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS14$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x311PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x311PB040a,x311PB040b,OS14:1:I.CombinedInputStatus,OS14_EstopRstCmd) ,XIC(ESTOP_x311PB040.O1) NOP() ,XIC(ESTOP_x311PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x311PB040.O1)OTE(OS14_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x311PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x311PB040.FP) ,XIC(ESTOP_x311PB040_Flt) XIO(OS14_FltRstCmd) ]XIC(OS14:1:I.RunMode)XIO(OS14:1:I.ConnectionFaulted)OTE(ESTOP_x311PB040_Flt);
			END_ROUTINE

			ROUTINE A15_OS15_EStop (Description := "OS15 EStops")
					RC: "****************************************************************************************************************$N"
					    "OS15  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS15_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS15_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS15$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x321PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x321PB040a,x321PB040b,OS15:1:I.CombinedInputStatus,OS15_EstopRstCmd) ,XIC(ESTOP_x321PB040.O1) NOP() ,XIC(ESTOP_x321PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x321PB040.O1)OTE(OS15_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x321PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x321PB040.FP) ,XIC(ESTOP_x321PB040_Flt) XIO(OS15_FltRstCmd) ]XIC(OS15:1:I.RunMode)XIO(OS15:1:I.ConnectionFaulted)OTE(ESTOP_x321PB040_Flt);
			END_ROUTINE

			ROUTINE A16_OS16_EStop (Description := "OS16 EStops")
					RC: "****************************************************************************************************************$N"
					    "OS16  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(OS16_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(OS16_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS16$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x331PB040,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x331PB040a,x331PB040b,OS16:1:I.CombinedInputStatus,OS16_EstopRstCmd) ,XIC(ESTOP_x331PB040.O1) NOP() ,XIC(ESTOP_x331PB040.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x331PB040.O1)OTE(OS16_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x331PB040 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x331PB040.FP) ,XIC(ESTOP_x331PB040_Flt) XIO(OS16_FltRstCmd) ]XIC(OS16:1:I.RunMode)XIO(OS16:1:I.ConnectionFaulted)OTE(ESTOP_x331PB040_Flt);
			END_ROUTINE

			ROUTINE B00_DPD_Estop (Description := "DPD IO Panel EStop")
					RC: "****************************************************************************************************************$N"
					    "DPD  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(DPD_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(DPD_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "DPD$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x480PB470,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x480PB470a,x480PB470b,DPD:15:I.CombinedInputStatus,DPD_EstopRstCmd) ,XIC(ESTOP_x480PB470.O1) NOP() ,XIC(ESTOP_x480PB470.FP) NOP() ];
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "DPD (In Pit)$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x480PB550,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x480PB550a,x480PB550b,DPD:15:I.CombinedInputStatus,DPD_EstopRstCmd) ,XIC(ESTOP_x480PB550.O1) NOP() ,XIC(ESTOP_x480PB550.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x480PB470.O1)XIC(ESTOP_x480PB550.O1)OTE(DPD_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x480PB470 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x480PB470.FP) ,XIC(ESTOP_x480PB470_Flt) XIO(DPD_FltRstCmd) ]XIC(DPD:15:I.RunMode)XIO(DPD:15:I.ConnectionFaulted)OTE(ESTOP_x480PB470_Flt);
					RC: "---------------------------------x480PB550 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x480PB550.FP) ,XIC(ESTOP_x480PB550_Flt) XIO(DPD_FltRstCmd) ]XIC(DPD:15:I.RunMode)XIO(DPD:15:I.ConnectionFaulted)OTE(ESTOP_x480PB550_Flt);
			END_ROUTINE

			ROUTINE B01_H1_EStop (Description := "H1 IO Panel Estop")
					RC: "****************************************************************************************************************$N"
					    "H1  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(H1_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(H1_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "H1$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x533PB470,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x533PB470a,x533PB470b,H1:6:I.CombinedInputStatus,H1_EstopRstCmd) ,XIC(ESTOP_x533PB470.O1) NOP() ,XIC(ESTOP_x533PB470.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x533PB470.O1)OTE(H1_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x533PB470 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x533PB470.FP) ,XIC(ESTOP_x533PB470_Flt) XIO(H1_FltRstCmd) ]XIC(H1:6:I.RunMode)XIO(H1:6:I.ConnectionFaulted)OTE(ESTOP_x533PB470_Flt);
			END_ROUTINE

			ROUTINE B02_G1_EStop (Description := "G1 IO Panel Estop")
					RC: "****************************************************************************************************************$N"
					    "G1  ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(G1_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ]OTE(G1_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "G1$N"
					    "Trip Wire Limit Switch$N"
					    "(Dual Channel Used for Similiarity Reasons even though there is just One Contact)";
					N: [DCS(ESTOP_x519LS470,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x519LS470,x519LS470,G1:12:I.CombinedInputStatus,G1_EstopRstCmd) ,XIC(ESTOP_x519LS470.O1) NOP() ,XIC(ESTOP_x519LS470.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x519LS470.O1)OTE(G1_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x519LS470 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x519LS470.FP) ,XIC(ESTOP_x519LS470_Flt) XIO(H1_FltRstCmd) ]XIC(G1:12:I.RunMode)XIO(G1:12:I.ConnectionFaulted)OTE(ESTOP_x519LS470_Flt);
			END_ROUTINE

			ROUTINE C00_OS14_Shear_EStop (Description := "OS14 Shear EStop")
					RC: "****************************************************************************************************************$N"
					    "OS14  Shear ESTOP MONITORING$N"
					    "****************************************************************************************************************$N"
					    "";
					N: NOP();
					RC: "------------ Fault Reset Command ----------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ,XIC(ShearSts.FaultReset) ]OTE(OS14_Shear_FltRstCmd);
					RC: "------------ Estop Reset Command ----------------------------------";
					N: [XIC(LineSts.CircuitReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CircuitReset_Total) XIC(Line_TotalMode) ,XIC(ShearSts.CircuitReset) ]OTE(OS14_Shear_EstopRstCmd);
					RC: "***** ESTOP Input Contact Monitoring Block *****$N"
					    "OS14 Shear$N"
					    "E-Stop Button";
					N: [DCS(ESTOP_x311PB130,EMERGENCY STOP,EQUIVALENT - ACTIVE HIGH,250,MANUAL,AUTOMATIC,x311PB130a,x311PB130b,OS14:1:I.CombinedInputStatus,OS14_Shear_EstopRstCmd) ,XIC(ESTOP_x311PB130.O1) NOP() ,XIC(ESTOP_x311PB130.FP) NOP() ];
					RC: "------------- No Estops Present at this location ---------------------------------------------------------";
					N: XIC(ESTOP_x311PB130.O1)OTE(OS14_Shear_No_EStops);
					RC: "-------------------------------------------------Estop Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------x311PB130 Estop Fault -------------------------------------------";
					N: [XIC(ESTOP_x311PB130.FP) ,XIC(ESTOP_x311PB130_Flt) XIO(OS14_FltRstCmd) ]XIC(OS14:1:I.RunMode)XIO(OS14:1:I.ConnectionFaulted)OTE(ESTOP_x311PB130_Flt);
			END_ROUTINE

	END_PROGRAM

	PROGRAM JUNK (Class := Standard,
	              MAIN := "SCRATCH",
	              MODE := 0,
	              DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE JUNKY 
					RC: "-----------Point I/O Safety Module Faults ------------------------------------$N"
					    "--Monitoring Purposes Only--$N"
					    "$N"
					    "The Flt_Modules[2] DINT is moved directly to the CItect Fault Word [7].$N"
					    "$N"
					    "";
					N: [XIC(MCC1_S1_ModFlt) XIC(MCC1_S6_ModFlt) XIC(MCC2_S1_ModFlt) XIC(MCC2_S2_ModFlt) XIC(MCC3_S1_ModFlt) XIC(MCC3_S3_ModFlt) XIC(MCC3_S4_ModFlt) XIC(MCC4_S1_ModFlt) ,XIC(MCC4_S3_ModFlt) XIC(MCC4_S4_ModFlt) XIC(MCC5_S1_ModFlt) XIC(MCC5_S3_ModFlt) XIC(MCC5_S4_ModFlt) XIC(MCC5_S5_ModFlt) XIC(Flt_Modules[2].14) XIC(Flt_Modules[2].15) ,XIC(Flt_Modules[2].16) XIC(Flt_Modules[2].17) XIC(Flt_Modules[2].18) XIC(Flt_Modules[2].19) XIC(Flt_Modules[2].20) XIC(Flt_Modules[2].21) XIC(Flt_Modules[2].22) XIC(Flt_Modules[2].23) ,XIC(Flt_Modules[2].24) XIC(Flt_Modules[2].25) XIC(Flt_Modules[2].26) XIC(Flt_Modules[2].27) XIC(Flt_Modules[2].28) XIC(Flt_Modules[2].29) XIC(Flt_Modules[2].30) XIC(Flt_Modules[2].31) ]NOP();
			END_ROUTINE

			ROUTINE SCRATCH 
					N: NOP();
					N: XIC(ChgMe)OTE(FltsToCitect[2].0);
					N: XIC(ChgMe)OTE(FltsToCitect[2].1);
					N: XIC(ChgMe)OTE(FltsToCitect[2].2);
					N: XIC(ChgMe)OTE(FltsToCitect[2].3);
					N: XIC(ChgMe)OTE(FltsToCitect[2].4);
					N: XIC(ChgMe)OTE(FltsToCitect[2].5);
					N: XIC(ChgMe)OTE(FltsToCitect[2].6);
					N: XIC(ChgMe)OTE(FltsToCitect[2].7);
					N: XIC(ChgMe)OTE(FltsToCitect[2].8);
					N: XIC(ChgMe)OTE(FltsToCitect[2].9);
					N: XIC(ChgMe)OTE(FltsToCitect[2].10);
					N: XIC(ChgMe)OTE(FltsToCitect[2].11);
					N: XIC(ChgMe)OTE(FltsToCitect[2].12);
					N: XIC(ChgMe)OTE(FltsToCitect[2].13);
					N: XIC(ChgMe)OTE(FltsToCitect[2].14);
					N: XIC(ChgMe)OTE(FltsToCitect[2].15);
					N: XIC(ChgMe)OTE(FltsToCitect[2].16);
					N: XIC(ChgMe)OTE(FltsToCitect[2].17);
					N: XIC(ChgMe)OTE(FltsToCitect[2].18);
					N: XIC(ChgMe)OTE(FltsToCitect[2].19);
					N: XIC(ChgMe)OTE(FltsToCitect[2].20);
					N: XIC(ChgMe)OTE(FltsToCitect[2].21);
					N: XIC(ChgMe)OTE(FltsToCitect[2].22);
					N: XIC(ChgMe)OTE(FltsToCitect[2].23);
					N: XIC(ChgMe)OTE(FltsToCitect[2].24);
					N: XIC(ChgMe)OTE(FltsToCitect[2].25);
					N: XIC(ChgMe)OTE(FltsToCitect[2].26);
					N: XIC(ChgMe)OTE(FltsToCitect[2].27);
					N: XIC(ChgMe)OTE(FltsToCitect[2].28);
					N: XIC(ChgMe)OTE(FltsToCitect[2].29);
					N: XIC(ChgMe)OTE(FltsToCitect[2].30);
					N: XIC(ChgMe)OTE(FltsToCitect[2].31);
			END_ROUTINE

	END_PROGRAM

	PROGRAM SafeOff (Class := Safety,
	                 MAIN := "A00_Main",
	                 MODE := 0,
	                 DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE A00_Main 
					N: NOP();
					N: AFI()XIC(SafeOff_y613CR460.O1)XIC(SafeOff_y613CR630.O1)XIC(SafeOff_y614CR040.O1)XIC(SafeOff_y614CR210.O1)XIC(SafeOff_y172CR460.O1)NOP();
					N: AFI()[XIC(UnPR_DrvsOff) XIC(PW_DrvsOff) XIC(TK_DrvsOff) XIC(SC_DrvsOff) XIC(WTPR_DrvsOff) XIC(SGWA_DrvsOff) XIC(StPR_DrvsOff) XIC(Sr_DrvsOff) ,XIC(SrCon_DrvsOff) XIC(PrCon_DrvsOff) XIC(ScInCon_DrvsOff) XIC(SkBlwr_DrvsOff) XIC(SkBkSt_DrvsOff) ]NOP();
					N: JSR(A01_Unwind_CR,0);
					N: JSR(A02_EntryBridle_CR,0);
					N: JSR(A03_ExitBridle_CR,0);
					N: JSR(A04_Rewind_CR,0);
					N: JSR(A05_ShearDie_CR,0);
					N: JSR(B01_UnPR_SafeTrqOff,0);
					N: JSR(B02_PW_SafeTrqOff,0);
					N: JSR(B03_TK_SafeTrqOff,0);
					N: JSR(B04_SC_SafeTrqOff,0);
					N: JSR(B05_WTPR_SafeTrqOff,0);
					N: JSR(B06_SGWA_SafeTrqOff,0);
					N: JSR(B07_StPR_SafeTrqOff,0);
					N: JSR(B08_Sr_SafeTrqOff,0);
					N: JSR(B09_SrCon_SafeTrqOff,0);
					N: JSR(B10_PrCon_SafeTrqOff,0);
					N: JSR(B11_ScIncCon_SafeTrqOff,0);
					N: JSR(B12_SkBlwr_SafeTrqOff,0);
					N: JSR(B13_SkBkSt_SafeTrqOff,0);
			END_ROUTINE

			ROUTINE A01_Unwind_CR (Description := "Unwind $NMain Contactor and Drive Enable")
					RC: "***************************************************************************$N"
					    "Unwind Main Contactor and Drive Enable$N"
					    "****************************************************************************$N"
					    "Controls the Following:$N"
					    "Main Contactor$N"
					    "Drive Enable$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(UNW_SafeOffFltRst);
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(UNW_SafeOffEn);
					RC: "***************************************************************************$N"
					    "Unwind Op Side$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y613CR460,POSITIVE,250,UNW_SafeOffEn,x613CR460,x613CR460,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,UNW_SafeOffFltRst) ,XIC(SafeOff_y613CR460.O1) OTE(y613CR460) ];
					RC: "-------- Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y613CR510,POSITIVE,250,UNW_SafeOffEn,x613CR510,x613CR510,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,UNW_SafeOffFltRst) ,XIC(SafeOff_y613CR510.O1) OTE(y613CR510) ];
					RC: "***************************************************************************$N"
					    "Unwind Drive Side$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y613CR550,POSITIVE,250,UNW_SafeOffEn,x613CR550,x613CR550,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,UNW_SafeOffFltRst) ,XIC(SafeOff_y613CR550.O1) OTE(y613CR550) ];
					RC: "--------Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y613CR590,POSITIVE,250,UNW_SafeOffEn,x613CR590,x613CR590,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,UNW_SafeOffFltRst) ,XIC(SafeOff_y613CR590.O1) OTE(y613CR590) ];
					RC: "------------- Drives Off ---------------------------------------------------------";
					N: XIO(SafeOff_y613CR460.O1)XIO(SafeOff_y613CR510.O1)XIO(SafeOff_y613CR550.O1)XIO(SafeOff_y613CR590.O1)OTE(UNW_DrvsOff);
					RC: "------------Safe Off Enable Faults------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y613CR460 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR460.FP) ,XIC(SafeOff_y613CR460_Flt) XIO(UNW_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR460_Flt);
					RC: "---------------------------------y613CR510 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR510.FP) ,XIC(SafeOff_y613CR510_Flt) XIO(UNW_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR510_Flt);
					RC: "---------------------------------y613CR550 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR550.FP) ,XIC(SafeOff_y613CR550_Flt) XIO(UNW_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR550_Flt);
					RC: "---------------------------------y613CR590 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR590.FP) ,XIC(SafeOff_y613CR590_Flt) XIO(UNW_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR590_Flt);
			END_ROUTINE

			ROUTINE A02_EntryBridle_CR (Description := "Entry Bridle$NMain Contactor and Drive Enable")
					RC: "***************************************************************************$N"
					    "Entry Bridle Main Contactor and Drive Enable$N"
					    "****************************************************************************$N"
					    "Controls the Following:$N"
					    "Main Contactor$N"
					    "Drive Enable$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(EnBridle_SafeOffFltRst);
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(EnBridle_SafeOffEn);
					RC: "***************************************************************************$N"
					    "#1 Entry Bridle Roll 2$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y613CR630,POSITIVE,250,EnBridle_SafeOffEn,x613CR630,x613CR630,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,EnBridle_SafeOffFltRst) ,XIC(SafeOff_y613CR630.O1) OTE(y613CR630) ];
					RC: "-------- Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y613CR670,POSITIVE,250,EnBridle_SafeOffEn,x613CR670,x613CR670,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,EnBridle_SafeOffFltRst) ,XIC(SafeOff_y613CR670.O1) OTE(y613CR670) ];
					RC: "***************************************************************************$N"
					    "#2 Entry Bridle Roll 3$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y613CR710,POSITIVE,250,EnBridle_SafeOffEn,x613CR710,x613CR710,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,EnBridle_SafeOffFltRst) ,XIC(SafeOff_y613CR710.O1) OTE(y613CR710) ];
					RC: "--------Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y613CR750,POSITIVE,250,EnBridle_SafeOffEn,x613CR750,x613CR750,CHPLC:1:I.CombinedInputStatus,CHPLC:4:I.CombinedOutputStatus,EnBridle_SafeOffFltRst) ,XIC(SafeOff_y613CR750.O1) OTE(y613CR750) ];
					RC: "------------- Drives Off ---------------------------------------------------------";
					N: XIO(SafeOff_y613CR630.O1)XIO(SafeOff_y613CR670.O1)XIO(SafeOff_y613CR710.O1)XIO(SafeOff_y613CR750.O1)OTE(EnBridle_DrvsOff);
					RC: "------------Safe Off Enable Faults------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y613CR630 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR630.FP) ,XIC(SafeOff_y613CR630_Flt) XIO(EnBridle_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR630_Flt);
					RC: "---------------------------------y613CR670 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR670.FP) ,XIC(SafeOff_y613CR670_Flt) XIO(EnBridle_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR670_Flt);
					RC: "---------------------------------y613CR710 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR710.FP) ,XIC(SafeOff_y613CR710_Flt) XIO(EnBridle_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR710_Flt);
					RC: "---------------------------------y613CR750 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y613CR750.FP) ,XIC(SafeOff_y613CR750_Flt) XIO(EnBridle_SafeOffFltRst) ]XIC(CHPLC:1:I.RunMode)XIC(CHPLC:4:I.RunMode)XIO(CHPLC:1:I.ConnectionFaulted)XIO(CHPLC:4:I.ConnectionFaulted)OTE(SafeOff_y613CR750_Flt);
			END_ROUTINE

			ROUTINE A03_ExitBridle_CR (Description := "Exit Bridle$NMain Contactor and Drive Enable")
					RC: "***************************************************************************$N"
					    "Exit Bridle Main Contactor and Drive Enable$N"
					    "****************************************************************************$N"
					    "Controls the Following:$N"
					    "Main Contactor$N"
					    "Drive Enable$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(ExBridle_SafeOffFltRst);
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(ExBridle_SafeOffEn);
					RC: "***************************************************************************$N"
					    "#1 Exit Bridle Roll 6$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y614CR040,POSITIVE,250,ExBridle_SafeOffEn,x614CR040,x614CR040,CHPLC:2:I.CombinedInputStatus,CHPLC:5:I.CombinedOutputStatus,ExBridle_SafeOffFltRst) ,XIC(SafeOff_y614CR040.O1) OTE(y614CR040) ];
					RC: "-------- Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y614CR090,POSITIVE,250,ExBridle_SafeOffEn,x614CR090,x614CR090,CHPLC:2:I.CombinedInputStatus,CHPLC:5:I.CombinedOutputStatus,ExBridle_SafeOffFltRst) ,XIC(SafeOff_y614CR090.O1) OTE(y614CR090) ];
					RC: "***************************************************************************$N"
					    "#2 Exit Bridle Roll 7$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y614CR130,POSITIVE,250,ExBridle_SafeOffEn,x614CR130,x614CR130,CHPLC:2:I.CombinedInputStatus,CHPLC:5:I.CombinedOutputStatus,ExBridle_SafeOffFltRst) ,XIC(SafeOff_y614CR130.O1) OTE(y614CR130) ];
					RC: "--------Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y614CR170,POSITIVE,250,ExBridle_SafeOffEn,x614CR170,x614CR170,CHPLC:2:I.CombinedInputStatus,CHPLC:5:I.CombinedOutputStatus,ExBridle_SafeOffFltRst) ,XIC(SafeOff_y614CR170.O1) OTE(y614CR170) ];
					RC: "------------- Drives Off ---------------------------------------------------------";
					N: XIO(SafeOff_y614CR040.O1)XIO(SafeOff_y614CR090.O1)XIO(SafeOff_y614CR130.O1)XIO(SafeOff_y614CR170.O1)OTE(ExBridle_DrvsOff);
					RC: "------------Safe Off Enable Faults------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y614CR040 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y614CR040.FP) ,XIC(SafeOff_y614CR040_Flt) XIO(ExBridle_SafeOffFltRst) ]XIC(CHPLC:2:I.RunMode)XIC(CHPLC:5:I.RunMode)XIO(CHPLC:2:I.ConnectionFaulted)XIO(CHPLC:5:I.ConnectionFaulted)OTE(SafeOff_y614CR040_Flt);
					RC: "---------------------------------y614CR090 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y614CR090.FP) ,XIC(SafeOff_y614CR090_Flt) XIO(ExBridle_SafeOffFltRst) ]XIC(CHPLC:2:I.RunMode)XIC(CHPLC:5:I.RunMode)XIO(CHPLC:2:I.ConnectionFaulted)XIO(CHPLC:5:I.ConnectionFaulted)OTE(SafeOff_y614CR090_Flt);
					RC: "---------------------------------y614CR130 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y614CR130.FP) ,XIC(SafeOff_y614CR130_Flt) XIO(ExBridle_SafeOffFltRst) ]XIC(CHPLC:2:I.RunMode)XIC(CHPLC:5:I.RunMode)XIO(CHPLC:2:I.ConnectionFaulted)XIO(CHPLC:5:I.ConnectionFaulted)OTE(SafeOff_y614CR130_Flt);
					RC: "---------------------------------y614CR170 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y614CR170.FP) ,XIC(SafeOff_y614CR170_Flt) XIO(ExBridle_SafeOffFltRst) ]XIC(CHPLC:2:I.RunMode)XIC(CHPLC:5:I.RunMode)XIO(CHPLC:2:I.ConnectionFaulted)XIO(CHPLC:5:I.ConnectionFaulted)OTE(SafeOff_y614CR170_Flt);
			END_ROUTINE

			ROUTINE A04_Rewind_CR (Description := "Rewind$NMain Contactor and Drive Enable")
					RC: "***************************************************************************$N"
					    "Rewind Main Contactor and Drive Enable$N"
					    "****************************************************************************$N"
					    "Controls the Following:$N"
					    "Main Contactor$N"
					    "Drive Enable$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(REW_SafeOffFltRst);
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(REW_SafeOffEn);
					RC: "***************************************************************************$N"
					    "Rewind$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y614CR210,POSITIVE,250,REW_SafeOffEn,x614CR210,x614CR210,CHPLC:2:I.CombinedInputStatus,CHPLC:5:I.CombinedOutputStatus,REW_SafeOffFltRst) ,XIC(SafeOff_y614CR210.O1) OTE(y614CR210) ];
					RC: "-------- Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y614CR250,POSITIVE,250,REW_SafeOffEn,x614CR250,x614CR250,CHPLC:2:I.CombinedInputStatus,CHPLC:5:I.CombinedOutputStatus,REW_SafeOffFltRst) ,XIC(SafeOff_y614CR250.O1) OTE(y614CR250) ];
					RC: "------------- Drives Off ---------------------------------------------------------";
					N: XIO(SafeOff_y614CR210.O1)XIO(SafeOff_y614CR250.O1)OTE(Rew_DrvsOff);
					RC: "------------Safe Off Enable Faults------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y614CR210 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y614CR210.FP) ,XIC(SafeOff_y614CR210_Flt) XIO(REW_SafeOffFltRst) ]XIC(CHPLC:2:I.RunMode)XIC(CHPLC:5:I.RunMode)XIO(CHPLC:2:I.ConnectionFaulted)XIO(CHPLC:5:I.ConnectionFaulted)OTE(SafeOff_y614CR210_Flt);
					RC: "---------------------------------y614CR250 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y614CR250.FP) ,XIC(SafeOff_y614CR250_Flt) XIO(REW_SafeOffFltRst) ]XIC(CHPLC:2:I.RunMode)XIC(CHPLC:5:I.RunMode)XIO(CHPLC:2:I.ConnectionFaulted)XIO(CHPLC:5:I.ConnectionFaulted)OTE(SafeOff_y614CR250_Flt);
			END_ROUTINE

			ROUTINE A05_ShearDie_CR (Description := "Shear Die Accelerator$NMain Contactor and Drive Enable")
					RC: "***************************************************************************$N"
					    "Shear Die Accelerator Main Contactor and Drive Enable$N"
					    "****************************************************************************$N"
					    "Controls the Following:$N"
					    "Main Contactor$N"
					    "Drive Enable$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ,XIC(ShearSts.FaultReset) ]OTE(SrDie_SafeOffFltRst);
					RC: "The Shear Die Accelerator has an indivual E-Stop to that System. $N"
					    "If the Line OR the Shear Estop is pressed the Coast Stop Timer will begin timing and $N"
					    "remove the Enable from the drive.";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]XIC(ShearSts.CoastStop)OTE(SrDie_SafeOffEn);
					RC: "***************************************************************************$N"
					    "Shear Die Accelerator$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------Main Contactor Relay -------------------------";
					N: [CROUT(SafeOff_y172CR460,POSITIVE,250,SrDie_SafeOffEn,x172CR460,x172CR460,SDPLC:1:I.CombinedInputStatus,SDPLC:2:I.CombinedOutputStatus,SrDie_SafeOffFltRst) ,XIC(SafeOff_y172CR460.O1) OTE(y172CR460) ];
					RC: "-------- Drive Enable Relay -------------------------";
					N: [CROUT(SafeOff_y172CR510,POSITIVE,250,SrDie_SafeOffEn,x172CR510,x172CR510,SDPLC:1:I.CombinedInputStatus,SDPLC:2:I.CombinedOutputStatus,SrDie_SafeOffFltRst) ,XIC(SafeOff_y172CR510.O1) OTE(y172CR510) ];
					N: XIC(y172CR510)OTE(SDPLC:2:O.Pt03Data);
					RC: "------------- Drives Off ---------------------------------------------------------";
					N: XIO(SafeOff_y172CR460.O1)XIO(SafeOff_y172CR510.O1)OTE(SrDie_DrvsOff);
					RC: "------------Safe Off Enable Faults------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y172CR460 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y172CR460.FP) ,XIC(SafeOff_y172CR460_Flt) XIO(SrDie_SafeOffFltRst) ]XIC(SDPLC:1:I.RunMode)XIC(SDPLC:2:I.RunMode)XIO(SDPLC:1:I.ConnectionFaulted)XIO(SDPLC:2:I.ConnectionFaulted)OTE(SafeOff_y172CR460_Flt);
					RC: "---------------------------------y172CR510 Safe Off Fault -------------------------------------------";
					N: [XIC(SafeOff_y172CR510.FP) ,XIC(SafeOff_y172CR510_Flt) XIO(SrDie_SafeOffFltRst) ]XIC(SDPLC:1:I.RunMode)XIC(SDPLC:2:I.RunMode)XIO(SDPLC:1:I.ConnectionFaulted)XIO(SDPLC:2:I.ConnectionFaulted)OTE(SafeOff_y172CR510_Flt);
			END_ROUTINE

			ROUTINE B01_UnPR_SafeTrqOff (Description := "Unwind Pinch Roll$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Unwind Pinch Roll Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow the IGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(UnPR_SafeTrqEn);
					N: XIC(UnPR_SafeTrqEn)OTE(y725MTR080SE)OTE(y725MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y725MTR080SE)XIO(y725MTR080SP)OTE(UnPR_DrvsOff);
			END_ROUTINE

			ROUTINE B02_PW_SafeTrqOff (Description := "Paper Winder$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Paper Winder Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(PW_SafeTrqEn);
					N: XIC(PW_SafeTrqEn)OTE(y727MTR080SE)OTE(y727MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y727MTR080SE)XIO(y727MTR080SP)OTE(PW_DrvsOff);
			END_ROUTINE

			ROUTINE B03_TK_SafeTrqOff (Description := "Trimmer Knife, Width Adjust$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Trimmer Knives/Width Adjust Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(TK_SafeTrqEn);
					N: XIC(TK_SafeTrqEn)[OTE(y755MTR080SE) OTE(y755MTR080SP) ,OTE(y751MTR080SE) OTE(y751MTR080SP) ];
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y755MTR080SE)XIO(y755MTR080SP)XIO(y751MTR080SE)XIO(y751MTR080SP)OTE(TK_DrvsOff);
			END_ROUTINE

			ROUTINE B04_SC_SafeTrqOff (Description := "Scrap Chopper$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Scrap Chopper/ Width Adjust Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(SC_SafeTrqEn);
					N: XIC(SC_SafeTrqEn)[OTE(y762MTR080SE) OTE(y762MTR080SP) ,OTE(x759MTR080SE) OTE(x759MTR080SP) ];
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y762MTR080SE)XIO(y762MTR080SP)XIO(x759MTR080SE)XIO(x759MTR080SP)OTE(SC_DrvsOff);
			END_ROUTINE

			ROUTINE B05_WTPR_SafeTrqOff (Description := "Wash Tank Pinch Rolls$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Wash Tank Pinch Rolls (1-4) Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(WTPR_SafeTrqEn);
					N: XIC(WTPR_SafeTrqEn)[OTE(y731MTR080SE) OTE(y731MTR080SP) ,OTE(y733MTR080SE) OTE(y733MTR080SP) ,OTE(y735MTR080SE) OTE(y735MTR080SP) ,OTE(y729MTR080SE) OTE(y729MTR080SP) ];
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y731MTR080SE)XIO(y731MTR080SP)XIO(y733MTR080SE)XIO(y733MTR080SP)XIO(y735MTR080SE)XIO(y735MTR080SP)XIO(y729MTR080SE)XIO(y729MTR080SP)OTE(WTPR_DrvsOff);
			END_ROUTINE

			ROUTINE B06_SGWA_SafeTrqOff (Description := "Side Guide Width Adjust$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Side Guide Width Adjust Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(SGWA_SafeTrqEn);
					N: XIC(SGWA_SafeTrqEn)OTE(y754MTR080SE)OTE(y754MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y754MTR080SE)XIO(y754MTR080SP)OTE(SGWA_DrvsOff);
			END_ROUTINE

			ROUTINE B07_StPR_SafeTrqOff (Description := "Sheeter Pinch Roll$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Sheeter Pinch Roll Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(StPR_SafeTrqEn);
					N: XIC(StPR_SafeTrqEn)OTE(y782MTR080SE)OTE(y782MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y782MTR080SE)XIO(y782MTR080SP)OTE(StPR_DrvsOff);
			END_ROUTINE

			ROUTINE B08_Sr_SafeTrqOff (Description := "Sheear Pinch Roll / $NBack Up Metering$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Shear Pinch Roll/ Shear Metering Back Up Roll Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(Sr_SafeTrqEn);
					N: XIC(Sr_SafeTrqEn)[OTE(y779MTR080SE) OTE(y779MTR080SP) ,OTE(y776MTR080SE) OTE(y776MTR080SP) ];
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y779MTR080SE)XIO(y779MTR080SP)XIO(y776MTR080SE)XIO(y776MTR080SP)OTE(Sr_DrvsOff);
			END_ROUTINE

			ROUTINE B09_SrCon_SafeTrqOff (Description := "Shear Conveyor$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Shear Conveyor Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(SrCon_SafeTrqEn);
					N: XIC(SrCon_SafeTrqEn)OTE(y812MTR080SE)OTE(y812MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y812MTR080SE)XIO(y812MTR080SP)OTE(SrCon_DrvsOff);
			END_ROUTINE

			ROUTINE B10_PrCon_SafeTrqOff (Description := "Product Conveyors (1-3)$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Product Conveyors (1-3) Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(PrCon_SafeTrqEn);
					N: XIC(PrCon_SafeTrqEn)[OTE(y808MTR080SE) OTE(y808MTR080SP) ,OTE(y810MTR080SE) OTE(y810MTR080SP) ,OTE(y806MTR080SE) OTE(y806MTR080SP) ];
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y808MTR080SE)XIO(y808MTR080SP)XIO(y810MTR080SE)XIO(y810MTR080SP)XIO(y806MTR080SE)XIO(y806MTR080SP)OTE(PrCon_DrvsOff);
			END_ROUTINE

			ROUTINE B11_ScIncCon_SafeTrqOff (Description := "Scrap Incline Conveyor$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Scrap Incline Conveyor Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(ScInCon_SafeTrqEn);
					N: XIC(ScInCon_SafeTrqEn)OTE(y800MTR080SE)OTE(y800MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y800MTR080SE)XIO(y800MTR080SP)OTE(ScInCon_DrvsOff);
			END_ROUTINE

			ROUTINE B12_SkBlwr_SafeTrqOff (Description := "Stacker Blower$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Paper Winder Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(SkBlwr_SafeTrqEn);
					N: XIC(SkBlwr_SafeTrqEn)OTE(y785MTR080SE)OTE(y785MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y785MTR080SE)XIO(y785MTR080SP)OTE(SkBlwr_DrvsOff);
			END_ROUTINE

			ROUTINE B13_SkBkSt_SafeTrqOff (Description := "Stacker Back Stop$NSafety Power Enable$N(Safe Trq Off and Drv Enable)")
					RC: "***************************************************************************$N"
					    "Stacker Back Stop Safe Torque Off and Drive Enable$N"
					    "****************************************************************************$N"
					    "";
					N: NOP();
					RC: "-------- Safe Trq Off Enable -----------------------------------------$N"
					    "When this bit is true, the Safe-Trq Off will be enabled and allow theIGBT$'s to accept gate command.$N"
					    "$N"
					    "When false this will disable the IGBT$'s and control off the drive. (Coast)";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(SkBkSt_SafeTrqEn);
					N: XIC(SkBkSt_SafeTrqEn)OTE(y804MTR080SE)OTE(y804MTR080SP);
					RC: "------ Drives OFF -----------------------------------------------------";
					N: XIO(y804MTR080SE)XIO(y804MTR080SP)OTE(SkBkSt_DrvsOff);
			END_ROUTINE

	END_PROGRAM

	PROGRAM Safety_JUNK (Class := Safety,
	                     MAIN := "Scratch",
	                     MODE := 0,
	                     DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE Scratch 
					N: NOP();
			END_ROUTINE

	END_PROGRAM

	PROGRAM Solenoid_Pwr (Description := "Control fo the Field Power $Nto the Solenoids",
	                      Class := Safety,
	                      MAIN := "A00_Main",
	                      MODE := 0,
	                      DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE A00_Main 
					N: NOP();
					N: AFI()[XIC(y172CR550) XIC(y233CR040) XIC(y243CR040) XIC(y406CR090) XIC(y435CR050) XIC(y451CR050) ,XIC(y464CR050) XIC(y480CR050) XIC(y495CR050) XIC(y507CR090) XIC(y519CR050) XIC(y533CR050) ]NOP();
					N: JSR(A01_SDPLC_SOL,0);
					N: JSR(A02_OS4_SOL,0);
					N: JSR(A03_A1_SOL,0);
					N: JSR(A04_C1_SOL,0);
					N: JSR(A05_D1_SOL,0);
					N: JSR(A06_E1_SOL,0);
					N: JSR(A07_DPD_SOL,0);
					N: JSR(A08_VS2_SOL,0);
					N: JSR(A09_F1_SOL,0);
					N: JSR(A10_G1_SOL,0);
					N: JSR(A11_H1_SOL,0);
			END_ROUTINE

			ROUTINE A01_SDPLC_SOL (Description := "SDPLC$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "SDPLC Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T170EA130$N"
					    "$N"
					    "Controls the Following:$N"
					    "y172CR550 Relay Enables:$N"
					    "$N"
					    "1.) 173CR040   Shear Die Crank Clutch Pilot Relay$N"
					    "";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]XIC(ShearSts.CoastStop)OTE(SDPLC_SolPwrEn);
					RC: "--------Shear Die Crank Clutch Pilot Relay -------------------------";
					N: XIC(SDPLC_SolPwrEn)OTE(y172CR550);
			END_ROUTINE

			ROUTINE A02_OS4_SOL (Description := "OS4N/S$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "OS4N Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T230EA140$N"
					    "$N"
					    "Controls the Following:$N"
					    "y233CR040  Relay Enables:$N"
					    "$N"
					    "1.) 234SOL650   North Trimmer Knife Oiler Solenoid$N"
					    "";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(OS4N_SolPwrEn);
					RC: "--------North Trimmer Knife Oiler Solenoid -------------------------";
					N: XIC(OS4N_SolPwrEn)OTE(y233CR040);
					RC: "***************************************************************************$N"
					    "OS4N Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T240EA140$N"
					    "$N"
					    "Controls the Following:$N"
					    "y243CR040  Relay Enables:$N"
					    "$N"
					    "1.) 244SOL650   South Trimmer Knife Oiler Solenoid$N"
					    "";
					N: NOP();
					N: XIC(CC_Toggle.2)[XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(OS4S_SolPwrEn);
					RC: "--------South Trimmer Knife Oiler Solenoid -------------------------";
					N: XIC(OS4S_SolPwrEn)OTE(y243CR040);
			END_ROUTINE

			ROUTINE A03_A1_SOL (Description := "A1$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "A1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T400EA160$N"
					    "$N"
					    "Controls the Following:$N"
					    "y406CR050  Relay Enables:$N"
					    "$N"
					    "1.) 404SOL040A/B   Unwind Drive Side IN/OUT Solenoid$N"
					    "2.) 404SOL120A/B   Unwind Operator Side IN/OUT Solenoid$N"
					    "3.) 404SOL220A/B   Unwind Reel Tandem North Solenoid$N"
					    "4.) 404SOL300         Unwind Reel Tandem Unlock Solenoid$N"
					    "5.) 404SOL460A      Unwind Hold Down Roll Lower/Raise Solenoid$N"
					    "6.) 404SOL640A/B   Unwind Peeler Blade Extend/Retract Solenoid$N"
					    "7.) 404SOL680A/B   Unwind Peeler Blade Pivot Lower/Raise Solenoid";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(A1_SolPwrEn);
					RC: "--------Unwind Operation Solenoids -------------------------";
					N: XIC(A1_SolPwrEn)OTE(y406CR050);
					RC: "***************************************************************************$N"
					    "A1 Unwind Coil Car Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T400EA230$N"
					    "$N"
					    "Controls the Following:$N"
					    "y406CR090  Relay Enables:$N"
					    "$N"
					    "1.) 405SOL040A/B     Peeler Blade Table Up/Down Solenoid$N"
					    "2.) 405SOL460A/B     Unwind Coil Car Lower/Raise Solenoid$N"
					    "3.) 405SOL540A/B     Unwind Coil Car Traverse IN/OUT Solenoid";
					N: NOP();
					RC: "The Unwind Coil car track area is equipped with a safety system designed to protect personnel working in the area of the coil car. $N"
					    "The protection system consists of two light curtains on each side (North and South) of the coil car track. If either light curtain beam $N"
					    "is broken, the light curtain will trip the BS2RAC safety receiver which will stop coil car movement. Each light curtain will self reset$N"
					    " once its beam is clear. The “Unwind Coil Car Safety” reset pushbutton (X203PBL620) on OS1 must then be pushed, after the $N"
					    "area has been cleared, to reset the system and allow the coil car to continue movement.";
					N: NOP();
					RC: "------------ Light Curtain Reset Command ----------------------------------";
					N: XIC(UWCC_Rst_PB)OTE(A1_UnwLC_RstCmd);
					RC: "----------- Channel A/B Inputs from the Light Curtain --------------";
					N: XIC(x406LCA047)XIC(x406LCB052)OTE(A1_UnwLC_OK);
					N: [XIC(A1_UnwLC_RstCmd) ,XIC(A1_CoilCarSolPwrEn) ][XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]XIC(A1_UnwLC_OK)OTE(A1_CoilCarSolPwrEn);
					RC: "--------Unwind Coil Car Movement and Peeler Blade Solenoids -------------------------";
					N: XIC(A1_CoilCarSolPwrEn)OTE(y406CR090);
			END_ROUTINE

			ROUTINE A04_C1_SOL (Description := "C1$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "C1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T430EA140$N"
					    "$N"
					    "Controls the Following:$N"
					    "y435CR050 Relay Enables:$N"
					    "$N"
					    "1.) 434SOL040A/B   Entry Crop Shear Blade Cut/Return Solenoid$N"
					    "2.) 434SOL220A/B   Flattener Roll No.1 Open/Close  Solenoid$N"
					    "3.) 434SOL300A/B   Flattener Roll No.2 Open/Close  Solenoid$N"
					    "4.) 434SOL460A/B  Side Guide Quick Close/Open Solenoid$N"
					    "";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(C1_SolPwrEn);
					N: XIC(C1_SolPwrEn)OTE(y435CR050);
			END_ROUTINE

			ROUTINE A05_D1_SOL (Description := "D1$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "D1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T445EA130$N"
					    "$N"
					    "Controls the Following:$N"
					    "y451CR050 Relay Enables:$N"
					    "$N"
					    "1.) 449SOL040A/B   Joiner Die East/West (Heavy/ Light) Solenoid$N"
					    "2.) 449SOL120         Joiner Pinch Roll Brake Solenoid$N"
					    "3.) 449SOL220A/B   Joiner Press/Raise  Solenoid$N"
					    "4.) 449SOL300         Joiner Relief Solenoid$N"
					    "5.) 449SOL460        Wash Tank Pinch Roll 1 Open Solenoid$N"
					    "6.) 449SOL500        Wash Tank Pinch Roll 2 Open Solenoid$N"
					    "7.) 449SOL540        Wash Tank Pinch Roll 3 Open Solenoid$N"
					    "8.) 449SOL580        Wash Tank Pinch Roll 4 Open Solenoid";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(D1_SolPwrEn);
					RC: "------------- Joiner and Washtank Solenoid -------------------------------";
					N: XIC(D1_SolPwrEn)OTE(y451CR050);
			END_ROUTINE

			ROUTINE A06_E1_SOL (Description := "E1$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "E1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T460EA140$N"
					    "$N"
					    "Controls the Following:$N"
					    "y464CR050 Relay Enables:$N"
					    "$N"
					    "1.) 463SOL080         Tension Leveler 3 Roll Mode Solenoid$N"
					    "2.) 463SOL120         Tension Leveler Quick Open-Close Solenoid$N"
					    "";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(E1_SolPwrEn);
					RC: "------------- Tension Leveler Solenoids -------------------------------";
					N: XIC(E1_SolPwrEn)OTE(y464CR050);
			END_ROUTINE

			ROUTINE A07_DPD_SOL (Description := "DPD$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "E1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T475EA130$N"
					    "$N"
					    "Controls the Following:$N"
					    "y480CR050 Relay Enables:$N"
					    "$N"
					    "1.) 479SOL040         Diagraph Carriage Head Raise Solenoid$N"
					    "2.) 479SOL080A/B   Diagraph Rotate Heads Down/Up Solenoid$N"
					    "3.) 479SOL220         Marker Safety Gate Solenoid$N"
					    "4.) 479CR300           SQM Next Inspection Relay$N"
					    "5.) 479CR340           SQM Reserved Relay";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(DPD_SolPwrEn);
					RC: "------------- Diagraph Printer Solenoids/ SQM Interface Relays -------------------------------";
					N: XIC(DPD_SolPwrEn)OTE(y480CR050);
			END_ROUTINE

			ROUTINE A08_VS2_SOL (Description := "VS2$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "VS2 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T490EA130$N"
					    "$N"
					    "Controls the Following:$N"
					    "y495CR050 Relay Enables:$N"
					    "$N"
					    "1.) 493SOL040A/B   Belt Wrapper Out/In Solenoid$N"
					    "2.) 493SOL120A/B   Belt Wrapper Threading Table Lower/Raise Solenoid$N"
					    "3.) 493SOL220A/B   Exit Crop Shear Blade Cut/Return Solenoid$N"
					    "4.) 493SOL460A/B   Outboard Bearing Arm In/Out Solenoid$N"
					    "5.) 493SOL640A/B   Stretch Entry Bridle Snubber Lower/Raise Solenoid$N"
					    "6.) 493SOL720A/B    Stretch Exit Bridle Snubber Lower/Raise Solenoid";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(VS2_SolPwrEn);
					RC: "------------- Belt Wrapper/Exit Crop Shear/ Bridle Snubbers -------------------------------";
					N: XIC(VS2_SolPwrEn)OTE(y495CR050);
			END_ROUTINE

			ROUTINE A09_F1_SOL (Description := "F1$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "F1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T500EA160$N"
					    "$N"
					    "Controls the Following:$N"
					    "y507CR050  Relay Enables:$N"
					    "$N"
					    "1.) 504SOL080         Rewind Edge Control Automatic On Solenoid$N"
					    "2.) 504SOL120A/B   Rewind Edge Control  Out/In Solenoid$N"
					    "3.) 504SOL220         Belt Wrapper Locking Pin Solenoid Solenoid$N"
					    "4.) 504SOL640         Rewind Edge Control  Left Solenoid$N"
					    "5.) 504SOL680         Rewind Edge Control  Right Solenoid";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(F1_SolPwrEn);
					RC: "--------Rewind Operation Solenoids -------------------------";
					N: XIC(F1_SolPwrEn)OTE(y507CR050);
					RC: "***************************************************************************$N"
					    "F1 Unwind Coil Car Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T500EA230$N"
					    "$N"
					    "Controls the Following:$N"
					    "y507CR090  Relay Enables:$N"
					    "$N"
					    "1.) 505SOL460A/B     Rewind Coil Car Lower/Raise Solenoid$N"
					    "2.) 505SOL540A/B     Rewind Coil Car Traverse IN/OUT Solenoid";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(F1_CoilCarSolPwrEn);
					RC: "--------Rewind Coil Car Movement Solenoids -------------------------";
					N: XIC(F1_CoilCarSolPwrEn)OTE(y507CR090);
			END_ROUTINE

			ROUTINE A10_G1_SOL (Description := "G1$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "G1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T515EA140$N"
					    "$N"
					    "Controls the Following:$N"
					    "y519CR050 Relay Enables:$N"
					    "$N"
					    "1.) 518SOL040         CTL Deflector Roll Up/Down Solenoid$N"
					    "2.) 518SOL220         Shear Pinch Roll Up/Down Solenoid$N"
					    "";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ,XIC(Rodney_True) ]OTE(G1_SolPwrEn);
					RC: "------------- CTL and Shear Pinch Roll Solenoids -------------------------------";
					N: XIC(G1_SolPwrEn)OTE(y519CR050);
			END_ROUTINE

			ROUTINE A11_H1_SOL (Description := "H1$NSolenoid Power Enable$N(FPD Power Removal)")
					RC: "***************************************************************************$N"
					    "H1 Solenoid Power Enable$N"
					    "****************************************************************************$N"
					    "Drops Power to 1734-FPD$T530EA050$N"
					    "$N"
					    "Controls the Following:$N"
					    "y533CR050 Relay Enables:$N"
					    "$N"
					    "1.) 538SOL080         Stacker Air Damper Solenoid$N"
					    "$N"
					    "";
					N: NOP();
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(H1_SolPwrEn);
					RC: "------------- Stacker Air Damper Solenoids -------------------------------";
					N: XIC(H1_SolPwrEn)OTE(y533CR050);
			END_ROUTINE

	END_PROGRAM

	PROGRAM Starters (Class := Safety,
	                  MAIN := "A00_Main",
	                  MODE := 0,
	                  DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE A00_Main 
					N: NOP();
					N: AFI()[XIC(FVR_y708MTR250FC.O1) ,XIC(FVR_y708MTR250RC.O1) ][XIC(FVR_y708MTR080FC.O1) ,XIC(FVR_y708MTR080RC.O1) ][XIC(FVR_y753MTR190FC.O1) ,XIC(FVR_y753MTR190RC.O1) ]XIC(FVNR_y761MTR081RC.O1)NOP();
					N: AFI()[XIC(FVR_y702MTR191FC.O1) ,XIC(FVR_y702MTR191RC.O1) ]XIC(FVNR_y778MTR080RC.O1)[XIC(FVR_y802MTR080FC.O1) ,XIC(FVR_y802MTR080RC.O1) ][XIC(FVR_y802MTR231FC.O1) ,XIC(FVR_y802MTR231RC.O1) ][XIC(FVR_y802MTR230FC.O1) ,XIC(FVR_y802MTR230RC.O1) ]NOP();
					N: JSR(A01_UnwHold_FVR,0);
					N: JSR(A02_Flattener_FVR,0);
					N: JSR(A03_TrimPR_FVR,0);
					N: JSR(A04_TrimScCon_FVNR,0);
					N: JSR(A05_RewPR_FVR,0);
					N: JSR(A06_SrDieCrnk_FVNR,0);
					N: JSR(A07_SkSG_FVR,0);
					N: JSR(A08_SkChain_FVR,0);
					N: JSR(A09_ScHorCon_FVR,0);
			END_ROUTINE

			ROUTINE A01_UnwHold_FVR (Description := "Unwind Hold Down Roll$NFVR Starter")
					RC: "***************************************************************************$N"
					    "Unwind Hold Down Roll - FVR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(UnwHoldDwn_FVR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(UnwHoldDwn_FVR_En);
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "From Machine Processor$N"
					    "";
					N: XIC(UnwHoldDwn_FVR_En)XIC(SftyMap_Mach[0].1)OTE(UnwHoldDwn_FVR_FwdCmd);
					RC: "------------ Reverse Run Command ---------------------------------$N"
					    "From Machine Processor";
					N: XIC(UnwHoldDwn_FVR_En)XIC(SftyMap_Mach[0].2)OTE(UnwHoldDwn_FVR_RevCmd);
					RC: "***************************************************************************$N"
					    "Unwind Hold Down Roll (FVR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVR_y708MTR250FC,POSITIVE,250,UnwHoldDwn_FVR_FwdCmd,x708MTR250FF,x708MTR250FF,MCC1:1:I.CombinedInputStatus,MCC1:6:I.CombinedOutputStatus,UnwHoldDwn_FVR_FltRst) ,XIC(FVR_y708MTR250FC.O1) OTE(y708MTR250FC) ];
					RC: "------------ Reverse Run Command ---------------------------------";
					N: [CROUT(FVR_y708MTR250RC,POSITIVE,250,UnwHoldDwn_FVR_RevCmd,x708MTR250RF,x708MTR250RF,MCC1:1:I.CombinedInputStatus,MCC1:6:I.CombinedOutputStatus,UnwHoldDwn_FVR_FltRst) ,XIC(FVR_y708MTR250RC.O1) OTE(y708MTR250RC) ];
					RC: "-------------------------------------------------FVR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y708MTR250 FVR Starter Fault -------------------------------------------";
					N: [[XIC(FVR_y708MTR250FC.FP) ,XIC(FVR_y708MTR250RC.FP) ] ,XIC(FVR_y708MTR250_Flt) XIO(UnwHoldDwn_FVR_FltRst) ]XIC(MCC1:1:I.RunMode)XIO(MCC1:1:I.ConnectionFaulted)XIC(MCC1:6:I.RunMode)XIO(MCC1:6:I.ConnectionFaulted)OTE(FVR_y708MTR250_Flt);
			END_ROUTINE

			ROUTINE A02_Flattener_FVR (Description := "Flattener$NFVR Starter")
					RC: "***************************************************************************$N"
					    "Flattener - FVR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(Flattener_FVR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(Flattener_FVR_En);
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "From Machine Processor$N"
					    "";
					N: XIC(Flattener_FVR_En)XIC(SftyMap_Mach[0].3)OTE(Flattener_FVR_FwdCmd);
					RC: "------------ Reverse Run Command ---------------------------------$N"
					    "From Machine Processor";
					N: XIC(Flattener_FVR_En)XIC(SftyMap_Mach[0].4)OTE(Flattener_FVR_RevCmd);
					RC: "***************************************************************************$N"
					    "Flattener (FVR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVR_y708MTR080FC,POSITIVE,250,Flattener_FVR_FwdCmd,x708MTR080FF,x708MTR080FF,MCC1:1:I.CombinedInputStatus,MCC1:6:I.CombinedOutputStatus,Flattener_FVR_FltRst) ,XIC(FVR_y708MTR080FC.O1) OTE(y708MTR080FC) ];
					RC: "------------ Reverse Run Command ---------------------------------";
					N: [CROUT(FVR_y708MTR080RC,POSITIVE,250,Flattener_FVR_RevCmd,x708MTR080RF,x708MTR080RF,MCC1:1:I.CombinedInputStatus,MCC1:6:I.CombinedOutputStatus,Flattener_FVR_FltRst) ,XIC(FVR_y708MTR080RC.O1) OTE(y708MTR080RC) ];
					RC: "-------------------------------------------------FVR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y708MTR080 FVR Starter Fault -------------------------------------------";
					N: [[XIC(FVR_y708MTR080FC.FP) ,XIC(FVR_y708MTR080RC.FP) ] ,XIC(FVR_y708MTR080_Flt) XIO(Flattener_FVR_FltRst) ]XIC(MCC1:1:I.RunMode)XIO(MCC1:1:I.ConnectionFaulted)XIC(MCC1:6:I.RunMode)XIO(MCC1:6:I.ConnectionFaulted)OTE(FVR_y708MTR080_Flt);
			END_ROUTINE

			ROUTINE A03_TrimPR_FVR (Description := "Trimmer Pinch Roll$NFVR Starter")
					RC: "***************************************************************************$N"
					    "Trimmer Pinch Roll  Roll - FVR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(TrimPR_FVR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(TrimPR_FVR_En);
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "From Machine Processor$N"
					    "";
					N: XIC(TrimPR_FVR_En)XIC(SftyMap_Mach[0].5)OTE(TrimPR_FVR_FwdCmd);
					RC: "------------ Reverse Run Command ---------------------------------$N"
					    "From Machine Processor";
					N: XIC(TrimPR_FVR_En)XIC(SftyMap_Mach[0].6)OTE(TrimPR_FVR_RevCmd);
					RC: "***************************************************************************$N"
					    "Trimmer Pinch Roll  Roll (FVR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVR_y753MTR190FC,POSITIVE,250,TrimPR_FVR_FwdCmd,x753MTR190FF,x753MTR190FF,MCC3:1:I.CombinedInputStatus,MCC3:3:I.CombinedOutputStatus,TrimPR_FVR_FltRst) ,XIC(FVR_y753MTR190FC.O1) OTE(y753MTR190FC) ];
					RC: "------------ Reverse Run Command ---------------------------------";
					N: [CROUT(FVR_y753MTR190RC,POSITIVE,250,TrimPR_FVR_RevCmd,x753MTR190RF,x753MTR190RF,MCC3:1:I.CombinedInputStatus,MCC3:3:I.CombinedOutputStatus,TrimPR_FVR_FltRst) ,XIC(FVR_y753MTR190RC.O1) OTE(y753MTR190RC) ];
					RC: "-------------------------------------------------FVR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y753MTR190 FVR Starter Fault -------------------------------------------";
					N: [[XIC(FVR_y753MTR190FC.FP) ,XIC(FVR_y753MTR190RC.FP) ] ,XIC(FVR_y753MTR190_Flt) XIO(TrimPR_FVR_FltRst) ]XIC(MCC3:1:I.RunMode)XIO(MCC3:1:I.ConnectionFaulted)XIC(MCC3:3:I.RunMode)XIO(MCC3:3:I.ConnectionFaulted)OTE(FVR_y753MTR190_Flt);
			END_ROUTINE

			ROUTINE A04_TrimScCon_FVNR (Description := "Trimmer Scrap Conveyor$NFVNR Starter")
					RC: "***************************************************************************$N"
					    "Trimmer Scrap Conveyor - FVNR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(TrimScCon_FVNR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(TrimScCon_FVNR_En);
					RC: "------------ Run Command ---------------------------------$N"
					    "From Machine Processor$N"
					    "";
					N: XIC(TrimScCon_FVNR_En)XIC(SftyMap_Mach[0].7)OTE(TrimScCon_FVNR_RunCmd);
					RC: "***************************************************************************$N"
					    "Trimmer Scrap Conveyor (FVNR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVNR_y761MTR081RC,POSITIVE,250,TrimScCon_FVNR_RunCmd,x761MTR081RF,x761MTR081RF,MCC3:1:I.CombinedInputStatus,MCC3:3:I.CombinedOutputStatus,TrimScCon_FVNR_FltRst) ,XIC(FVNR_y761MTR081RC.O1) OTE(y761MTR081RC) ];
					RC: "-------------------------------------------------FVNR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y761MTR081 FVNR Starter Fault -------------------------------------------";
					N: [XIC(FVNR_y761MTR081RC.FP) ,XIC(FVR_y761MTR081_Flt) XIO(TrimScCon_FVNR_FltRst) ]XIC(MCC3:1:I.RunMode)XIO(MCC3:1:I.ConnectionFaulted)XIC(MCC3:3:I.RunMode)XIO(MCC3:3:I.ConnectionFaulted)OTE(FVR_y761MTR081_Flt);
			END_ROUTINE

			ROUTINE A05_RewPR_FVR (Description := "Rewind Pinch Roll$NFVR Starter")
					RC: "***************************************************************************$N"
					    "Rewind Pinch Roll - FVR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(RewPR_FVR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTC) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(RewPR_FVR_En);
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "From Machine Processor$N"
					    "";
					N: XIC(RewPR_FVR_En)XIC(SftyMap_Mach[0].8)OTE(RewPR_FVR_FwdCmd);
					RC: "------------ Reverse Run Command ---------------------------------$N"
					    "From Machine Processor";
					N: XIC(RewPR_FVR_En)XIC(SftyMap_Mach[0].9)OTE(RewPR_FVR_RevCmd);
					RC: "***************************************************************************$N"
					    "Rewind Pinch Roll (FVR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVR_y702MTR191FC,POSITIVE,1000,RewPR_FVR_FwdCmd,x702MTR191FF,x702MTR191FF,MCC1:1:I.CombinedInputStatus,MCC1:6:I.CombinedOutputStatus,RewPR_FVR_FltRst) ,XIC(FVR_y702MTR191FC.O1) OTE(y702MTR191FC) ];
					RC: "------------ Reverse Run Command ---------------------------------";
					N: [CROUT(FVR_y702MTR191RC,POSITIVE,1000,RewPR_FVR_RevCmd,x702MTR191RF,x702MTR191RF,MCC1:1:I.CombinedInputStatus,MCC1:6:I.CombinedOutputStatus,RewPR_FVR_FltRst) ,XIC(FVR_y702MTR191RC.O1) OTE(y702MTR191RC) ];
					RC: "-------------------------------------------------FVR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y702MTR191 FVR Starter Fault -------------------------------------------";
					N: [[XIC(FVR_y702MTR191FC.FP) ,XIC(FVR_y702MTR191RC.FP) ] ,XIC(FVR_y702MTR191_Flt) XIO(RewPR_FVR_FltRst) ]XIC(MCC1:1:I.RunMode)XIO(MCC1:1:I.ConnectionFaulted)XIC(MCC1:6:I.RunMode)XIO(MCC1:6:I.ConnectionFaulted)OTE(FVR_y702MTR191_Flt);
			END_ROUTINE

			ROUTINE A06_SrDieCrnk_FVNR (Description := "Shear Die Crank$NFVNR Starter")
					RC: "***************************************************************************$N"
					    "Shear Die Crank - FVNR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ,XIC(ShearSts.FaultReset) ]OTE(SrDieCrnk_FVNR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]XIC(ShearSts.CoastStop)OTE(SrDieCrnk_FVNR_En);
					RC: "------------ Run Command ---------------------------------$N"
					    "From Shear Die Processor$N"
					    "";
					N: XIC(SrDieCrnk_FVNR_En)XIC(SftyMap_ShDie[0].1)OTE(SrDieCrnk_FVNR_RunCmd);
					RC: "***************************************************************************$N"
					    "Shear Die Crank (FVNR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVNR_y778MTR080RC,POSITIVE,500,SrDieCrnk_FVNR_RunCmd,x778MTR080RF,x778MTR080RF,MCC4:1:I.CombinedInputStatus,MCC4:4:I.CombinedOutputStatus,SrDieCrnk_FVNR_FltRst) ,XIC(FVNR_y778MTR080RC.O1) OTE(y778MTR080RC) ];
					RC: "-------------------------------------------------FVNR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y778MTR080 FVR Starter Fault -------------------------------------------";
					N: [XIC(FVNR_y778MTR080RC.FP) ,XIC(FVR_y778MTR080_Flt) XIO(SrDieCrnk_FVNR_FltRst) ]XIC(MCC4:1:I.RunMode)XIO(MCC4:1:I.ConnectionFaulted)XIC(MCC4:4:I.RunMode)XIO(MCC4:4:I.ConnectionFaulted)OTE(FVR_y778MTR080_Flt);
			END_ROUTINE

			ROUTINE A07_SkSG_FVR (Description := "Stacker Side Guide Lift$NFVR Starter")
					RC: "***************************************************************************$N"
					    "Stacker Side Guide Lift - FVR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(SkSGLift_FVR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(SkSGLift_FVR_En);
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "From Shear Die Processor$N"
					    "";
					N: XIC(SkSGLift_FVR_En)XIC(SftyMap_ShDie[0].6)OTE(SkSGLift_FVR_FwdCmd);
					RC: "------------ Reverse Run Command ---------------------------------$N"
					    "From Shear Die Processor";
					N: XIC(SkSGLift_FVR_En)XIC(SftyMap_ShDie[0].7)OTE(SkSGLift_FVR_RevCmd);
					RC: "***************************************************************************$N"
					    "Stacker Side Guide Lift (FVR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVR_y802MTR080FC,POSITIVE,250,SkSGLift_FVR_FwdCmd,x802MTR080FF,x802MTR080FF,MCC5:1:I.CombinedInputStatus,MCC5:4:I.CombinedOutputStatus,SkSGLift_FVR_FltRst) ,XIC(FVR_y802MTR080FC.O1) OTE(y802MTR080FC) ];
					RC: "------------ Reverse Run Command ---------------------------------";
					N: [CROUT(FVR_y802MTR080RC,POSITIVE,250,SkSGLift_FVR_RevCmd,x802MTR080RF,x802MTR080RF,MCC5:1:I.CombinedInputStatus,MCC5:4:I.CombinedOutputStatus,SkSGLift_FVR_FltRst) ,XIC(FVR_y802MTR080RC.O1) OTE(y802MTR080RC) ];
					RC: "-------------------------------------------------FVR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y802MTR080 FVR Starter Fault -------------------------------------------";
					N: [[XIC(FVR_y802MTR080FC.FP) ,XIC(FVR_y802MTR080RC.FP) ] ,XIC(FVR_y802MTR080_Flt) XIO(SkSGLift_FVR_FltRst) ]XIC(MCC5:1:I.RunMode)XIO(MCC5:1:I.ConnectionFaulted)XIC(MCC5:4:I.RunMode)XIO(MCC5:4:I.ConnectionFaulted)OTE(FVR_y802MTR080_Flt);
			END_ROUTINE

			ROUTINE A08_SkChain_FVR (Description := "Stacker Chain Conveyor$NFVR Starter")
					RC: "***************************************************************************$N"
					    "Stacker Chain Conveyor - FVR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(SkChain_FVR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(SkChain_FVR_En);
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "From Shear Die Processor$N"
					    "";
					N: XIC(SkChain_FVR_En)XIC(SftyMap_ShDie[0].4)OTE(SkChain_FVR_FwdCmd);
					RC: "------------ Reverse Run Command ---------------------------------$N"
					    "From Shear Die Processor";
					N: XIC(SkChain_FVR_En)XIC(SftyMap_ShDie[0].5)OTE(SkChain_FVR_RevCmd);
					RC: "***************************************************************************$N"
					    "Stacker Chain Conveyor (FVR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVR_y802MTR231FC,POSITIVE,250,SkChain_FVR_FwdCmd,x802MTR231FF,x802MTR231FF,MCC5:1:I.CombinedInputStatus,MCC5:5:I.CombinedOutputStatus,SkChain_FVR_FltRst) ,XIC(FVR_y802MTR231FC.O1) OTE(y802MTR231FC) ];
					RC: "------------ Reverse Run Command ---------------------------------";
					N: [CROUT(FVR_y802MTR231RC,POSITIVE,250,SkChain_FVR_RevCmd,x802MTR231RF,x802MTR231RF,MCC5:1:I.CombinedInputStatus,MCC5:5:I.CombinedOutputStatus,SkChain_FVR_FltRst) ,XIC(FVR_y802MTR231RC.O1) OTE(y802MTR231RC) ];
					RC: "-------------------------------------------------FVR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y802MTR231 FVR Starter Fault -------------------------------------------";
					N: [[XIC(FVR_y802MTR231FC.FP) ,XIC(FVR_y802MTR231RC.FP) ] ,XIC(FVR_y802MTR231_Flt) XIO(SkChain_FVR_FltRst) ]XIC(MCC5:1:I.RunMode)XIO(MCC5:1:I.ConnectionFaulted)XIC(MCC5:5:I.RunMode)XIO(MCC5:5:I.ConnectionFaulted)OTE(FVR_y802MTR231_Flt);
			END_ROUTINE

			ROUTINE A09_ScHorCon_FVR (Description := "Scrap Horizontal Conveyor$NFVR Starter")
					RC: "***************************************************************************$N"
					    "Stacker Chain Conveyor - FVR$N"
					    "****************************************************************************$N"
					    "$N"
					    "";
					N: NOP();
					RC: "------Fault Reset -------------------------------------------------------";
					N: [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ]OTE(ScHorCon_FVR_FltRst);
					RC: "------------ Enable -----------------------------------------------------";
					N: [XIC(LineSts.CoastStop_CTL) XIO(Line_TotalMode) ,XIC(LineSts.CoastStop_Total) XIC(Line_TotalMode) ]OTE(ScHorCon_FVR_En);
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "From Shear Die Processor$N"
					    "";
					N: XIC(ScHorCon_FVR_En)XIC(SftyMap_ShDie[0].2)OTE(ScHorCon_FVR_FwdCmd);
					RC: "------------ Reverse Run Command ---------------------------------$N"
					    "From Shear Die Processor";
					N: XIC(ScHorCon_FVR_En)XIC(SftyMap_ShDie[0].3)OTE(ScHorCon_FVR_RevCmd);
					RC: "***************************************************************************$N"
					    "Scrap Horizontal Conveyor (FVR Starter)$N"
					    "***************************************************************************";
					N: NOP();
					RC: "------------ Forward Run Command ---------------------------------$N"
					    "";
					N: [CROUT(FVR_y802MTR230FC,POSITIVE,250,ScHorCon_FVR_FwdCmd,x802MTR230FF,x802MTR230FF,MCC5:1:I.CombinedInputStatus,MCC5:4:I.CombinedOutputStatus,ScHorCon_FVR_FltRst) ,XIC(FVR_y802MTR230FC.O1) OTE(y802MTR230FC) ];
					RC: "------------ Reverse Run Command ---------------------------------";
					N: [CROUT(FVR_y802MTR230RC,POSITIVE,250,ScHorCon_FVR_RevCmd,x802MTR230RF,x802MTR230RF,MCC5:1:I.CombinedInputStatus,MCC5:4:I.CombinedOutputStatus,ScHorCon_FVR_FltRst) ,XIC(FVR_y802MTR230RC.O1) OTE(y802MTR230RC) ];
					RC: "-------------------------------------------------FVR Starter Fault------------------------------------------------------------------$N"
					    "";
					N: NOP();
					RC: "---------------------------------y802MTR230 FVR Starter Fault -------------------------------------------";
					N: [[XIC(FVR_y802MTR230FC.FP) ,XIC(FVR_y802MTR230RC.FP) ] ,XIC(FVR_y802MTR230_Flt) XIO(ScHorCon_FVR_FltRst) ]XIC(MCC5:1:I.RunMode)XIO(MCC5:1:I.ConnectionFaulted)XIC(MCC5:4:I.RunMode)XIO(MCC5:4:I.ConnectionFaulted)OTE(FVR_y802MTR230_Flt);
			END_ROUTINE

	END_PROGRAM

	PROGRAM System (Description := "Safety System Logic",
	                Class := Safety,
	                MAIN := "MainRoutine",
	                MODE := 0,
	                DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE A01_SftyModFlts_OS (Description := "Operator Station$NSafety Module Faults")
					RC: "---------------OS1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS1:1:I.RunMode) ,XIC(OS1:1:I.ConnectionFaulted) ,XIC(OS1_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS1_S1_ModFlt);
					RC: "---------------OS2 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS2:1:I.RunMode) ,XIC(OS2:1:I.ConnectionFaulted) ,XIC(OS2_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS2_S1_ModFlt);
					RC: "---------------OS3 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS3:1:I.RunMode) ,XIC(OS3:1:I.ConnectionFaulted) ,XIC(OS3_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS3_S1_ModFlt);
					RC: "---------------OS4N Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS4N:1:I.RunMode) ,XIC(OS4N:1:I.ConnectionFaulted) ,XIC(OS4N_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS4N_S1_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(OS4N:5:I.RunMode) ,XIC(OS4N:5:I.ConnectionFaulted) ,XIC(OS4N_S5_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS4N_S5_ModFlt);
					RC: "---------------OS4S Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS4S:1:I.RunMode) ,XIC(OS4S:1:I.ConnectionFaulted) ,XIC(OS4S_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS4S_S1_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(OS4S:5:I.RunMode) ,XIC(OS4S:5:I.ConnectionFaulted) ,XIC(OS4S_S5_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS4S_S5_ModFlt);
					RC: "---------------OS5 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS5:1:I.RunMode) ,XIC(OS5:1:I.ConnectionFaulted) ,XIC(OS5_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS5_S1_ModFlt);
					RC: "---------------OS6 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS6:1:I.RunMode) ,XIC(OS6:1:I.ConnectionFaulted) ,XIC(OS6_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS6_S1_ModFlt);
					RC: "---------------OS8 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS8:1:I.RunMode) ,XIC(OS8:1:I.ConnectionFaulted) ,XIC(OS8_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS8_S1_ModFlt);
					RC: "---------------OS9 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS9:1:I.RunMode) ,XIC(OS9:1:I.ConnectionFaulted) ,XIC(OS9_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS9_S1_ModFlt);
					RC: "---------------OS11 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS11:1:I.RunMode) ,XIC(OS11:1:I.ConnectionFaulted) ,XIC(OS11_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS11_S1_ModFlt);
					RC: "---------------OS13 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS13:1:I.RunMode) ,XIC(OS13:1:I.ConnectionFaulted) ,XIC(OS13_S1_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS13_S1_ModFlt);
					RC: "---------------OS14 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS14:1:I.RunMode) ,XIC(OS14:1:I.ConnectionFaulted) ,XIC(OS14_S1_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS14_S1_ModFlt);
					RC: "---------------OS15 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS15:1:I.RunMode) ,XIC(OS15:1:I.ConnectionFaulted) ,XIC(OS15_S1_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS15_S1_ModFlt);
					RC: "---------------OS16 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(OS16:1:I.RunMode) ,XIC(OS16:1:I.ConnectionFaulted) ,XIC(OS16_S1_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(OS16_S1_ModFlt);
			END_ROUTINE

			ROUTINE A02_SftyModFlts_GenIO (Description := "General I/O$NSafety Module Faults")
					RC: "---------------A1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(A1:20:I.RunMode) ,XIC(A1:20:I.ConnectionFaulted) ,XIC(A1_S20_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(A1_S20_ModFlt);
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(A1:21:I.RunMode) ,XIC(A1:21:I.ConnectionFaulted) ,XIC(A1_S21_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(A1_S21_ModFlt);
					RC: "---------------C1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(C1:12:I.RunMode) ,XIC(C1:12:I.ConnectionFaulted) ,XIC(C1_S12_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(C1_S12_ModFlt);
					RC: "---------------CHPLC Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(CHPLC:1:I.RunMode) ,XIC(CHPLC:1:I.ConnectionFaulted) ,XIC(CHPLC_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(CHPLC_S1_ModFlt);
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(CHPLC:2:I.RunMode) ,XIC(CHPLC:2:I.ConnectionFaulted) ,XIC(CHPLC_S2_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(CHPLC_S2_ModFlt);
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(CHPLC:3:I.RunMode) ,XIC(CHPLC:3:I.ConnectionFaulted) ,XIC(CHPLC_S3_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(CHPLC_S3_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(CHPLC:4:I.RunMode) ,XIC(CHPLC:4:I.ConnectionFaulted) ,XIC(CHPLC_S4_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(CHPLC_S4_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(CHPLC:5:I.RunMode) ,XIC(CHPLC:5:I.ConnectionFaulted) ,XIC(CHPLC_S5_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(CHPLC_S5_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(CHPLC:6:I.RunMode) ,XIC(CHPLC:6:I.ConnectionFaulted) ,XIC(CHPLC_S6_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(CHPLC_S6_ModFlt);
					RC: "---------------D1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(D1:12:I.RunMode) ,XIC(D1:12:I.ConnectionFaulted) ,XIC(D1_S12_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(D1_S12_ModFlt);
					RC: "---------------DPD Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(DPD:14:I.RunMode) ,XIC(DPD:14:I.ConnectionFaulted) ,XIC(DPD_S14_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(DPD_S14_ModFlt);
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(DPD:15:I.RunMode) ,XIC(DPD:15:I.ConnectionFaulted) ,XIC(DPD_S15_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(DPD_S15_ModFlt);
					RC: "---------------E1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(E1:10:I.RunMode) ,XIC(E1:10:I.ConnectionFaulted) ,XIC(E1_S10_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(E1_S10_ModFlt);
					RC: "---------------F1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(F1:19:I.RunMode) ,XIC(F1:19:I.ConnectionFaulted) ,XIC(F1_S19_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(F1_S19_ModFlt);
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(F1:20:I.RunMode) ,XIC(F1:20:I.ConnectionFaulted) ,XIC(F1_S20_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(F1_S20_ModFlt);
					RC: "---------------G1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(G1:11:I.RunMode) ,XIC(G1:11:I.ConnectionFaulted) ,XIC(G1_S11_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(G1_S11_ModFlt);
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(G1:12:I.RunMode) ,XIC(G1:12:I.ConnectionFaulted) ,XIC(G1_S12_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(G1_S12_ModFlt);
					RC: "---------------H1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(H1:5:I.RunMode) ,XIC(H1:5:I.ConnectionFaulted) ,XIC(H1_S5_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(H1_S5_ModFlt);
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(H1:6:I.RunMode) ,XIC(H1:6:I.ConnectionFaulted) ,XIC(H1_S6_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(H1_S6_ModFlt);
					RC: "---------------SDPLC Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(SDPLC:1:I.RunMode) ,XIC(SDPLC:1:I.ConnectionFaulted) ,XIC(SDPLC_S1_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(SDPLC_S1_ModFlt);
					RC: "------OB8S Status ---------------------------------------------------";
					N: [XIO(SDPLC:2:I.RunMode) ,XIC(SDPLC:2:I.ConnectionFaulted) ,XIC(SDPLC_S2_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(SDPLC_S2_ModFlt);
					RC: "---------------VS2 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(VS2:10:I.RunMode) ,XIC(VS2:10:I.ConnectionFaulted) ,XIC(VS2_S10_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(VS2_S10_ModFlt);
			END_ROUTINE

			ROUTINE A03_SftyModFlts_MCC (Description := "MCC$NSafety Module Faults")
					RC: "---------------MCC1 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(MCC1:1:I.RunMode) ,XIC(MCC1:1:I.ConnectionFaulted) ,XIC(MCC1_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC1_S1_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC1:6:I.RunMode) ,XIC(MCC1:6:I.ConnectionFaulted) ,XIC(MCC1_S6_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC1_S6_ModFlt);
					RC: "---------------MCC2 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC2:1:I.RunMode) ,XIC(MCC2:1:I.ConnectionFaulted) ,XIC(MCC2_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC2_S1_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC2:2:I.RunMode) ,XIC(MCC2:2:I.ConnectionFaulted) ,XIC(MCC2_S2_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC2_S2_ModFlt);
					RC: "---------------MCC3 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(MCC3:1:I.RunMode) ,XIC(MCC3:1:I.ConnectionFaulted) ,XIC(MCC3_S1_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC3_S1_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC3:3:I.RunMode) ,XIC(MCC3:3:I.ConnectionFaulted) ,XIC(MCC3_S3_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC3_S3_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC3:4:I.RunMode) ,XIC(MCC3:4:I.ConnectionFaulted) ,XIC(MCC3_S4_ModFlt) [XIC(LineSts.FaultReset_CTC) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC3_S4_ModFlt);
					RC: "---------------MCC4 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(MCC4:1:I.RunMode) ,XIC(MCC4:1:I.ConnectionFaulted) ,XIC(MCC4_S1_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC4_S1_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC4:3:I.RunMode) ,XIC(MCC4:3:I.ConnectionFaulted) ,XIC(MCC4_S3_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC4_S3_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC4:4:I.RunMode) ,XIC(MCC4:4:I.ConnectionFaulted) ,XIC(MCC4_S4_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC4_S4_ModFlt);
					RC: "---------------MCC5 Point IO Run Mode and Connection Status-----------------------------------------------------$N"
					    " $N"
					    "";
					N: NOP();
					RC: "------ IB8S Status ---------------------------------------------------";
					N: [XIO(MCC5:1:I.RunMode) ,XIC(MCC5:1:I.ConnectionFaulted) ,XIC(MCC5_S1_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC5_S1_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC5:3:I.RunMode) ,XIC(MCC5:3:I.ConnectionFaulted) ,XIC(MCC5_S3_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC5_S3_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC5:4:I.RunMode) ,XIC(MCC5:4:I.ConnectionFaulted) ,XIC(MCC5_S4_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC5_S4_ModFlt);
					RC: "------ OB8S Status ---------------------------------------------------";
					N: [XIO(MCC5:5:I.RunMode) ,XIC(MCC5:5:I.ConnectionFaulted) ,XIC(MCC5_S5_ModFlt) [XIC(LineSts.FaultReset_CTL) XIO(Line_TotalMode) ,XIC(LineSts.FaultReset_Total) XIC(Line_TotalMode) ] ]OTE(MCC5_S5_ModFlt);
			END_ROUTINE

			ROUTINE A04_SftyHeartbeat (Description := "Heartbeat Logic")
					RC: "*******************************************************************************$N"
					    "Heartbeat - Safety to Others$N"
					    "*******************************************************************************";
					N: NOP();
					RC: "Set and Reset the FromSafety[0].00 every 0.25 Seconds for communication verification$N"
					    "to the Machine and Shear Die Processors.";
					N: XIO(Safety_HB_TON.DN)TON(Safety_HB_TOF,?,?)XIC(Safety_HB_TOF.DN)TON(Safety_HB_TON,?,?)OTE(LineSts.Heartbeat);
					RC: "*******************************************************************************$N"
					    "Heartbeat - Safety to Machine$N"
					    "*******************************************************************************";
					N: NOP();
					RC: "The Machine processor will set and reset FromMachine[0].00 every 0.25Seconds.$N"
					    "If this processor sees no change in this bit for X-Seconds then a communication fault has$N"
					    "occurred between the Machine Processor and the Shear Processor.";
					N: [XIC(SftyMap_Mach[0].0) TON(Machine_HB_TON,?,?) ,XIO(SftyMap_Mach[0].0) TON(Machine_HB_TOF,?,?) ];
					N: [XIC(Machine_HB_TON.DN) ,XIC(Machine_HB_TOF.DN) ,XIC(Machine_HB_Flt) [XIC(LineSts.ResetInput_CTC) XIO(Line_TotalMode) ,XIC(LineSts.ResetInput_Total) XIC(Line_TotalMode) ] ]OTE(Machine_HB_Flt);
					RC: "*******************************************************************************$N"
					    "Heartbeat - Safety to Shear$N"
					    "*******************************************************************************";
					N: NOP();
					RC: "The Shear processor will set and reset FromShearDie[0].00 every 0.25Seconds.$N"
					    "If this processor sees no change in this bit for X-Seconds then a communication fault has$N"
					    "occurred between the Shear Processor and the Safety Processor.";
					N: [XIC(SftyMap_ShDie[0].0) TON(Shear_HB_TON,?,?) ,XIO(SftyMap_ShDie[0].0) TON(Shear_HB_TOF,?,?) ];
					N: [XIC(Shear_HB_TON.DN) ,XIC(Shear_HB_TOF.DN) ,XIC(Shear_HB_Flt) [XIC(LineSts.ResetInput_CTL) XIO(Line_TotalMode) ,XIC(LineSts.ResetInput_Total) XIC(Line_TotalMode) ] ]OTE(Shear_HB_Flt);
					RC: "*******************************************************************************$N"
					    "Heartbeat - Safety to Citek$N"
					    "*******************************************************************************$N"
					    "Citect System will set and reset bit based upon state of our ToCitect[0].00 Bit to them.$N"
					    "If this processor sees no change in this bit for X-Seconds then a communication fault has$N"
					    "occurred between the two systems.";
					N: NOP();
					N: XIO(SftyMap_Citect[0].0)[OTE(HB_Citect) ,TON(Citect_HB_TON,?,?) ,TOF(Citect_HB_TOF,?,?) ];
					RC: "--------- Safety to Citect Heartbeat Fault ----------------------------";
					N: XIO(CC)[XIC(Citect_HB_TON.DN) ,XIO(Citect_HB_TOF.DN) ,XIC(Citect_HB_Flt) [XIO(LineSts.ResetInput_CTC) ,XIO(LineSts.ResetInput_CTL) ,XIO(LineSts.ResetInput_Total) ] ]OTE(Citect_HB_Flt);
					RC: "--------- No Peer to Peer Communication Faults -------------------";
					N: XIO(Machine_HB_Flt)XIO(Shear_HB_Flt)XIO(Citect_HB_Flt)OTE(Line_NoP2P_CommFlts);
			END_ROUTINE

			ROUTINE B00_Line_Logic (Description := "Line System$NSafety Logic")
					RC: "*****************************************************************************************************************************************************$N"
					    "The System Circuit Rest below is responsible for 2 items$N"
					    "1. It immediately resets ANY Safety Instructions if their FP bit is set.$N"
					    "2. It resets the EStop Circuit after a 1 Second Timer. The operator should press and Hold the Reset button for 1 Sec.$N"
					    "*****************************************************************************************************************************************************";
					N: NOP();
					N: XIC(SftyMap_Mach[0].12)OTE(Line_TotalMode);
					N: XIC(SftyMap_Mach[0].11)XIO(Line_TotalMode)OTE(LineSts.ResetInput_CTC);
					N: XIC(SftyMap_ShDie[0].9)XIO(Line_TotalMode)OTE(LineSts.ResetInput_CTL);
					N: [XIC(SftyMap_Mach[0].11) ,XIC(SftyMap_ShDie[0].9) ]XIC(Line_TotalMode)OTE(LineSts.ResetInput_Total);
					RC: "This Reset comes from the Line Processors.";
					N: XIC(LineSts.ResetInput_CTC)[OTE(LineSts.FaultReset_CTC) ,TON(LineSts.CircuitResetTimer_CTC,?,?) ,XIC(LineSts.CircuitResetTimer_CTC.DN) OTE(LineSts.CircuitReset_CTC) ];
					RC: "This Reset comes from the Line Processors.";
					N: XIC(LineSts.ResetInput_CTL)[OTE(LineSts.FaultReset_CTL) ,TON(LineSts.CircuitResetTimer_CTL,?,?) ,XIC(LineSts.CircuitResetTimer_CTL.DN) OTE(LineSts.CircuitReset_CTL) ];
					RC: "This Reset comes from the Line Processors.";
					N: XIC(LineSts.ResetInput_Total)[OTE(LineSts.FaultReset_Total) ,TON(LineSts.CircuitResetTimer_Total,?,?) ,XIC(LineSts.CircuitResetTimer_Total.DN) OTE(LineSts.CircuitReset_Total) ];
					RC: "****************************************************************************************************************************************************$N"
					    "Processor Watchdogs for the Line$N"
					    "Safety Monitors comms to all processor it has connections to.$N"
					    "****************************************************************************************************************************************************";
					N: NOP();
					RC: "--------- Safety Heartbeat Logic -------------------";
					N: JSR(A04_SftyHeartbeat,0);
					RC: "****************************************************************************************************************$N"
					    "Safety Instruction Faults$N"
					    "****************************************************************************************************************$N"
					    "Estops$N"
					    "Safe-Off$N"
					    "Solenoids$N"
					    "";
					N: NOP();
					RC: "------------- Estop Instruction Faults -------------------------------$N"
					    "No Estop Instruction Faults exist.$N"
					    "$N"
					    "$N"
					    "";
					N: XIO(ESTOP_x201PB040_Flt)XIO(ESTOP_x211PB040_Flt)XIO(ESTOP_x221PB040_Flt)XIO(ESTOP_x231PB040_Flt)XIO(ESTOP_x241PB040_Flt)XIO(ESTOP_x251PB040_Flt)XIO(ESTOP_x261PB040_Flt)XIO(ESTOP_x271PB040_Flt)XIO(ESTOP_x281PB040_Flt)XIO(ESTOP_x291PB040_Flt)XIO(ESTOP_x480PB470_Flt)OTE(Sfty_InstrFlts0_CTC);
					N: XIO(ESTOP_x301PB040_Flt)XIO(ESTOP_x311PB040_Flt)XIO(ESTOP_x311PB130_Flt)XIO(ESTOP_x321PB040_Flt)XIO(ESTOP_x331PB040_Flt)XIO(ESTOP_x519LS470_Flt)XIO(ESTOP_x533PB470_Flt)OTE(Sfty_InstrFlts0_CTL);
					N: XIC(Sfty_InstrFlts0_CTC)XIC(Sfty_InstrFlts0_CTL)OTE(Sfty_InstrFlts0_Total);
					RC: "-------------Safe Off  Instruction Faults -------------------------------$N"
					    "No Safe Off Instruction Faults exist.$N"
					    "$N"
					    "$N"
					    "";
					N: XIO(SafeOff_y613CR460_Flt)XIO(SafeOff_y613CR510_Flt)XIO(SafeOff_y613CR550_Flt)XIO(SafeOff_y613CR590_Flt)XIO(SafeOff_y613CR630_Flt)XIO(SafeOff_y613CR670_Flt)XIO(SafeOff_y613CR710_Flt)XIO(SafeOff_y613CR750_Flt)XIO(SafeOff_y614CR040_Flt)XIO(SafeOff_y614CR090_Flt)XIO(SafeOff_y614CR130_Flt)XIO(SafeOff_y614CR170_Flt)XIO(SafeOff_y614CR210_Flt)XIO(SafeOff_y614CR250_Flt)OTE(Sfty_InstrFlts1_CTC);
					N: XIO(SafeOff_y172CR460_Flt)XIO(SafeOff_y172CR510_Flt)OTE(Sfty_InstrFlts1_CTL);
					N: XIC(Sfty_InstrFlts1_CTC)XIC(Sfty_InstrFlts1_CTL)OTE(Sfty_InstrFlts1_Total);
					RC: "-------------FVR/FVNR  Instruction Faults -------------------------------$N"
					    "No Starter Instruction Faults exist.$N"
					    "$N"
					    "$N"
					    "";
					N: XIO(FVR_y708MTR250_Flt)XIO(FVR_y708MTR080_Flt)XIO(FVR_y753MTR190_Flt)XIO(FVR_y761MTR081_Flt)XIO(FVR_y702MTR191_Flt)XIO(FVR_y708MTR080_Flt)OTE(Sfty_InstrFlts2_CTC);
					N: XIO(FVR_y778MTR080_Flt)XIO(FVR_y802MTR080_Flt)XIO(FVR_y802MTR230_Flt)XIO(FVR_y802MTR231_Flt)OTE(Sfty_InstrFlts2_CTL);
					N: XIC(Sfty_InstrFlts2_CTC)XIC(Sfty_InstrFlts2_CTL)OTE(Sfty_InstrFlts2_Total);
					RC: "****************************************************************************************************************$N"
					    "Point I/O Module Faults$N"
					    "****************************************************************************************************************$N"
					    "General FIeld I/O Modules$N"
					    "Operator Station I/O Modules$N"
					    "MCC I/O Modules";
					N: NOP();
					RC: "------------ General I/O Module Faults ------------------------------------";
					N: XIO(A1_S20_ModFlt)XIO(A1_S21_ModFlt)XIO(C1_S12_ModFlt)XIO(CHPLC_S1_ModFlt)XIO(CHPLC_S2_ModFlt)XIO(CHPLC_S3_ModFlt)XIO(CHPLC_S4_ModFlt)XIO(CHPLC_S5_ModFlt)XIO(CHPLC_S6_ModFlt)XIO(D1_S12_ModFlt)XIO(DPD_S14_ModFlt)XIO(DPD_S15_ModFlt)XIO(E1_S10_ModFlt)XIO(F1_S19_ModFlt)XIO(F1_S20_ModFlt)XIO(VS2_S10_ModFlt)OTE(Sfty_ModFlts0_CTC);
					N: XIO(H1_S5_ModFlt)XIO(H1_S6_ModFlt)XIO(G1_S11_ModFlt)XIO(G1_S12_ModFlt)XIO(SDPLC_S1_ModFlt)XIO(SDPLC_S2_ModFlt)OTE(Sfty_ModFlts0_CTL);
					N: XIC(Sfty_ModFlts0_CTC)XIC(Sfty_ModFlts0_CTL)OTE(Sfty_ModFlts0_Total);
					RC: "------------ Operator Station Module Faults ------------------------------------";
					N: XIO(OS1_S1_ModFlt)XIO(OS2_S1_ModFlt)XIO(OS3_S1_ModFlt)XIO(OS4N_S1_ModFlt)XIO(OS4N_S5_ModFlt)XIO(OS4S_S1_ModFlt)XIO(OS4S_S5_ModFlt)XIO(OS5_S1_ModFlt)XIO(OS6_S1_ModFlt)XIO(OS8_S1_ModFlt)XIO(OS9_S1_ModFlt)XIO(OS11_S1_ModFlt)OTE(Sfty_ModFlts1_CTC);
					N: XIO(OS13_S1_ModFlt)XIO(OS14_S1_ModFlt)XIO(OS15_S1_ModFlt)XIO(OS16_S1_ModFlt)OTE(Sfty_ModFlts1_CTL);
					N: XIC(Sfty_ModFlts1_CTC)XIC(Sfty_ModFlts1_CTL)OTE(Sfty_ModFlts1_Total);
					RC: "------------ MCC Module Faults ------------------------------------";
					N: XIO(MCC1_S1_ModFlt)XIO(MCC1_S6_ModFlt)XIO(MCC2_S1_ModFlt)XIO(MCC2_S2_ModFlt)XIO(MCC3_S1_ModFlt)XIO(MCC3_S3_ModFlt)XIO(MCC3_S4_ModFlt)OTE(Sfty_ModFlts2_CTC);
					N: XIO(MCC4_S1_ModFlt)XIO(MCC4_S3_ModFlt)XIO(MCC4_S4_ModFlt)XIO(MCC5_S1_ModFlt)XIO(MCC5_S3_ModFlt)XIO(MCC5_S4_ModFlt)XIO(MCC5_S5_ModFlt)OTE(Sfty_ModFlts2_CTL);
					N: XIC(Sfty_ModFlts2_CTC)XIC(Sfty_ModFlts2_CTL)OTE(Sfty_ModFlts2_Total);
					RC: "****************************************************************************************************************$N"
					    "Safety System Faults$N"
					    "****************************************************************************************************************$N"
					    "Safety Instruction$N"
					    "Safety Modules$N"
					    "Peer Communication Faults -----SHOULD COAST STOP?";
					N: NOP();
					RC: "------------------Coil To Coil System No Faults-----------------------------------------$N"
					    "";
					N: XIC(Sfty_InstrFlts0_CTC)XIC(Sfty_InstrFlts2_CTC)XIC(Sfty_InstrFlts1_CTC)XIC(Sfty_ModFlts0_CTC)XIC(Sfty_ModFlts1_CTC)XIC(Sfty_ModFlts2_CTC)XIC(Line_NoP2P_CommFlts)OTE(LineSts.No_CTC_Faults);
					RC: "------------------Cut To Length System No Faults-----------------------------------------$N"
					    "";
					N: XIC(Sfty_InstrFlts0_CTL)XIC(Sfty_InstrFlts2_CTL)XIC(Sfty_InstrFlts1_CTL)XIC(Sfty_ModFlts0_CTL)XIC(Sfty_ModFlts1_CTL)XIC(Sfty_ModFlts2_CTL)XIC(Line_NoP2P_CommFlts)OTE(LineSts.No_CTL_Faults);
					RC: "------------------Total Line Mode System No Faults-----------------------------------------$N"
					    "";
					N: XIC(Sfty_InstrFlts0_Total)XIC(Sfty_InstrFlts2_Total)XIC(Sfty_InstrFlts1_Total)XIC(Sfty_ModFlts0_Total)XIC(Sfty_ModFlts1_Total)XIC(Sfty_ModFlts2_Total)XIC(Line_NoP2P_CommFlts)OTE(LineSts.No_Total_Faults);
					RC: "***************************************************************************$N"
					    "Line Estop PB$'s$N"
					    "***************************************************************************";
					N: NOP();
					RC: "-------------------Line Estop Coil to Coil Mode --------------------------------------------$N"
					    "OS1- OS11, DPD";
					N: XIC(OS1_No_EStops)XIC(OS2_No_EStops)XIC(OS3_No_EStops)XIC(OS4_No_EStops)XIC(OS5_No_EStops)XIC(OS6_No_EStops)XIC(OS8_No_EStops)XIC(OS9_No_EStops)XIC(OS11_No_EStops)XIC(DPD_No_EStops)OTE(LineSts.No_CTC_EStops);
					RC: "-------------------Line Estop Summation 2 --------------------------------------------$N"
					    "OS13- OS16, H1";
					N: XIC(OS13_No_EStops)XIC(OS14_No_EStops)XIC(OS15_No_EStops)XIC(OS16_No_EStops)XIC(G1_No_EStops)XIC(H1_No_EStops)OTE(LineSts.No_CTL_EStops);
					RC: "--------------------------------------------System No Estops----------------------------------$N"
					    "Line Estop PB$'s OR System.No_Faults will cause the line to E-stop $N"
					    "";
					N: XIC(LineSts.No_CTC_EStops)XIC(LineSts.No_CTL_EStops)OTE(LineSts.No_Total_Estops);
					RC: "-------Cut To Length Estop Timer---------------------------------------------------------------------------------$N"
					    " $N"
					    "If an Estop is pressed the system will start counting down for X seconds, if the line is not at zero stop produce a coast stop.$N"
					    "$N"
					    "";
					N: [XIO(LineSts.No_CTC_EStops) ,XIO(LineSts.No_CTC_Faults) ]TON(LineSts.CTCStopTimer,?,?);
					RC: "----------------------------------------Coast Stop Conditions----------------------------------------------------------$N"
					    "If the Estop Times out AND the line is not at Zero Speed then create a Coast Stop$N"
					    "If the Coast Stop PB is pressed then create a Coast$N"
					    "";
					N: [XIC(LineSts.CTCStopTimer.DN) ,XIC(Line_CTC_CoastStop) XIC(LineSts.ResetInput_CTC) XIO(Line_TotalMode) ]OTE(Line_CTC_CoastStop);
					RC: "------------------System Coast Stop ----------------------------------------------------------------------$N"
					    "$N"
					    "";
					N: XIO(Line_CTC_CoastStop)OTE(LineSts.CoastStop_CTC);
					RC: "-------Cut To Length Estop Timer---------------------------------------------------------------------------------$N"
					    " $N"
					    "If an Estop is pressed the system will start counting down for X seconds, if the line is not at zero stop produce a coast stop.$N"
					    "$N"
					    "";
					N: [XIO(LineSts.No_CTL_EStops) ,XIO(LineSts.No_CTL_Faults) ]TON(LineSts.CTLStopTimer,?,?);
					RC: "----------------------------------------Coast Stop Conditions----------------------------------------------------------$N"
					    "If the Estop Times out AND the line is not at Zero Speed then create a Coast Stop$N"
					    "If the Coast Stop PB is pressed then create a Coast$N"
					    "";
					N: [XIC(LineSts.CTLStopTimer.DN) ,XIC(Line_CTL_CoastStop) XIC(LineSts.ResetInput_CTL) XIO(Line_TotalMode) ]OTE(Line_CTL_CoastStop);
					RC: "------------------System Coast Stop ----------------------------------------------------------------------$N"
					    "$N"
					    "";
					N: XIO(Line_CTL_CoastStop)OTE(LineSts.CoastStop_CTL);
					RC: "-------Total Mode Estop Timer---------------------------------------------------------------------------------$N"
					    " $N"
					    "If an Estop is pressed the system will start counting down for X seconds, if the line is not at zero stop produce a coast stop.$N"
					    "$N"
					    "";
					N: [XIO(LineSts.No_Total_Estops) ,XIO(LineSts.No_Total_Faults) ]TON(LineSts.TotalStopTimer,?,?);
					RC: "----------------------------------------Coast Stop Conditions----------------------------------------------------------$N"
					    "If the Estop Times out AND the line is not at Zero Speed then create a Coast Stop$N"
					    "If the Coast Stop PB is pressed then create a Coast$N"
					    "";
					N: [XIC(LineSts.TotalStopTimer.DN) ,XIC(Line_CTL_CoastStop) XIC(LineSts.ResetInput_Total) XIC(Line_TotalMode) ]OTE(Line_Total_CoastStop);
					RC: "------------------System Coast Stop ----------------------------------------------------------------------$N"
					    "$N"
					    "";
					N: XIO(Line_Total_CoastStop)OTE(LineSts.CoastStop_Total);
					RC: "------------ Line Drives OFF -----------------------------------------$N"
					    "DC Drives$N"
					    "Unwind (Op/Drv SIde)$N"
					    "Entry Bridle ( Roll 2/3)$N"
					    "Exit Bridle (Roll 6/7)$N"
					    "Rewind$N"
					    "Shear Die Accelerator";
					N: XIC(UNW_DrvsOff)XIC(EnBridle_DrvsOff)XIC(ExBridle_DrvsOff)XIC(Rew_DrvsOff)XIC(SrDie_DrvsOff)OTE(Drives_Off.0);
					RC: "------------ Line Drives OFF -----------------------------------------$N"
					    "AC Drives$N"
					    "Unwind Pinch Roll$N"
					    "Paper Winder$N"
					    "Trimmer Knives/ Width Adjust$N"
					    "Scrap Chopper Conveyor$N"
					    "Wash Tank Pinch Rolls (1-4)$N"
					    "Side Guide WIdth Adjust";
					N: XIC(UnPR_DrvsOff)XIC(PW_DrvsOff)XIC(TK_DrvsOff)XIC(SC_DrvsOff)XIC(WTPR_DrvsOff)XIC(SGWA_DrvsOff)OTE(Drives_Off.1);
					RC: "------------ Line Drives OFF -----------------------------------------$N"
					    "AC Drives$N"
					    "Sheeter Pinch Rolls$N"
					    "Shear Pinch Roll / Metering Back Up Roll$N"
					    "Shear Conveyor";
					N: XIC(StPR_DrvsOff)XIC(Sr_DrvsOff)XIC(SrCon_DrvsOff)OTE(Drives_Off.2);
					RC: "------------ Line Drives OFF -----------------------------------------$N"
					    "AC Drives$N"
					    "Product Conveyors (1-3)$N"
					    "Scrap Incline Conveyor$N"
					    "Stacker Blower$N"
					    "Stacker Back Stop$N"
					    "";
					N: XIC(PrCon_DrvsOff)XIC(ScInCon_DrvsOff)XIC(SkBlwr_DrvsOff)XIC(SkBkSt_DrvsOff)OTE(Drives_Off.3);
					RC: "---------- Line Drives OFF --------------------------------------------";
					N: XIC(Drives_Off.0)XIC(Drives_Off.1)XIC(Drives_Off.2)XIC(Drives_Off.3)OTE(LineSts.All_Drives_Off);
					RC: "-------------------- Unwind Safety Gate Reset ---------------------";
					N: NOP();
					RC: "------------- Safety Gate Guarding OK -----------------------------";
					N: XIC(A1_CoilCarSolPwrEn)OTE(LineSts.GuardsOK);
			END_ROUTINE

			ROUTINE C00_Shear_Logic (Description := "Shear System$NSafety Logic")
					RC: "*****************************************************************************************************************************************************$N"
					    "The System Circuit Rest below is responsible for 2 items$N"
					    "1. It immediately resets ANY Safety Instructions if their FP bit is set.$N"
					    "2. It resets the EStop Circuit after a 1 Second Timer. The operator should press and Hold the Reset button for 1 Sec.$N"
					    "*****************************************************************************************************************************************************";
					N: NOP();
					RC: "--------- Reset Commands from the Shear Die Processor ---------------------";
					N: XIC(SftyMap_ShDie[0].8)OTE(ShearSts.ResetInput);
					RC: "This Reset comes from the Shear Processors.";
					N: XIC(ShearSts.ResetInput)[OTE(ShearSts.FaultReset) ,TON(ShearSts.CircuitResetTimer,?,?) ,XIC(ShearSts.CircuitResetTimer.DN) OTE(ShearSts.CircuitReset) ];
					RC: "------------------System No Faults-----------------------------------------$N"
					    "";
					N: [XIC(LineSts.No_CTL_Faults) ,XIC(LineSts.No_Total_Faults) ]OTE(ShearSts.No_Faults);
					RC: "***************************************************************************$N"
					    "Shear Estop PB$'s$N"
					    "***************************************************************************";
					N: NOP();
					RC: "--------------------------------------------System No Estops----------------------------------$N"
					    "Line Estop PB$'s OR Shear.No_Faults will cause the Shear to E-stop $N"
					    "";
					N: [XIC(LineSts.No_CTL_EStops) XIC(LineSts.No_CTL_Faults) ,XIC(LineSts.No_Total_Estops) XIC(LineSts.No_Total_Faults) ]XIC(OS14_Shear_No_EStops)XIC(ShearSts.No_Faults)OTE(ShearSts.No_EStops);
					RC: "-------Estop Timer---------------------------------------------------------------------------------$N"
					    " $N"
					    "If an Estop is pressed the system will start counting down for X seconds, if the line is not at zero stop produce a coast stop.$N"
					    "$N"
					    "";
					N: XIO(ShearSts.No_EStops)TON(ShearSts.StopTimer,?,?);
					RC: "----------------------------------------Coast Stop Conditions----------------------------------------------------------$N"
					    "If the Estop Times out AND the line is not at Zero Speed then create a Coast Stop$N"
					    "If the Coast Stop PB is pressed then create a Coast$N"
					    "";
					N: [XIC(ShearSts.StopTimer.DN) ,XIC(Shear_CoastStop) XIO(ShearSts.ResetInput) ]OTE(Shear_CoastStop);
					RC: "------------------System Coast Stop ----------------------------------------------------------------------$N"
					    "$N"
					    "";
					N: XIO(Shear_CoastStop)OTE(ShearSts.CoastStop);
					RC: "------------ Shear. Die Accelerator Drives OFF -----------------------------------------$N"
					    "Drives that should be commanded to Estop when the Shear. Estop is pressed$N"
					    "Shear. Die Accelerator";
					N: XIC(SrDie_DrvsOff)OTE(Drives_Off.4);
					RC: "---------- Shear. Drives OFF --------------------------------------------";
					N: XIC(Drives_Off.4)OTE(ShearSts.All_Drives_Off);
			END_ROUTINE

			ROUTINE MainRoutine 
					N: NOP();
					N: OTU(ChgMe);
					N: AFI()[XIC(OS1_S1_ModFlt) XIC(OS2_S1_ModFlt) XIC(OS3_S1_ModFlt) XIC(OS4N_S1_ModFlt) XIC(OS4S_S1_ModFlt) XIC(OS5_S1_ModFlt) XIC(OS6_S1_ModFlt) ,XIC(OS8_S1_ModFlt) XIC(OS9_S1_ModFlt) XIC(OS11_S1_ModFlt) XIC(OS13_S1_ModFlt) XIC(OS14_S1_ModFlt) XIC(OS15_S1_ModFlt) XIC(OS16_S1_ModFlt) ]NOP();
					N: AFI()[XIC(A1_S20_ModFlt) XIC(A1_S21_ModFlt) XIC(C1_S12_ModFlt) XIC(CHPLC_S1_ModFlt) XIC(CHPLC_S2_ModFlt) XIC(CHPLC_S3_ModFlt) XIC(CHPLC_S4_ModFlt) XIC(CHPLC_S5_ModFlt) ,XIC(CHPLC_S6_ModFlt) XIC(D1_S12_ModFlt) XIC(DPD_S14_ModFlt) XIC(DPD_S15_ModFlt) XIC(E1_S10_ModFlt) XIC(F1_S19_ModFlt) XIC(F1_S20_ModFlt) XIC(G1_S11_ModFlt) ,XIC(G1_S12_ModFlt) XIC(H1_S5_ModFlt) XIC(H1_S6_ModFlt) XIC(SDPLC_S1_ModFlt) XIC(SDPLC_S2_ModFlt) XIC(VS2_S10_ModFlt) ]NOP();
					N: AFI()[XIC(MCC1_S1_ModFlt) XIC(MCC1_S6_ModFlt) XIC(MCC2_S1_ModFlt) XIC(MCC2_S2_ModFlt) XIC(MCC3_S1_ModFlt) XIC(MCC3_S3_ModFlt) XIC(MCC3_S4_ModFlt) XIC(MCC4_S1_ModFlt) XIC(MCC4_S3_ModFlt) ,XIC(MCC4_S4_ModFlt) XIC(MCC5_S1_ModFlt) XIC(MCC5_S3_ModFlt) XIC(MCC5_S4_ModFlt) XIC(MCC5_S5_ModFlt) ]NOP();
					N: AFI()XIC(Machine_HB_Flt)XIC(Shear_HB_Flt)XIC(Citect_HB_Flt)NOP();
					N: AFI()XIC(Sfty_InstrFlts0_CTC)XIC(Sfty_InstrFlts1_CTC)XIC(Sfty_InstrFlts2_CTC)XIC(Sfty_ModFlts0_CTC)XIC(Sfty_ModFlts1_CTC)XIC(Sfty_ModFlts2_CTC)NOP();
					N: AFI()XIC(Sfty_InstrFlts0_CTL)XIC(Sfty_InstrFlts1_CTL)XIC(Sfty_InstrFlts2_CTL)XIC(Sfty_ModFlts0_CTL)XIC(Sfty_ModFlts1_CTL)XIC(Sfty_ModFlts2_CTL)NOP();
					N: AFI()XIC(Sfty_InstrFlts0_Total)XIC(Sfty_InstrFlts1_Total)XIC(Sfty_InstrFlts2_Total)XIC(Sfty_ModFlts0_Total)XIC(Sfty_ModFlts1_Total)XIC(Sfty_ModFlts2_Total)NOP();
					N: JSR(zDiagnostic,0);
					N: JSR(A01_SftyModFlts_OS,0);
					N: JSR(A02_SftyModFlts_GenIO,0);
					N: JSR(A03_SftyModFlts_MCC,0);
					N: JSR(B00_Line_Logic,0);
					N: JSR(C00_Shear_Logic,0);
			END_ROUTINE

			ROUTINE zDiagnostic (Description := "Diagnostics")
					RC: "********************************************************************************                                              $N"
					    "$T$T$TDiagnostic File$N"
					    "This file is used to do diagnostic utilities to aid in troubleshooting.$N"
					    "********************************************************************************";
					N: NOP();
					RC: "---------- Temporary Test Bits ----------$N"
					    "Use these bits for inserting temporary code: $N"
					    "Tag Should include programmers initials, company, aliased to Diag_Tmp.Bit$N"
					    "Tag Description should include DATE of edit$N"
					    "$N"
					    "**** Remove all temporary bits when finished****";
					N: [OTL(CC) OTL(FUTURE) OTL(Diag_Tmp.2) OTL(Diag_Tmp.3) OTL(Darin_M_Safety_Test_Bit) ,OTU(DAM) OTL(Diag_Tmp.5) OTL(Diag_Tmp.6) OTL(Diag_Tmp.7) ,OTL(Diag_Tmp.8) OTL(Diag_Tmp.9) OTL(Diag_Tmp.10) OTL(Diag_Tmp.11) ];
			END_ROUTINE

	END_PROGRAM

	TASK Periodic_0050ms (Type := PERIODIC,
	                      Class := Standard,
	                      Rate := 50,
	                      Priority := 11,
	                      Watchdog := 500,
	                      DisableUpdateOutputs := No,
	                      InhibitTask := No)
			Comms;
			CardSts;
	END_TASK

	TASK SafetyTask (Type := PERIODIC,
	                 Class := Safety,
	                 Rate := 50,
	                 Priority := 10,
	                 Watchdog := 50,
	                 DisableUpdateOutputs := No,
	                 InhibitTask := No)
			System;
			Estops;
			SafeOff;
			Starters;
			Solenoid_Pwr;
	END_TASK

CONFIG ASCII(XONXOFFEnable := 0,
	             DeleteMode := 0,
	             EchoMode := 0,
	             TerminationChars := 65293,
	             AppendChars := 2573,
	             BufferSize := 82) END_CONFIG

CONFIG ControllerDevice END_CONFIG

CONFIG CST(SystemTimeMasterID := 0) END_CONFIG

CONFIG DF1(DuplicateDetection := 1,
	           ErrorDetection := BCC Error,
	           EmbeddedResponseEnable := 0,
	           DF1Mode := Pt to Pt,
	           ACKTimeout := 50,
	           NAKReceiveLimit := 3,
	           ENQTransmitLimit := 3,
	           TransmitRetries := 3,
	           StationAddress := 0,
	           ReplyMessageWait := 5,
	           PollingMode := 1,
	           MasterMessageTransmit := 0,
	           NormalPollNodeFile := "<NA>",
	           NormalPollGroupSize := 0,
	           PriorityPollNodeFile := "<NA>",
	           ActiveStationFile := "<NA>",
	           SlavePollTimeout := 3000,
	           EOTSuppression := 0,
	           MaxStationAddress := 31,
	           TokenHoldFactor := 1,
	           EnableStoreFwd := 0,
	           StoreFwdFile := "<NA>") END_CONFIG

CONFIG ExtendedDevice END_CONFIG

CONFIG FaultLog END_CONFIG

CONFIG FileManager END_CONFIG

CONFIG ICP END_CONFIG

CONFIG PCCC END_CONFIG

CONFIG Redundancy END_CONFIG

CONFIG SafetyController END_CONFIG

CONFIG SerialPort(BaudRate := 19200,
	                  Parity := No Parity,
	                  DataBits := 8 Bits of Data,
	                  StopBits := 1 Stop Bit,
	                  ComDriverId := DF1,
	                  PendingComDriverId := DF1,
	                  RTSOffDelay := 0,
	                  RTSSendDelay := 0,
	                  ControlLine := No Handshake,
	                  PendingControlLine := No Handshake,
	                  RemoteModeChangeFlag := 0,
	                  PendingRemoteModeChangeFlag := 0,
	                  ModeChangeAttentionChar := 27,
	                  PendingModeChangeAttentionChar := 27,
	                  SystemModeCharacter := 83,
	                  PendingSystemModeCharacter := 83,
	                  UserModeCharacter := 85,
	                  PendingUserModeCharacter := 85,
	                  DCDWaitDelay := 0) END_CONFIG

CONFIG TimeSynchronize(Priority1 := 126,
	                                 Priority2 := 127,
	                                 PTPEnable := 1) END_CONFIG

CONFIG UserMemory END_CONFIG

CONFIG WallClockTime(LocalTimeAdjustment := 0,
	                     TimeZone := 0) END_CONFIG

END_CONTROLLER

